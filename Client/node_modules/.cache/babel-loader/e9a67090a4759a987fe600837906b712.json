{"ast":null,"code":"// import axios from \"axios\";\nimport { EMPLOYEE_BASE_REST_API_URL, LOGIN_PATH, REGISTER_PATH, LOGOUT_PATH } from \"./ApiPaths\";\nimport { Response } from \"./Response\"; // const instance = axios.create(\n//     {withCredentials : true}\n// );\n// const axioss = require('axios');\n\nconst instance = require('axios');\n\nconst WEBSOCKETURL = \"ws://localhost:8080/chat\";\nexport class ConnectApi {\n  //  amit (a) {\n  //     console.log(\"pooo\\n\\n\\n\\n\\n\");\n  //     return  axioss.post(EMPLOYEE_BASE_REST_API_URL)\n  //         .then(res => {\n  //             console.log(\"yessss\\n\\n\\n\\n\\n\");\n  //             return new Response(res.data);\n  //         })\n  //         .catch(res => console.log(\"nooooooo\\n\\n\\n\\n\\n\"));\n  // }\n  login(email, password) {\n    return instance.get(LOGIN_PATH, {\n      params: {\n        email: email,\n        password: password\n      }\n    }).then(res => {\n      const websocket = require('ws');\n\n      var ws = new websocket(WEBSOCKETURL); // ws.onopen(TODO AMIT)\n\n      return new Response(res.data);\n    }).catch(res => undefined);\n  }\n\n  logout() {\n    return instance.get(LOGOUT_PATH).then(res => {\n      return new Response(res.data);\n    }).catch(res => undefined);\n  }\n\n  register(email, password, first_name, last_name, birthdate) {\n    return instance.get(REGISTER_PATH, {\n      params: {\n        email: email,\n        pw: password,\n        name: first_name,\n        lastName: last_name,\n        birth_date: birthdate\n      }\n    }).then(res => {\n      // let response = res.data;\n      // let user = new User\n      console.log(res.data.value);\n      console.log(res.data.was_exception);\n      console.log(res.data.message);\n      return Response(res.data);\n    }).catch(res => undefined);\n  }\n\n}","map":{"version":3,"names":["EMPLOYEE_BASE_REST_API_URL","LOGIN_PATH","REGISTER_PATH","LOGOUT_PATH","Response","instance","require","WEBSOCKETURL","ConnectApi","login","email","password","get","params","then","res","websocket","ws","data","catch","undefined","logout","register","first_name","last_name","birthdate","pw","name","lastName","birth_date","console","log","value","was_exception","message"],"sources":["C:/Users/Tom/Desktop/university/thirdYear/semester6/SEWorkshop/TradingSystem/Client/src/API/ConnectApi.js"],"sourcesContent":["// import axios from \"axios\";\r\nimport {EMPLOYEE_BASE_REST_API_URL, LOGIN_PATH, REGISTER_PATH,LOGOUT_PATH} from \"./ApiPaths\";\r\nimport { Response } from \"./Response\";\r\n// const instance = axios.create(\r\n//     {withCredentials : true}\r\n// );\r\n// const axioss = require('axios');\r\nconst instance = require('axios');\r\nconst WEBSOCKETURL = \"ws://localhost:8080/chat\";\r\nexport class ConnectApi {\r\n\r\n    //  amit (a) {\r\n    //     console.log(\"pooo\\n\\n\\n\\n\\n\");\r\n    //     return  axioss.post(EMPLOYEE_BASE_REST_API_URL)\r\n    //         .then(res => {\r\n    //             console.log(\"yessss\\n\\n\\n\\n\\n\");\r\n    //             return new Response(res.data);\r\n    //         })\r\n    //         .catch(res => console.log(\"nooooooo\\n\\n\\n\\n\\n\"));\r\n\r\n    // }\r\n    \r\n    login(email, password) {\r\n        return instance.get(LOGIN_PATH,\r\n            {\r\n                params:{ email: email,\r\n                    password: password,}\r\n                \r\n            })\r\n            .then(res => {\r\n                const websocket = require('ws');\r\n                var ws = new websocket(WEBSOCKETURL);\r\n                // ws.onopen(TODO AMIT)\r\n                return new Response(res.data);\r\n            })\r\n            .catch(res => undefined);\r\n    }\r\n\r\n    logout() {\r\n        return instance.get(LOGOUT_PATH)\r\n            .then(res => {\r\n                \r\n                return new Response(res.data);\r\n            })\r\n            .catch(res => undefined);\r\n    }\r\n    \r\n    register(email, password, first_name, last_name, birthdate) {\r\n        return instance.get(REGISTER_PATH,\r\n            {\r\n                params:{email: email,\r\n                    pw: password,\r\n                    name: first_name,\r\n                    lastName: last_name,\r\n                birth_date : birthdate,}\r\n                \r\n            })\r\n            .then(res => {\r\n                // let response = res.data;\r\n                // let user = new User\r\n                console.log(res.data.value);\r\n                console.log(res.data.was_exception);\r\n                console.log(res.data.message);\r\n                return Response(res.data);\r\n            })\r\n            .catch(res => undefined);\r\n    }\r\n}"],"mappings":"AAAA;AACA,SAAQA,0BAAR,EAAoCC,UAApC,EAAgDC,aAAhD,EAA8DC,WAA9D,QAAgF,YAAhF;AACA,SAASC,QAAT,QAAyB,YAAzB,C,CACA;AACA;AACA;AACA;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,OAAD,CAAxB;;AACA,MAAMC,YAAY,GAAG,0BAArB;AACA,OAAO,MAAMC,UAAN,CAAiB;EAEpB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EAEAC,KAAK,CAACC,KAAD,EAAQC,QAAR,EAAkB;IACnB,OAAON,QAAQ,CAACO,GAAT,CAAaX,UAAb,EACH;MACIY,MAAM,EAAC;QAAEH,KAAK,EAAEA,KAAT;QACHC,QAAQ,EAAEA;MADP;IADX,CADG,EAMFG,IANE,CAMGC,GAAG,IAAI;MACT,MAAMC,SAAS,GAAGV,OAAO,CAAC,IAAD,CAAzB;;MACA,IAAIW,EAAE,GAAG,IAAID,SAAJ,CAAcT,YAAd,CAAT,CAFS,CAGT;;MACA,OAAO,IAAIH,QAAJ,CAAaW,GAAG,CAACG,IAAjB,CAAP;IACH,CAXE,EAYFC,KAZE,CAYIJ,GAAG,IAAIK,SAZX,CAAP;EAaH;;EAEDC,MAAM,GAAG;IACL,OAAOhB,QAAQ,CAACO,GAAT,CAAaT,WAAb,EACFW,IADE,CACGC,GAAG,IAAI;MAET,OAAO,IAAIX,QAAJ,CAAaW,GAAG,CAACG,IAAjB,CAAP;IACH,CAJE,EAKFC,KALE,CAKIJ,GAAG,IAAIK,SALX,CAAP;EAMH;;EAEDE,QAAQ,CAACZ,KAAD,EAAQC,QAAR,EAAkBY,UAAlB,EAA8BC,SAA9B,EAAyCC,SAAzC,EAAoD;IACxD,OAAOpB,QAAQ,CAACO,GAAT,CAAaV,aAAb,EACH;MACIW,MAAM,EAAC;QAACH,KAAK,EAAEA,KAAR;QACHgB,EAAE,EAAEf,QADD;QAEHgB,IAAI,EAAEJ,UAFH;QAGHK,QAAQ,EAAEJ,SAHP;QAIPK,UAAU,EAAGJ;MAJN;IADX,CADG,EASFX,IATE,CASGC,GAAG,IAAI;MACT;MACA;MACAe,OAAO,CAACC,GAAR,CAAYhB,GAAG,CAACG,IAAJ,CAASc,KAArB;MACAF,OAAO,CAACC,GAAR,CAAYhB,GAAG,CAACG,IAAJ,CAASe,aAArB;MACAH,OAAO,CAACC,GAAR,CAAYhB,GAAG,CAACG,IAAJ,CAASgB,OAArB;MACA,OAAO9B,QAAQ,CAACW,GAAG,CAACG,IAAL,CAAf;IACH,CAhBE,EAiBFC,KAjBE,CAiBIJ,GAAG,IAAIK,SAjBX,CAAP;EAkBH;;AAzDmB"},"metadata":{},"sourceType":"module"}