{"ast":null,"code":"// import axios from \"axios\";\nimport { EMPLOYEE_BASE_REST_API_URL, FIND_PRODUCT_INFORMATION, FIND_PRODUCTS_BY_NAME, FIND_PRODUCTS_BY_CATEGORY, FIND_PRODUCTS_BY_KEYWORDS, ADD_PRODUCT_TO_CART, EDIT_PRODUCT_QUANTITY_IN_CART, REMOVE_PRODUCT_FROM_CART, ADD_PRODUCT_REVIEW, RATE_PRODUCT, EDIT_PRODUCT_NAME, EDIT_PRODUCT_PRICE, EDIT_PRODUCT_CATEGORY, EDIT_PRODUCT_KEY_WORDS, LOGIN_PATH } from \"./ApiPaths\";\nimport { Response } from \"./Response\";\nimport { Product } from \"../ServiceObjects/Product\"; // const instance = axios.create(\n//     {withCredentials : true}\n// );\n\nconst instance = require('axios');\n\nconst response_obj = new Response(\"\", \"\");\nexport class ProductApi {\n  testtttt(a) {\n    return instance.get(EMPLOYEE_BASE_REST_API_URL, {\n      params: {\n        a: a\n      }\n    }).then(res => {\n      console.log(\"this is the answer\\n\\n\" + res.data.value);\n      return new Response(res.data);\n    }).catch(res => console.log(\"fuckkkkk\\n\\n\"));\n  }\n\n  find_product_information(product_id) {\n    return instance.get(FIND_PRODUCT_INFORMATION, {\n      params: {\n        product_id: product_id\n      }\n    }).then(res => {\n      let response = res.data;\n      let product_info = new Product(response.value);\n      return response_obj.create(product_info, response.message);\n    }).catch(res => undefined);\n  }\n\n  find_product_by_name(product_name) {\n    return instance.get(FIND_PRODUCTS_BY_NAME, {\n      params: {\n        product_id: product_id\n      }\n    }).then(res => {\n      let response = res.data; //traverse the products and create product for each element on the list\n      //create response with the list of products\n\n      return new Response(res.data);\n    }).catch(res => undefined);\n  }\n\n  find_product_by_category(product_category) {\n    return instance.post(FIND_PRODUCTS_BY_CATEGORY, {\n      product_category: product_category\n    }).then(res => {\n      //traverse the products and create product for each element on the list\n      //create response with the list of products\n      return new Response(res.data);\n    }).catch(res => undefined);\n  }\n\n  find_product_by_keywords(product_keywords) {\n    return instance.post(FIND_PRODUCTS_BY_KEYWORDS, {\n      product_keywords: product_keywords\n    }).then(res => {\n      //traverse the products and create product for each element on the list\n      //create response with the list of products\n      return new Response(res.data);\n    }).catch(res => undefined);\n  }\n\n  add_product_to_cart(store_id, product_id, quantity) {\n    return instance.post(ADD_PRODUCT_TO_CART, {\n      store_id: store_id,\n      product_id: product_id,\n      quantity: quantity\n    }).then(res => {\n      return new Response(res.data);\n    }).catch(res => undefined);\n  }\n\n  edit_product_quantity_in_cart(store_id, product_id, quantity) {\n    return instance.post(EDIT_PRODUCT_QUANTITY_IN_CART, {\n      store_id: store_id,\n      product_id: product_id,\n      quantity: quantity\n    }).then(res => {\n      return new Response(res.data);\n    }).catch(res => undefined);\n  }\n\n  remove_product_from_cart(store_id, product_id) {\n    return instance.post(REMOVE_PRODUCT_FROM_CART, {\n      store_id: store_id,\n      product_id: product_id\n    }).then(res => {\n      return new Response(res.data);\n    }).catch(res => undefined);\n  }\n\n  add_product_review(product_id, store_id, review) {\n    return instance.post(ADD_PRODUCT_REVIEW, {\n      product_id: product_id,\n      store_id: store_id,\n      review: review\n    }).then(res => {\n      return new Response(res.data);\n    }).catch(res => undefined);\n  }\n\n  rate_product(product_id, store_id, rate) {\n    return instance.post(RATE_PRODUCT, {\n      product_id: product_id,\n      store_id: store_id,\n      rate: rate\n    }).then(res => {\n      return new Response(res.data);\n    }).catch(res => undefined);\n  }\n\n  edit_product_name(product_id, store_id, name) {\n    return instance.post(EDIT_PRODUCT_NAME, {\n      product_id: product_id,\n      store_id: store_id,\n      name: name\n    }).then(res => {\n      return new Response(res.data);\n    }).catch(res => undefined);\n  }\n\n  edit_product_price(product_id, store_id, price) {\n    return instance.post(EDIT_PRODUCT_PRICE, {\n      product_id: product_id,\n      store_id: store_id,\n      price: price\n    }).then(res => {\n      return new Response(res.data);\n    }).catch(res => undefined);\n  }\n\n  edit_product_category(product_id, store_id, category) {\n    return instance.post(EDIT_PRODUCT_CATEGORY, {\n      product_id: product_id,\n      store_id: store_id,\n      category: category\n    }).then(res => {\n      return new Response(res.data);\n    }).catch(res => undefined);\n  }\n\n  edit_product_key_words(product_id, store_id, key_words) {\n    return instance.post(EDIT_PRODUCT_KEY_WORDS, {\n      product_id: product_id,\n      store_id: store_id,\n      key_words: key_words\n    }).then(res => {\n      return new Response(res.data);\n    }).catch(res => undefined);\n  }\n\n}","map":{"version":3,"names":["EMPLOYEE_BASE_REST_API_URL","FIND_PRODUCT_INFORMATION","FIND_PRODUCTS_BY_NAME","FIND_PRODUCTS_BY_CATEGORY","FIND_PRODUCTS_BY_KEYWORDS","ADD_PRODUCT_TO_CART","EDIT_PRODUCT_QUANTITY_IN_CART","REMOVE_PRODUCT_FROM_CART","ADD_PRODUCT_REVIEW","RATE_PRODUCT","EDIT_PRODUCT_NAME","EDIT_PRODUCT_PRICE","EDIT_PRODUCT_CATEGORY","EDIT_PRODUCT_KEY_WORDS","LOGIN_PATH","Response","Product","instance","require","response_obj","ProductApi","testtttt","a","get","params","then","res","console","log","data","value","catch","find_product_information","product_id","response","product_info","create","message","undefined","find_product_by_name","product_name","find_product_by_category","product_category","post","find_product_by_keywords","product_keywords","add_product_to_cart","store_id","quantity","edit_product_quantity_in_cart","remove_product_from_cart","add_product_review","review","rate_product","rate","edit_product_name","name","edit_product_price","price","edit_product_category","category","edit_product_key_words","key_words"],"sources":["C:/Users/Tom/Desktop/university/thirdYear/semester6/SEWorkshop/TradingSystem/Client/src/API/ProductApi.js"],"sourcesContent":["// import axios from \"axios\";\r\nimport {EMPLOYEE_BASE_REST_API_URL,  FIND_PRODUCT_INFORMATION, FIND_PRODUCTS_BY_NAME, FIND_PRODUCTS_BY_CATEGORY,FIND_PRODUCTS_BY_KEYWORDS \r\n    ,ADD_PRODUCT_TO_CART, EDIT_PRODUCT_QUANTITY_IN_CART,REMOVE_PRODUCT_FROM_CART, ADD_PRODUCT_REVIEW, RATE_PRODUCT, EDIT_PRODUCT_NAME, EDIT_PRODUCT_PRICE, EDIT_PRODUCT_CATEGORY, EDIT_PRODUCT_KEY_WORDS, LOGIN_PATH} from \"./ApiPaths\";\r\nimport { Response } from \"./Response\";\r\nimport { Product } from \"../ServiceObjects/Product\";\r\n// const instance = axios.create(\r\n//     {withCredentials : true}\r\n// );\r\nconst instance = require('axios');\r\n\r\nconst response_obj = new Response(\"\",\"\");\r\n\r\n\r\n\r\nexport class ProductApi {\r\n    testtttt(a) {\r\n        return instance.get(EMPLOYEE_BASE_REST_API_URL, \r\n            {\r\n                params:{a : a}\r\n            })\r\n            .then(res => {\r\n                console.log(\"this is the answer\\n\\n\"+res.data.value)\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => console.log(\"fuckkkkk\\n\\n\"));\r\n    }\r\n    find_product_information(product_id) {\r\n        return instance.get(FIND_PRODUCT_INFORMATION, \r\n            {\r\n                params:{product_id: product_id,}\r\n                \r\n            })\r\n            .then(res => {\r\n                let response = res.data;\r\n                let product_info = new Product(response.value);\r\n                return response_obj.create(product_info, response.message);\r\n            })\r\n            .catch(res => undefined);\r\n    }\r\n    find_product_by_name(product_name) {\r\n        return instance.get(FIND_PRODUCTS_BY_NAME,\r\n            {\r\n                params:{product_id: product_id,}\r\n                \r\n            })\r\n            .then(res => {\r\n                let response = res.data;\r\n                //traverse the products and create product for each element on the list\r\n                //create response with the list of products\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => undefined);\r\n    }\r\n\r\n    find_product_by_category(product_category) {\r\n        return instance.post(FIND_PRODUCTS_BY_CATEGORY,\r\n            {\r\n                product_category: product_category,\r\n            })\r\n            .then(res => {\r\n                //traverse the products and create product for each element on the list\r\n                //create response with the list of products\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => undefined);\r\n    }\r\n    find_product_by_keywords(product_keywords) {\r\n        return instance.post(FIND_PRODUCTS_BY_KEYWORDS,\r\n            {\r\n                product_keywords: product_keywords,\r\n            })\r\n            .then(res => {\r\n                //traverse the products and create product for each element on the list\r\n                //create response with the list of products\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => undefined);\r\n    }\r\n\r\n    add_product_to_cart(store_id, product_id, quantity) {\r\n        return instance.post(ADD_PRODUCT_TO_CART,\r\n            {\r\n                store_id: store_id,\r\n                product_id: product_id,\r\n                quantity: quantity,\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => undefined);\r\n    }\r\n\r\n    edit_product_quantity_in_cart(store_id, product_id, quantity) {\r\n        return instance.post(EDIT_PRODUCT_QUANTITY_IN_CART,\r\n            {\r\n                store_id: store_id,\r\n                product_id: product_id,\r\n                quantity: quantity,\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => undefined);\r\n    }\r\n\r\n    remove_product_from_cart(store_id, product_id) {\r\n        return instance.post(REMOVE_PRODUCT_FROM_CART,\r\n            {\r\n                store_id: store_id,\r\n                product_id: product_id,\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => undefined);\r\n    }\r\n    \r\n\r\n    add_product_review(product_id, store_id, review) {\r\n        return instance.post(ADD_PRODUCT_REVIEW,\r\n            {\r\n                product_id: product_id,\r\n                store_id: store_id,\r\n                review : review,\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => undefined);\r\n    }\r\n\r\n    rate_product(product_id, store_id, rate) {\r\n        return instance.post(RATE_PRODUCT,\r\n            {\r\n                product_id: product_id,\r\n                store_id: store_id,\r\n                rate : rate,\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => undefined);\r\n    }\r\n\r\n    edit_product_name(product_id, store_id, name) {\r\n        return instance.post(EDIT_PRODUCT_NAME,\r\n            {\r\n                product_id: product_id,\r\n                store_id: store_id,\r\n                name : name,\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => undefined);\r\n    }\r\n\r\n    edit_product_price(product_id, store_id, price) {\r\n        return instance.post(EDIT_PRODUCT_PRICE,\r\n            {\r\n                product_id: product_id,\r\n                store_id: store_id,\r\n                price : price,\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => undefined);\r\n    }\r\n    edit_product_category(product_id, store_id, category) {\r\n        return instance.post(EDIT_PRODUCT_CATEGORY,\r\n            {\r\n                product_id: product_id,\r\n                store_id: store_id,\r\n                category : category,\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => undefined);\r\n    }\r\n    edit_product_key_words(product_id, store_id, key_words) {\r\n        return instance.post(EDIT_PRODUCT_KEY_WORDS,\r\n            {\r\n                product_id: product_id,\r\n                store_id: store_id,\r\n                key_words : key_words,\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => undefined);\r\n    }\r\n\r\n    \r\n    \r\n    \r\n   \r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}