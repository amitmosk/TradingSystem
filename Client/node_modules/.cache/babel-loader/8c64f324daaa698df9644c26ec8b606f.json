{"ast":null,"code":"import axios from \"axios\";\nimport { EMPLOYEE_BASE_REST_API_URL, LOGIN_PATH, REGISTER_PATH, LOGOUT_PATH } from \"./ApiPaths\";\nimport { Response } from \"./Response\";\nconst instance = axios.create({\n  withCredentials: true\n});\n\nconst axioss = require('axios');\n\nconst WEBSOCKETURL = \"ws://localhost:8080/chat\";\nexport class ConnectApi {\n  amit(a) {\n    console.log(\"pooo\\n\\n\\n\\n\\n\");\n    return axioss.post(EMPLOYEE_BASE_REST_API_URL).then(res => {\n      console.log(\"yessss\\n\\n\\n\\n\\n\");\n      return new Response(res.data);\n    }).catch(res => console.log(\"nooooooo\\n\\n\\n\\n\\n\"));\n  }\n\n  Login(email, password) {\n    return instance.post(LOGIN_PATH, {\n      email: email,\n      password: password\n    }).then(res => {\n      const websocket = require('ws');\n\n      var ws = new websocket(WEBSOCKETURL);\n      ws.onopen;\n      return new Response(res.data);\n    }).catch(res => undefined);\n  }\n\n  Logout() {\n    return instance.get(LOGOUT_PATH).then(res => {\n      return new Response(res.data);\n    }).catch(res => undefined);\n  }\n\n  Register(email, password, first_name, last_name) {\n    return instance.post(REGISTER_PATH, {\n      email: email,\n      password: password,\n      first_name: first_name,\n      last_name: last_name\n    }).then(res => {\n      return Response(res.data);\n    }).catch(res => undefined);\n  }\n\n}","map":{"version":3,"names":["axios","EMPLOYEE_BASE_REST_API_URL","LOGIN_PATH","REGISTER_PATH","LOGOUT_PATH","Response","instance","create","withCredentials","axioss","require","WEBSOCKETURL","ConnectApi","amit","a","console","log","post","then","res","data","catch","Login","email","password","websocket","ws","onopen","undefined","Logout","get","Register","first_name","last_name"],"sources":["C:/Users/Tom/Desktop/university/thirdYear/semester6/SEWorkshop/TradingSystem/Client/src/API/ConnectApi.js"],"sourcesContent":["import axios from \"axios\";\r\nimport {EMPLOYEE_BASE_REST_API_URL, LOGIN_PATH, REGISTER_PATH,LOGOUT_PATH} from \"./ApiPaths\";\r\nimport { Response } from \"./Response\";\r\nconst instance = axios.create(\r\n    {withCredentials : true}\r\n);\r\nconst axioss = require('axios');\r\nconst WEBSOCKETURL = \"ws://localhost:8080/chat\";\r\nexport class ConnectApi {\r\n\r\n     amit (a) {\r\n        console.log(\"pooo\\n\\n\\n\\n\\n\");\r\n        return  axioss.post(EMPLOYEE_BASE_REST_API_URL)\r\n            .then(res => {\r\n                console.log(\"yessss\\n\\n\\n\\n\\n\");\r\n                return new Response(res.data);\r\n            })\r\n            .catch(res => console.log(\"nooooooo\\n\\n\\n\\n\\n\"));\r\n\r\n    }\r\n    \r\n    Login(email, password) {\r\n        return instance.post(LOGIN_PATH,\r\n            {\r\n                email: email,\r\n                password: password,\r\n            })\r\n            .then(res => {\r\n                const websocket = require('ws');\r\n                var ws = new websocket(WEBSOCKETURL);\r\n                ws.onopen\r\n                return new Response(res.data);\r\n            })\r\n            .catch(res => undefined);\r\n    }\r\n\r\n    Logout() {\r\n        return instance.get(LOGOUT_PATH)\r\n            .then(res => {\r\n                return new Response(res.data);\r\n            })\r\n            .catch(res => undefined);\r\n    }\r\n    \r\n    Register(email, password, first_name, last_name) {\r\n        return instance.post(REGISTER_PATH,\r\n            {\r\n                email: email,\r\n                password: password,\r\n                first_name: first_name,\r\n                last_name: last_name,\r\n            })\r\n            .then(res => {\r\n                return Response(res.data);\r\n            })\r\n            .catch(res => undefined);\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,0BAAR,EAAoCC,UAApC,EAAgDC,aAAhD,EAA8DC,WAA9D,QAAgF,YAAhF;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,MAAMC,QAAQ,GAAGN,KAAK,CAACO,MAAN,CACb;EAACC,eAAe,EAAG;AAAnB,CADa,CAAjB;;AAGA,MAAMC,MAAM,GAAGC,OAAO,CAAC,OAAD,CAAtB;;AACA,MAAMC,YAAY,GAAG,0BAArB;AACA,OAAO,MAAMC,UAAN,CAAiB;EAEnBC,IAAI,CAAEC,CAAF,EAAK;IACNC,OAAO,CAACC,GAAR,CAAY,gBAAZ;IACA,OAAQP,MAAM,CAACQ,IAAP,CAAYhB,0BAAZ,EACHiB,IADG,CACEC,GAAG,IAAI;MACTJ,OAAO,CAACC,GAAR,CAAY,kBAAZ;MACA,OAAO,IAAIX,QAAJ,CAAac,GAAG,CAACC,IAAjB,CAAP;IACH,CAJG,EAKHC,KALG,CAKGF,GAAG,IAAIJ,OAAO,CAACC,GAAR,CAAY,oBAAZ,CALV,CAAR;EAOH;;EAEDM,KAAK,CAACC,KAAD,EAAQC,QAAR,EAAkB;IACnB,OAAOlB,QAAQ,CAACW,IAAT,CAAcf,UAAd,EACH;MACIqB,KAAK,EAAEA,KADX;MAEIC,QAAQ,EAAEA;IAFd,CADG,EAKFN,IALE,CAKGC,GAAG,IAAI;MACT,MAAMM,SAAS,GAAGf,OAAO,CAAC,IAAD,CAAzB;;MACA,IAAIgB,EAAE,GAAG,IAAID,SAAJ,CAAcd,YAAd,CAAT;MACAe,EAAE,CAACC,MAAH;MACA,OAAO,IAAItB,QAAJ,CAAac,GAAG,CAACC,IAAjB,CAAP;IACH,CAVE,EAWFC,KAXE,CAWIF,GAAG,IAAIS,SAXX,CAAP;EAYH;;EAEDC,MAAM,GAAG;IACL,OAAOvB,QAAQ,CAACwB,GAAT,CAAa1B,WAAb,EACFc,IADE,CACGC,GAAG,IAAI;MACT,OAAO,IAAId,QAAJ,CAAac,GAAG,CAACC,IAAjB,CAAP;IACH,CAHE,EAIFC,KAJE,CAIIF,GAAG,IAAIS,SAJX,CAAP;EAKH;;EAEDG,QAAQ,CAACR,KAAD,EAAQC,QAAR,EAAkBQ,UAAlB,EAA8BC,SAA9B,EAAyC;IAC7C,OAAO3B,QAAQ,CAACW,IAAT,CAAcd,aAAd,EACH;MACIoB,KAAK,EAAEA,KADX;MAEIC,QAAQ,EAAEA,QAFd;MAGIQ,UAAU,EAAEA,UAHhB;MAIIC,SAAS,EAAEA;IAJf,CADG,EAOFf,IAPE,CAOGC,GAAG,IAAI;MACT,OAAOd,QAAQ,CAACc,GAAG,CAACC,IAAL,CAAf;IACH,CATE,EAUFC,KAVE,CAUIF,GAAG,IAAIS,SAVX,CAAP;EAWH;;AAhDmB"},"metadata":{},"sourceType":"module"}