[{"C:\\study\\Market1\\TradingSystem\\Client\\src\\index.js":"1","C:\\study\\Market1\\TradingSystem\\Client\\src\\reportWebVitals.js":"2","C:\\study\\Market1\\TradingSystem\\Client\\src\\App.js":"3","C:\\study\\Market1\\TradingSystem\\Client\\src\\ServiceObjects\\User.js":"4","C:\\study\\Market1\\TradingSystem\\Client\\src\\API\\ConnectApi.js":"5","C:\\study\\Market1\\TradingSystem\\Client\\src\\API\\UserApi.js":"6","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\Register.js":"7","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\AddDiscount.js":"8","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\Login.js":"9","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\SupplyPage.js":"10","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\AdminPage.js":"11","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\ShoppingCart.js":"12","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\StorePage.js":"13","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\HomePageSearch.js":"14","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\ProductPageNevigator.js":"15","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\StoreManagment.js":"16","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\ViewStat.js":"17","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\AdminSendMessage.js":"18","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\ProductPage.js":"19","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\EditProfilePremium.js":"20","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\ManagerViewStoreQuestions.js":"21","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\EditProfile.js":"22","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\HomePage.js":"23","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\UserViewQuestions.js":"24","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\ViewStorePurchaseHistory.js":"25","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\AdminViewUserQuestions.js":"26","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\ViewUserPurchaseHistory.js":"27","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\ViewStaffInformation.js":"28","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\ViewStorePurchaseHistoryNevigator.js":"29","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\MangerViewStoreQuestionsNevigator.js":"30","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\AllStores.js":"31","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\MyStores.js":"32","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\NavBar.js":"33","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\ManagerPermissions.js":"34","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\PaymentPage.js":"35","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\StoreManagmentNevigator.js":"36","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\ViewStaffInformationNevigator.js":"37","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\BuyCart.js":"38","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\Notifications.js":"39","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\StorePageNevigator.js":"40","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\AdminViewUserPurchaseHistory.js":"41","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\StorePolicies.js":"42","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\AddPurchase.js":"43","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\AdminViewStorePurchaseHistory.js":"44","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\ViewRules.js":"45","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\CreatePredict.js":"46","C:\\study\\Market1\\TradingSystem\\Client\\src\\API\\Response.js":"47","C:\\study\\Market1\\TradingSystem\\Client\\src\\ServiceObjects\\StoreReview.js":"48","C:\\study\\Market1\\TradingSystem\\Client\\src\\API\\ApiPaths.js":"49","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\FormDialog.js":"50","C:\\study\\Market1\\TradingSystem\\Client\\src\\ServiceObjects\\Utils.js":"51","C:\\study\\Market1\\TradingSystem\\Client\\src\\API\\StoreApi.js":"52","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\ControlledRadioButtonsGroup.js":"53","C:\\study\\Market1\\TradingSystem\\Client\\src\\API\\AdminApi.js":"54","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\SocketProvider.js":"55","C:\\study\\Market1\\TradingSystem\\Client\\src\\API\\CartApi.js":"56","C:\\study\\Market1\\TradingSystem\\Client\\src\\API\\PoliciesApi.js":"57","C:\\study\\Market1\\TradingSystem\\Client\\src\\API\\ProductApi.js":"58","C:\\study\\Market1\\TradingSystem\\Client\\src\\ServiceObjects\\Supply.js":"59","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\StoreProductsTable.js":"60","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\Rating.js":"61","C:\\study\\Market1\\TradingSystem\\Client\\src\\ServiceObjects\\Question.js":"62","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\FormDialogPermissions.js":"63","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\MenuListComposition.js":"64","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\BasicTable.js":"65","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\StoreManagmentProductsTable.js":"66","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\HomeProductsTable.js":"67","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\AllStoresTable.js":"68","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\MyStoresTable.js":"69","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\SimpleBadge.js":"70","C:\\study\\Market1\\TradingSystem\\Client\\src\\ServiceObjects\\Payment.js":"71","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\AccountMenu.js":"72","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\ViewBidsStatus.js":"73","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\InteractiveList.js":"74","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\AddPredictFormDialog.js":"75","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\CollapsibleTable.js":"76","C:\\study\\Market1\\TradingSystem\\Client\\src\\ServiceObjects\\Product.js":"77","C:\\study\\Market1\\TradingSystem\\Client\\src\\ServiceObjects\\Store.js":"78","C:\\study\\Market1\\TradingSystem\\Client\\src\\ServiceObjects\\Cart.js":"79","C:\\study\\Market1\\TradingSystem\\Client\\src\\ServiceObjects\\UserPurchase.js":"80","C:\\study\\Market1\\TradingSystem\\Client\\src\\ServiceObjects\\ProductReview.js":"81","C:\\study\\Market1\\TradingSystem\\Client\\src\\ServiceObjects\\Statistic.js":"82","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\ViewAppointmentsStatusNevigator.js":"83","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\LinearDeterminate.js":"84","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\ViewAppointmentsStatus.js":"85","C:\\study\\Market1\\TradingSystem\\Client\\src\\ServiceObjects\\Statistics.js":"86"},{"size":1069,"mtime":1655194612352,"results":"87","hashOfConfig":"88"},{"size":375,"mtime":1654597095349,"results":"89","hashOfConfig":"88"},{"size":22175,"mtime":1656340515018,"results":"90","hashOfConfig":"88"},{"size":1491,"mtime":1655197483130,"results":"91","hashOfConfig":"88"},{"size":4125,"mtime":1656345074559,"results":"92","hashOfConfig":"88"},{"size":6693,"mtime":1656342229930,"results":"93","hashOfConfig":"88"},{"size":6801,"mtime":1655292338334,"results":"94","hashOfConfig":"88"},{"size":24783,"mtime":1656164511306,"results":"95","hashOfConfig":"88"},{"size":4358,"mtime":1655375892567,"results":"96","hashOfConfig":"88"},{"size":3778,"mtime":1656069878151,"results":"97","hashOfConfig":"88"},{"size":4890,"mtime":1655375892555,"results":"98","hashOfConfig":"88"},{"size":7052,"mtime":1656069878146,"results":"99","hashOfConfig":"88"},{"size":8237,"mtime":1656069878149,"results":"100","hashOfConfig":"88"},{"size":4670,"mtime":1654597095301,"results":"101","hashOfConfig":"88"},{"size":461,"mtime":1655194612310,"results":"102","hashOfConfig":"88"},{"size":21176,"mtime":1656069878147,"results":"103","hashOfConfig":"88"},{"size":6322,"mtime":1655721632643,"results":"104","hashOfConfig":"88"},{"size":4639,"mtime":1655375892556,"results":"105","hashOfConfig":"88"},{"size":7087,"mtime":1655194612309,"results":"106","hashOfConfig":"88"},{"size":6504,"mtime":1655194612277,"results":"107","hashOfConfig":"88"},{"size":5749,"mtime":1655194612297,"results":"108","hashOfConfig":"88"},{"size":9533,"mtime":1655375892565,"results":"109","hashOfConfig":"88"},{"size":11656,"mtime":1656069878138,"results":"110","hashOfConfig":"88"},{"size":4834,"mtime":1655194612335,"results":"111","hashOfConfig":"88"},{"size":6554,"mtime":1655375892574,"results":"112","hashOfConfig":"88"},{"size":6374,"mtime":1655375892558,"results":"113","hashOfConfig":"88"},{"size":5488,"mtime":1655194612349,"results":"114","hashOfConfig":"88"},{"size":4468,"mtime":1655197483160,"results":"115","hashOfConfig":"88"},{"size":422,"mtime":1655194612347,"results":"116","hashOfConfig":"88"},{"size":445,"mtime":1655194612297,"results":"117","hashOfConfig":"88"},{"size":1695,"mtime":1655375892558,"results":"118","hashOfConfig":"88"},{"size":2212,"mtime":1655194612299,"results":"119","hashOfConfig":"88"},{"size":3440,"mtime":1655375892568,"results":"120","hashOfConfig":"88"},{"size":15965,"mtime":1655197483149,"results":"121","hashOfConfig":"88"},{"size":9874,"mtime":1656069878144,"results":"122","hashOfConfig":"88"},{"size":371,"mtime":1655194612322,"results":"123","hashOfConfig":"88"},{"size":386,"mtime":1655194612341,"results":"124","hashOfConfig":"88"},{"size":4041,"mtime":1656069878136,"results":"125","hashOfConfig":"88"},{"size":4361,"mtime":1655375892568,"results":"126","hashOfConfig":"88"},{"size":955,"mtime":1655197483157,"results":"127","hashOfConfig":"88"},{"size":4127,"mtime":1655375892557,"results":"128","hashOfConfig":"88"},{"size":8572,"mtime":1656336314127,"results":"129","hashOfConfig":"88"},{"size":10164,"mtime":1656164511309,"results":"130","hashOfConfig":"88"},{"size":4112,"mtime":1655375892556,"results":"131","hashOfConfig":"88"},{"size":2133,"mtime":1655197483158,"results":"132","hashOfConfig":"88"},{"size":17169,"mtime":1655375892564,"results":"133","hashOfConfig":"88"},{"size":401,"mtime":1654597095277,"results":"134","hashOfConfig":"88"},{"size":291,"mtime":1654597095285,"results":"135","hashOfConfig":"88"},{"size":7390,"mtime":1656069878116,"results":"136","hashOfConfig":"88"},{"size":2527,"mtime":1656072870864,"results":"137","hashOfConfig":"88"},{"size":4786,"mtime":1656164511302,"results":"138","hashOfConfig":"88"},{"size":16169,"mtime":1656341994479,"results":"139","hashOfConfig":"88"},{"size":1170,"mtime":1655197483142,"results":"140","hashOfConfig":"88"},{"size":3992,"mtime":1656352646146,"results":"141","hashOfConfig":"88"},{"size":2185,"mtime":1655375892570,"results":"142","hashOfConfig":"88"},{"size":1597,"mtime":1656344925137,"results":"143","hashOfConfig":"88"},{"size":11945,"mtime":1656342508783,"results":"144","hashOfConfig":"88"},{"size":9050,"mtime":1656342419380,"results":"145","hashOfConfig":"88"},{"size":689,"mtime":1655194612250,"results":"146","hashOfConfig":"88"},{"size":6164,"mtime":1655194612330,"results":"147","hashOfConfig":"88"},{"size":753,"mtime":1654597095325,"results":"148","hashOfConfig":"88"},{"size":1158,"mtime":1654597095285,"results":"149","hashOfConfig":"88"},{"size":3925,"mtime":1655194612280,"results":"150","hashOfConfig":"88"},{"size":3519,"mtime":1654597095325,"results":"151","hashOfConfig":"88"},{"size":2183,"mtime":1655375892559,"results":"152","hashOfConfig":"88"},{"size":6073,"mtime":1655194612326,"results":"153","hashOfConfig":"88"},{"size":8629,"mtime":1656069878140,"results":"154","hashOfConfig":"88"},{"size":5141,"mtime":1655375892559,"results":"155","hashOfConfig":"88"},{"size":6847,"mtime":1655194612301,"results":"156","hashOfConfig":"88"},{"size":290,"mtime":1655194612315,"results":"157","hashOfConfig":"88"},{"size":799,"mtime":1655194612249,"results":"158","hashOfConfig":"88"},{"size":4394,"mtime":1655375892553,"results":"159","hashOfConfig":"88"},{"size":10476,"mtime":1656069878155,"results":"160","hashOfConfig":"88"},{"size":2774,"mtime":1655197483147,"results":"161","hashOfConfig":"88"},{"size":3171,"mtime":1655197483136,"results":"162","hashOfConfig":"88"},{"size":7213,"mtime":1655197483141,"results":"163","hashOfConfig":"88"},{"size":843,"mtime":1654597095285,"results":"164","hashOfConfig":"88"},{"size":863,"mtime":1654597095285,"results":"165","hashOfConfig":"88"},{"size":445,"mtime":1654597095285,"results":"166","hashOfConfig":"88"},{"size":610,"mtime":1654597095293,"results":"167","hashOfConfig":"88"},{"size":469,"mtime":1654597095285,"results":"168","hashOfConfig":"88"},{"size":1978,"mtime":1655721632637,"results":"169","hashOfConfig":"88"},{"size":342,"mtime":1656069878153,"results":"170","hashOfConfig":"88"},{"size":730,"mtime":1656069878142,"results":"171","hashOfConfig":"88"},{"size":5611,"mtime":1656069878152,"results":"172","hashOfConfig":"88"},{"size":2084,"mtime":1656069878121,"results":"173","hashOfConfig":"88"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"178"},"p8wmca",{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"186"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"178"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"178"},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"178"},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"178"},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"178"},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"178"},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"178"},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"178"},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"178"},{"filePath":"229","messages":"230","suppressedMessages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"178"},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"178"},{"filePath":"240","messages":"241","suppressedMessages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"178"},{"filePath":"244","messages":"245","suppressedMessages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"178"},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"178"},{"filePath":"252","messages":"253","suppressedMessages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"178"},{"filePath":"256","messages":"257","suppressedMessages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"178"},{"filePath":"260","messages":"261","suppressedMessages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"178"},{"filePath":"264","messages":"265","suppressedMessages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"178"},{"filePath":"268","messages":"269","suppressedMessages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"178"},{"filePath":"272","messages":"273","suppressedMessages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"178"},{"filePath":"276","messages":"277","suppressedMessages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"279","messages":"280","suppressedMessages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"178"},{"filePath":"283","messages":"284","suppressedMessages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"286","messages":"287","suppressedMessages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"178"},{"filePath":"290","messages":"291","suppressedMessages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"178"},{"filePath":"294","messages":"295","suppressedMessages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"178"},{"filePath":"298","messages":"299","suppressedMessages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"178"},{"filePath":"302","messages":"303","suppressedMessages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"178"},{"filePath":"306","messages":"307","suppressedMessages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"178"},{"filePath":"310","messages":"311","suppressedMessages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"178"},{"filePath":"314","messages":"315","suppressedMessages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"317","messages":"318","suppressedMessages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"320","messages":"321","suppressedMessages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"178"},{"filePath":"324","messages":"325","suppressedMessages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"178"},{"filePath":"328","messages":"329","suppressedMessages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"178"},{"filePath":"332","messages":"333","suppressedMessages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"178"},{"filePath":"336","messages":"337","suppressedMessages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"178"},{"filePath":"340","messages":"341","suppressedMessages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"178"},{"filePath":"344","messages":"345","suppressedMessages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"178"},{"filePath":"348","messages":"349","suppressedMessages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"178"},{"filePath":"352","messages":"353","suppressedMessages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"355","messages":"356","suppressedMessages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"358","messages":"359","suppressedMessages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"361","messages":"362","suppressedMessages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"364","messages":"365","suppressedMessages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"178"},{"filePath":"368","messages":"369","suppressedMessages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"372"},{"filePath":"373","messages":"374","suppressedMessages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"178"},{"filePath":"377","messages":"378","suppressedMessages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380"},{"filePath":"381","messages":"382","suppressedMessages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"178"},{"filePath":"385","messages":"386","suppressedMessages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"388","messages":"389","suppressedMessages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"372"},{"filePath":"392","messages":"393","suppressedMessages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"372"},{"filePath":"396","messages":"397","suppressedMessages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"399","messages":"400","suppressedMessages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"402","messages":"403","suppressedMessages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"178"},{"filePath":"406","messages":"407","suppressedMessages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"409","messages":"410","suppressedMessages":"411","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"412","messages":"413","suppressedMessages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"178"},{"filePath":"416","messages":"417","suppressedMessages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419","usedDeprecatedRules":"178"},{"filePath":"420","messages":"421","suppressedMessages":"422","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"423","messages":"424","suppressedMessages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"178"},{"filePath":"427","messages":"428","suppressedMessages":"429","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"178"},{"filePath":"431","messages":"432","suppressedMessages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"178"},{"filePath":"435","messages":"436","suppressedMessages":"437","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"438","messages":"439","suppressedMessages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"441","messages":"442","suppressedMessages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444","usedDeprecatedRules":"178"},{"filePath":"445","messages":"446","suppressedMessages":"447","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"178"},{"filePath":"449","messages":"450","suppressedMessages":"451","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452","usedDeprecatedRules":"178"},{"filePath":"453","messages":"454","suppressedMessages":"455","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"178"},{"filePath":"457","messages":"458","suppressedMessages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"178"},{"filePath":"461","messages":"462","suppressedMessages":"463","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"178"},{"filePath":"465","messages":"466","suppressedMessages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468","usedDeprecatedRules":"178"},{"filePath":"469","messages":"470","suppressedMessages":"471","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"472","messages":"473","suppressedMessages":"474","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"475","messages":"476","suppressedMessages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"478","messages":"479","suppressedMessages":"480","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"481","messages":"482","suppressedMessages":"483","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"484","messages":"485","suppressedMessages":"486","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"487","messages":"488","suppressedMessages":"489","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"490","usedDeprecatedRules":"178"},{"filePath":"491","messages":"492","suppressedMessages":"493","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},"C:\\study\\Market1\\TradingSystem\\Client\\src\\index.js",["494","495"],[],"import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n//import 'semantic-ui-css/semantic.min.css';\r\nimport Button from '@mui/material/Button';\r\nimport { User } from './ServiceObjects/User';\r\nimport { ConnectApi } from './API/ConnectApi';\r\nconst connectApi = new ConnectApi();\r\nconst get_online_user  = async () => {\r\n  let response = await connectApi.get_online_user();\r\n  console.log(\"the online userrr\");\r\n  console.log(response.value);\r\n  localStorage.setItem('user', response.value);\r\n}\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App user={get_online_user.bind(this)}/>\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",[],"C:\\study\\Market1\\TradingSystem\\Client\\src\\reportWebVitals.js",[],[],"C:\\study\\Market1\\TradingSystem\\Client\\src\\App.js",["496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514"],[],"import { Component, React } from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter, Link, Route, Router, Routes } from \"react-router-dom\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\";\r\n\r\nimport Login from \"./components/Login\";\r\nimport HomePageSearch from \"./components/HomePageSearch\";\r\nimport Register from \"./components/Register\";\r\nimport Payment from \"./components/PaymentPage\";\r\nimport Supply from \"./components/SupplyPage\";\r\n// import * as React from 'react';\r\n// import ReactDOM from 'react-dom';\r\nimport Button from \"@mui/material/Button\";\r\nimport StorePage from \"./components/StorePage\";\r\nimport ShoppingCart from \"./components/ShoppingCart\";\r\nimport AdminSendMessage from \"./components/AdminSendMessage\";\r\nimport AdminPage from \"./components/AdminPage\";\r\nimport StoreManagment from \"./components/StoreManagment\";\r\nimport { ConnectApi } from \"./API/ConnectApi\";\r\nimport { UserApi } from \"./API/UserApi\";\r\nimport AddDiscount from \"./components/AddDiscount\";\r\nimport EditProfilePremium from \"./components/EditProfilePremium\";\r\nimport EditProfile from \"./components/EditProfile\";\r\nimport ProductPage from \"./components/ProductPage\";\r\nimport HomePage from \"./components/HomePage\";\r\nimport { User } from \"./ServiceObjects/User\";\r\nimport ViewStat from \"./components/ViewStat\";\r\nimport ProductPageNevigator from \"./components/ProductPageNevigator\";\r\nimport AdminViewUserQuestions from \"./components/AdminViewUserQuestions\";\r\nimport ManagerViewStoreQuestions from \"./components/ManagerViewStoreQuestions\";\r\n// import UserPurchaseHistory from './components/UserPurchaseHistory';\r\n// import UserQuestions from './components/UserQuestions';\r\nimport UserViewQuestions from \"./components/UserViewQuestions\";\r\nimport ViewStaffInformation from \"./components/ViewStaffInformation\";\r\nimport ViewStorePurchaseHistory from \"./components/ViewStorePurchaseHistory\";\r\nimport ViewUserPurchaseHistory from \"./components/ViewUserPurchaseHistory\";\r\nimport MangerViewStoreQuestionsNevigator from \"./components/MangerViewStoreQuestionsNevigator\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport StorePageNevigator from \"./components/StorePageNevigator\";\r\nimport StoreManagmentNevigator from \"./components/StoreManagmentNevigator\";\r\nimport ViewStaffInformationNevigator from \"./components/ViewStaffInformationNevigator\";\r\nimport ViewStorePurchaseHistoryNevigator from \"./components/ViewStorePurchaseHistoryNevigator\";\r\nimport AllStores from \"./components/AllStores\";\r\nimport MyStores from \"./components/MyStores\";\r\nimport BuyCart from \"./components/BuyCart\";\r\nimport ManagerPermissions from \"./components/ManagerPermissions\";\r\nimport ViewAppointmentsStatusNevigator from \"./components/ViewAppointmentsStatusNevigator\";\r\nimport Notifications from \"./components/Notifications\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport ViewRules from \"./components/ViewRules\";\r\nimport AddPurchase from \"./components/AddPurchase\";\r\nimport CreatePredict from \"./components/CreatePredict\";\r\nimport StorePolicies from \"./components/StorePolicies\";\r\nimport AdminViewStorePurchaseHistory from \"./components/AdminViewStorePurchaseHistory\";\r\nimport AdminViewUserPurchaseHistory from \"./components/AdminViewUserPurchaseHistory\";\r\nimport ViewBidsStatus from \"./components/ViewBidsStatus\";\r\n\r\nexport function get_user_id() {\r\n  let url = \"http://localhost:8080/get_session_id\";\r\n\r\n  alert(\"called it\")\r\n\r\n  return fetch(url, {\r\n    method: \"GET\",\r\n    mode: \"cors\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  }).then(async (response) => {\r\n    const data = await response.json();\r\n    if (!response.ok) {\r\n      return Promise.reject(data.error);\r\n    }\r\n    return Promise.resolve(data.value);\r\n  });\r\n}\r\nexport default function App() {\r\n  useEffect(() => {\r\n    const session_id = sessionStorage.getItem(\"session_id\");\r\n    if (session_id === null) {\r\n      get_user_id().then((userId) =>\r\n        sessionStorage.setItem(\"session_id\", userId)\r\n      );\r\n    }\r\n  }, []);\r\n  const [snackbar, setSnackbar] = useState(null);\r\n  const handleCloseSnackbar = () => setSnackbar(null);\r\n  const [user, setUser] = useState(User.guest());\r\n  useEffect(() => {\r\n    get_online_user();\r\n  }, []);\r\n\r\n  const connectApi = new ConnectApi();\r\n  const get_online_user = async () => {\r\n    let response = await connectApi.get_online_user();\r\n    console.log(response.value);\r\n    if (!response.was_exception) {\r\n      setUser(response.value);\r\n      setSnackbar({ children: response.message, severity: \"success\" });\r\n    } else {\r\n      setSnackbar({ children: response.message, severity: \"error\" });\r\n    }\r\n  };\r\n  const updateUserState = (user) => {\r\n    console.log(\"in updateUserState\\n\\n\\n\\n\\n\");\r\n    console.log(user);\r\n    setUser(user);\r\n  };\r\n  const get_state = () => {\r\n    return user;\r\n  };\r\n  const [notifications, setNotifications] = useState([\"Shit\"]);\r\n  const save_notification = (notification) => {\r\n    console.log(notification + \"\\n\\n\\n\\n\\n\\n\\n\");\r\n    notifications.push(notification);\r\n    setNotifications(notifications);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <BrowserRouter>\r\n        <NavBar updateUserState={updateUserState} user={user}></NavBar>\r\n\r\n        {/* --------------------------------------From Home Page---------------------------------- */}\r\n\r\n        <Routes>\r\n          <Route\r\n            path=\"/\"\r\n            element={<HomePage user={user} updateUserState={updateUserState} />}\r\n          ></Route>\r\n          <Route\r\n            path=\"/Login\"\r\n            element={\r\n              <Login\r\n                updateUserState={updateUserState}\r\n                user={user}\r\n                save={save_notification}\r\n              />\r\n            }\r\n          ></Route>\r\n          <Route\r\n            path=\"/Register\"\r\n            element={<Register updateUserState={updateUserState} />}\r\n          ></Route>\r\n          <Route\r\n            path=\"/EditProfile\"\r\n            element={\r\n              <EditProfile user={user} updateUserState={updateUserState} />\r\n            }\r\n          ></Route>\r\n          <Route path=\"/ShoppingCart\" element={<ShoppingCart />}></Route>\r\n          <Route\r\n            path=\"/UserViewQuestions\"\r\n            element={<UserViewQuestions />}\r\n          ></Route>\r\n          <Route\r\n            path=\"/Notifications\"\r\n            element={<Notifications notifications={notifications} />}\r\n          ></Route>\r\n\r\n          {/* --------------------------------------Store Page---------------------------------- */}\r\n\r\n          <Route path=\"/StorePage/:id\" element={<StorePageNevigator />}></Route>\r\n          <Route\r\n            path=\"MyStores/StorePage/:id\"\r\n            element={<StorePageNevigator />}\r\n          ></Route>\r\n          <Route\r\n            path=\"/AllStores/StorePage/:id\"\r\n            element={<StorePageNevigator />}\r\n          ></Route>\r\n          {/* <Route\r\n            path=\"/AdminSendMessage\"\r\n            element={<AdminSendMessage />}\r\n          ></Route> */}\r\n          <Route path=\"/AdminPage\" element={<AdminPage />}></Route>\r\n\r\n          {/* -------------------------------------- Admin Page---------------------------------- */}\r\n\r\n          <Route\r\n            path=\"/AdminPage/AdminViewStorePurchaseHistory/:id\"\r\n            element={<AdminViewStorePurchaseHistory />}\r\n          ></Route>\r\n          <Route\r\n            path=\"/AdminPage/AdminViewUserPurchaseHistory/:user_email\"\r\n            element={<AdminViewUserPurchaseHistory />}\r\n          ></Route>\r\n\r\n          {/* -------------------------------------- Store Managment---------------------------------- */}\r\n          <Route\r\n            path=\"/StorePage/:id/StoreManagment\"\r\n            element={<StoreManagmentNevigator />}\r\n          ></Route>\r\n          <Route\r\n            path=\"/MyStores/StorePage/:id/StoreManagment\"\r\n            element={<StoreManagmentNevigator />}\r\n          ></Route>\r\n          <Route\r\n            path=\"/AllStores/StorePage/:id/StoreManagment\"\r\n            element={<StoreManagmentNevigator />}\r\n          ></Route>\r\n\r\n          {/* -------------------------------------- View Bids---------------------------------- */}\r\n          <Route\r\n            path=\"/StorePage/:id/StoreManagment/ViewBidsStatus\"\r\n            element={<ViewBidsStatus />}\r\n          ></Route>\r\n          <Route\r\n            path=\"/MyStores/StorePage/:id/StoreManagment/ViewBidsStatus\"\r\n            element={<ViewBidsStatus />}\r\n          ></Route>\r\n          <Route\r\n            path=\"/AllStores/StorePage/:id/StoreManagment/ViewBidsStatus\"\r\n            element={<ViewBidsStatus />}\r\n          ></Route>\r\n\r\n          {/* -------------------------------------- View Appoitment ---------------------------------- */}\r\n          <Route\r\n            path=\"/StorePage/:id/StoreManagment/ViewAppointmentsStatus\"\r\n            element={<ViewAppointmentsStatusNevigator />}\r\n          ></Route>\r\n          <Route\r\n            path=\"/MyStores/StorePage/:id/StoreManagment/ViewAppointmentsStatus\"\r\n            element={<ViewAppointmentsStatusNevigator />}\r\n          ></Route>\r\n          <Route\r\n            path=\"/AllStores/StorePage/:id/StoreManagment/ViewAppointmentsStatus\"\r\n            element={<ViewAppointmentsStatusNevigator />}\r\n          ></Route>\r\n\r\n          {/* -------------------------------------- Store Policies---------------------------------- */}\r\n          <Route\r\n            path=\"/StorePage/:id/StoreManagment/StorePolicies\"\r\n            element={<StorePolicies />}\r\n          ></Route>\r\n          <Route\r\n            path=\"/AllStores/StorePage/:id/StoreManagment/StorePolicies\"\r\n            element={<StorePolicies />}\r\n          ></Route>\r\n          <Route\r\n            path=\"/MyStores/StorePage/:id/StoreManagment/StorePolicies\"\r\n            element={<StorePolicies />}\r\n          ></Route>\r\n\r\n          {/* -------------------------------------- Manager View Store Questions---------------------------------- */}\r\n          <Route\r\n            path=\"/StorePage/:id/StoreManagment/ManagerViewStoreQuestions\"\r\n            element={<MangerViewStoreQuestionsNevigator />}\r\n          ></Route>\r\n          <Route\r\n            path=\"MyStores/StorePage/:id/StoreManagment/ManagerViewStoreQuestions\"\r\n            element={<MangerViewStoreQuestionsNevigator />}\r\n          ></Route>\r\n          <Route\r\n            path=\"AllStores/StorePage/:id/StoreManagment/ManagerViewStoreQuestions\"\r\n            element={<MangerViewStoreQuestionsNevigator />}\r\n          ></Route>\r\n          {/* -------------------------------------- View Staff Information---------------------------------- */}\r\n\r\n          <Route\r\n            path=\"/StorePage/:id/StoreManagment/ViewStaffInformation\"\r\n            element={<ViewStaffInformationNevigator />}\r\n          ></Route>\r\n          <Route\r\n            path=\"MyStores/StorePage/:id/StoreManagment/ViewStaffInformation\"\r\n            element={<ViewStaffInformationNevigator />}\r\n          ></Route>\r\n          <Route\r\n            path=\"AllStores/StorePage/:id/StoreManagment/ViewStaffInformation\"\r\n            element={<ViewStaffInformationNevigator />}\r\n          ></Route>\r\n\r\n          {/* -------------------------------------- Manager Permissions---------------------------------- */}\r\n          <Route\r\n            path=\"/StorePage/:id/StoreManagment/ManagerPermissions/:user_email\"\r\n            element={<ManagerPermissions />}\r\n          ></Route>\r\n          <Route\r\n            path=\"MyStores/StorePage/:id/StoreManagment/ManagerPermissions/:user_email\"\r\n            element={<ManagerPermissions />}\r\n          ></Route>\r\n          <Route\r\n            path=\"AllStores/StorePage/:id/StoreManagment/ManagerPermissions/:user_email\"\r\n            element={<ManagerPermissions />}\r\n          ></Route>\r\n          {/* -------------------------------------- View Store Purchase History---------------------------------- */}\r\n\r\n          <Route\r\n            path=\"/StorePage/:id/StoreManagment/ViewStorePurchaseHistory\"\r\n            element={<ViewStorePurchaseHistoryNevigator />}\r\n          ></Route>\r\n          <Route\r\n            path=\"MyStores/StorePage/:id/StoreManagment/ViewStorePurchaseHistory\"\r\n            element={<ViewStorePurchaseHistoryNevigator />}\r\n          ></Route>\r\n          <Route\r\n            path=\"AllStores/StorePage/:id/StoreManagment/ViewStorePurchaseHistory\"\r\n            element={<ViewStorePurchaseHistoryNevigator />}\r\n          ></Route>\r\n\r\n          {/* -------------------------------------- End --- Policies---------------------------------- */}\r\n\r\n          <Route\r\n            path=\"/EditProfilePremium\"\r\n            element={<EditProfilePremium get_state={get_state} />}\r\n          ></Route>\r\n          <Route\r\n            path=\"/StorePage/:store_id/ProductPage/:product_id\"\r\n            element={<ProductPageNevigator />}\r\n          ></Route>\r\n\r\n          <Route path=\"/AllStores\" element={<AllStores />}></Route>\r\n          <Route path=\"/MyStores\" element={<MyStores />}></Route>\r\n\r\n          <Route path=\"/ProductPage\" element={<ProductPage />}></Route>\r\n          {/* <Route exact path=\"/home/:amit\" element={<ProductPage product_id={1} store_id={1}/>}></Route> */}\r\n          <Route path=\"/ViewStat\" element={<ViewStat user={user} />}></Route>\r\n          <Route\r\n            path=\"/AdminViewUserQuestions\"\r\n            element={<AdminViewUserQuestions />}\r\n          ></Route>\r\n\r\n          <Route path=\"/ShoppingCart/BuyCart\" element={<BuyCart />}></Route>\r\n          {/* <Route path=\"/Payment\" element={<PaymentPage/>}></Route>\r\n          <Route path=\"/Supply\" element={<SupplyPage/>}></Route> */}\r\n          <Route\r\n            path=\"/ViewUserPurchaseHistory\"\r\n            element={<ViewUserPurchaseHistory />}\r\n          ></Route>\r\n\r\n          {/* <Route path=\"/UserPurchaseHistory\" element={<UserPurchaseHistory />}></Route> */}\r\n          {/* <Route path=\"/UserQuestions\" element={<?? />}></Route>\r\n          // notificans\r\n          <Route path=\"/Notifications\" element={<?? />}></Route> } */}\r\n        </Routes>\r\n      </BrowserRouter>\r\n      {!!snackbar && (\r\n        <Snackbar\r\n          open\r\n          anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n          onClose={handleCloseSnackbar}\r\n          autoHideDuration={6000}\r\n        >\r\n          <Alert {...snackbar} onClose={handleCloseSnackbar} />\r\n        </Snackbar>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\n// /////////////////////////////////////////////////////////////////////////\r\n// export default class App extends Component {\r\n//   static displayName = App.name;\r\n//   constructor(props) {\r\n//     super(props);\r\n//     console.log(\"in constructor of APP\");\r\n//     this.state = {\r\n//       user:User.guest(),\r\n//       messages: [],\r\n//       snackbar: null,\r\n//     };\r\n//     // if (this.state.user === undefined)\r\n//     // {\r\n//     //   console.log(\"ppp\");\r\n//     //   this.setState({\r\n//     //     // Important: read `state` instead of `this.state` when updating.\r\n//     //     user: User.guest(),\r\n\r\n//     //   });\r\n//     // }\r\n//     this.connectApi = new ConnectApi();\r\n//     this.updateUserState = this.updateUserState.bind(this);\r\n//     this.get_online_user();\r\n//     // const user = React.createContext('user');\r\n\r\n//   }\r\n//   async componentDidMount() {\r\n//     this.get_online_user();\r\n//     // if (this.state.user == undefined)\r\n//     // {\r\n//     //   console.log(\"ppp\");\r\n//     //   this.setState({\r\n//     //     // Important: read `state` instead of `this.state` when updating.\r\n//     //     user: User.guest(),\r\n\r\n//     //   });\r\n//     // }\r\n//     console.log(\"in component did mount - home page\");\r\n//   }\r\n\r\n//  updateUserState(user) {\r\n//   console.log(\"in updateUserState\\n\\n\\n\\n\\n\");\r\n//   console.log(user);\r\n//   console.log(this.state.user);\r\n//   this.setState({\r\n//     // Important: read `state` instead of `this.state` when updating.\r\n//     user: user,\r\n\r\n//   });\r\n\r\n//     console.log(this.state.user);\r\n//   }\r\n//   async add_store_to_user(store_id)\r\n//   {\r\n//     this.state.user.add_store(store_id);\r\n//     console.log(\"in add store to user - store id -> \"+store_id);\r\n\r\n//   }\r\n\r\n//   // async updateUserStateName(name) {\r\n//   //   console.log(\"in set UserState - name\\n\\n\\n\\n\\n\");\r\n//   //   this.setState({\r\n//   //     user.name: name,\r\n//   //     })\r\n//   //   }\r\n\r\n// get_state() {\r\n//   return this.state.user;\r\n// }\r\n\r\n//   async get_online_user(){\r\n//       let response = await this.connectApi.get_online_user()\r\n//       this.setState({user : response.value})\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//       <BrowserRouter>\r\n//         <NavBar\r\n//           updateUserState={this.updateUserState.bind(this)}\r\n//           user = {this.state.user}\r\n\r\n//         ></NavBar>\r\n\r\n//         <Routes>\r\n//           <Route\r\n//             path=\"/\"\r\n//             element={\r\n//               <HomePage\r\n//                 user={this.state.user}\r\n//                 updateUserState={this.updateUserState.bind(this)}\r\n//                 add_store_to_user = {this.add_store_to_user.bind(this)}\r\n//               />\r\n//             }\r\n//           ></Route>\r\n//           <Route\r\n//             path=\"/Login\"\r\n//             element={\r\n//               <Login\r\n//                 updateUserState={this.updateUserState.bind(this)}\r\n//                 user={this.state.user}\r\n//               />\r\n//             }\r\n//           ></Route>\r\n//           <Route\r\n//             path=\"/Register\"\r\n//             element={\r\n//               <Register updateUserState={this.updateUserState.bind(this)} />\r\n//             }\r\n//           ></Route>\r\n//           <Route path=\"/HomePageSearch\" element={<HomePageSearch />}></Route>\r\n//           {/* <Route path=\"/StorePage\" element={<StorePageNevigator/>}></Route> */}\r\n//           <Route path=\"/StorePage/:id\" element={<StorePageNevigator />}></Route>\r\n//           <Route path=\"MyStores/StorePage/:id\" element={<StorePageNevigator />}></Route>\r\n//           <Route path=\"/AllStores/StorePage/:id\" element={<StorePageNevigator />}></Route>\r\n//           <Route\r\n//             path=\"/AdminSendMessage\"\r\n//             element={<AdminSendMessage />}\r\n//           ></Route>\r\n//           <Route path=\"/AdminPage\" element={<AdminPage />}></Route>\r\n// <Route path=\"/ShoppingCart\" element={<ShoppingCart />}></Route>\r\n//           <Route\r\n//             path=\"/StorePage/:id/StoreManagment\"\r\n//             element={<StoreManagmentNevigator />}\r\n//           ></Route>\r\n//           <Route\r\n//             path=\"/StorePage/:id/StoreManagment/AddDiscount\"\r\n//             element={<AddDiscount/>} //have to pass store id\r\n//           ></Route>\r\n//           <Route\r\n//             path=\"/EditProfile\"\r\n//             element={<EditProfile get_state={this.get_state.bind(this)} />}\r\n//           ></Route>\r\n//           <Route\r\n//             path=\"/EditProfilePremium\"\r\n//             element={\r\n//               <EditProfilePremium get_state={this.get_state.bind(this)} />\r\n//             }\r\n//           ></Route>\r\n//           <Route\r\n//             path=\"/StorePage/:store_id/ProductPage/:product_id\"\r\n//             element={<ProductPageNevigator />}\r\n//           ></Route>\r\n//           <Route\r\n//             path=\"/StorePage/:id/ViewBidsStatus\"\r\n//             element={<ViewBidsStatusNevigator />}\r\n//           ></Route>\r\n//           <Route\r\n//             path=\"/AllStores\"\r\n//             element={<AllStores/>}\r\n//           ></Route>\r\n//           <Route\r\n//             path=\"/MyStores\"\r\n//             element={<MyStores/>}\r\n//           ></Route>\r\n\r\n//           <Route path=\"/ProductPage\" element={<ProductPage />}></Route>\r\n//           {/* <Route exact path=\"/home/:amit\" element={<ProductPage product_id={1} store_id={1}/>}></Route> */}\r\n//           <Route path=\"/ViewStat\" element={<ViewStat user={this.state.user} />}></Route>\r\n//           <Route\r\n//             path=\"/AdminViewUserQuestions\"\r\n//             element={<AdminViewUserQuestions />}\r\n//           ></Route>\r\n//           <Route\r\n//             path=\"/StorePage/:id/StoreManagment/ManagerViewStoreQuestions\"\r\n//             element={<MangerViewStoreQuestionsNevigator />}\r\n//           ></Route>\r\n//           {/* <Route path=\"/StoreManagment/ManagerViewStoreQuestions/:id\" element={<ManagerViewStoreQuestions />}></Route> */}\r\n//           {/* <Route path=\"/UserViewQuestions\" element={<UserViewQuestions />}></Route> */}\r\n//           <Route\r\n//             path=\"/StorePage/:id/StoreManagment/ViewStaffInformation\"\r\n//             element={<ViewStaffInformationNevigator />}\r\n//           ></Route>\r\n//           <Route path=\"/ShoppingCart/BuyCart\" element={<BuyCart/>}></Route>\r\n//           {/* <Route path=\"/Payment\" element={<PaymentPage/>}></Route>\r\n//           <Route path=\"/Supply\" element={<SupplyPage/>}></Route> */}\r\n//           <Route\r\n//             path=\"/ViewUserPurchaseHistory\"\r\n//             element={<ViewUserPurchaseHistory />}\r\n//           ></Route>\r\n//           <Route\r\n//             path=\"/StorePage/:id/StoreManagment/ManagerPermissions/:user_email\"\r\n//             element={<ManagerPermissions />}\r\n//           ></Route>\r\n\r\n//           <Route path=\"/Notifications\" element={<Notifications />}></Route>\r\n\r\n//           <Route\r\n//             path=\"/StorePage/:id/StoreManagment/ViewStorePurchaseHistory\"\r\n//             element={<ViewStorePurchaseHistoryNevigator />}\r\n//           ></Route>\r\n\r\n//           {/* <Route path=\"/UserPurchaseHistory\" element={<UserPurchaseHistory />}></Route> */}\r\n//           {/* <Route path=\"/UserQuestions\" element={<?? />}></Route>\r\n//           // notificans\r\n//           <Route path=\"/Notifications\" element={<?? />}></Route> } */}\r\n//         </Routes>\r\n\r\n//         {!!this.state.snackbar && (\r\n//           <Snackbar\r\n//             open\r\n//             anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n//             onClose={this.handleCloseSnackbar}\r\n//             autoHideDuration={6000}\r\n//           >\r\n//             <Alert\r\n//               {...this.state.snackbar}\r\n//               onClose={this.handleCloseSnackbar}\r\n//             />\r\n//           </Snackbar>\r\n//         )}\r\n//       </BrowserRouter>\r\n\r\n//     );\r\n//   }\r\n// }\r\n",[],"C:\\study\\Market1\\TradingSystem\\Client\\src\\ServiceObjects\\User.js",["515","516","517"],[],"import { StoreReview } from \"./StoreReview\";\r\n\r\nconst GUEST = 0;\r\nconst ASSIGN_USER = 1;\r\nconst ADMIN = 2;\r\n\r\n\r\nexport class User  {\r\n    constructor(data) {\r\n        this.state = data.state;\r\n        this.email = data.email;\r\n        this.name = data.name;\r\n        this.lastName = data.lastName;\r\n        this.birth_date = data.birth_date;\r\n        this.cart = data.cart;\r\n        this.storesManaged = data.storesManaged;\r\n        this.security_question = data.security_question;\r\n        // this.notifications = [];\r\n    }\r\n    \r\n    static guest(){\r\n        \r\n        return new User({\r\n            state : GUEST,\r\n            email :\"\",\r\n            name :\"Guest\",\r\n            lastName : \"\",\r\n            birth_date : \"12-12-2021\",\r\n            cart : \"\",\r\n            storesManaged : [],\r\n            security_question : \"what is the time?\",\r\n        })\r\n    }\r\n    \r\n    static create(state, email, name, lastName, birth_date, cart, storesManaged, security_question) {\r\n        return new User({\r\n            state : state,\r\n            email :email,\r\n            name :name,\r\n            lastName : lastName,\r\n            birth_date : birth_date,\r\n            cart :cart,\r\n            storesManaged : storesManaged,\r\n            security_question : security_question,\r\n            // notifications : [],\r\n        })\r\n\r\n    }\r\n    add_store(store_id)\r\n    {\r\n        this.storesManaged.push(store_id);\r\n        console.log(\"stores of user is = \"+this.state.storesManaged)\r\n    }\r\n}\r\n","C:\\study\\Market1\\TradingSystem\\Client\\src\\API\\ConnectApi.js",[],[],"C:\\study\\Market1\\TradingSystem\\Client\\src\\API\\UserApi.js",[],[],"C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\Register.js",["518"],[],"import React, { Component } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport { ConnectApi } from '../API/ConnectApi';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport { Navigate } from 'react-router-dom'; \r\nimport Link from '@mui/material/Button';\r\nimport { DesktopDatePicker } from '@mui/x-date-pickers/DesktopDatePicker';\r\nimport TextField from '@mui/material/TextField';\r\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\";\r\n\r\nexport default class Register extends Component {\r\n    static displayName = Register.name;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            registerError: undefined,\r\n            email: undefined,\r\n            password: undefined,\r\n            firstname: undefined,\r\n            lastname: undefined,\r\n            birthdate: undefined,\r\n            b_d : new Date(),\r\n            snackbar: null,\r\n        };\r\n        this.connectApi = new ConnectApi(); \r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n\r\n    }\r\n    \r\n    handleInputChange(event){\r\n        console.log(\"in handleInputChange\");\r\n        console.log(event.target.name);\r\n        console.log(event.target.value);\r\n        const target = event.target;\r\n        this.setState({\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n    \r\n    async handleSubmit(event){\r\n        event.preventDefault();\r\n        const {username, password, role} = this.state;\r\n        const loginRedirectAndRes = await this.authApi.Login(username, password, role);\r\n        if(loginRedirectAndRes) {\r\n            const loginRes = loginRedirectAndRes.data;\r\n\r\n            if (loginRes && loginRes.isSuccess) {\r\n                this.props.loginUpdateHandler(username, this.getUserRole(role))\r\n            } else {\r\n                this.setState({\r\n                    registerError: loginRes.error\r\n                })\r\n            }\r\n        } else {\r\n            this.setState({\r\n                registerError: \"You need to be a guest\"\r\n            })\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n    }\r\n\r\n    async register(event){\r\n        const {email, password, firstname, lastname, birthdate} = this.state;\r\n        console.log(\"email is \"+email+\" , password is \"+password+\" firstname is \"+firstname+\" lastname is \"+lastname+\" birthdate is \"+birthdate+\"\\n\");\r\n        let response = await this.connectApi.register(email, password, firstname, lastname, birthdate);\r\n        // alert(response.message);\r\n        if (!response.was_exception)\r\n        {\r\n            this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n            const user = response.value;\r\n            this.props.updateUserState(user);\r\n            return (<Navigate to=\"/\"/>)\r\n        }\r\n        else{\r\n            this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n\r\n        }\r\n    }\r\n\r\n    parse_date = (date_to_parse) => {\r\n        let year = date_to_parse.getFullYear()\r\n        let month = date_to_parse.getMonth()\r\n        let day = date_to_parse.getDay()\r\n        let day_string = day<10?\"0\"+day:day\r\n        let month_string = month<10?\"0\"+month:month\r\n        this.setState({birthdate : year+\"-\"+month_string+\"-\"+day_string, b_d:date_to_parse})\r\n    }\r\n    \r\n    render() {\r\n        const {redirectTo} = this.state\r\n            return (\r\n                <main className=\"LoginMain\">\r\n                    <div className=\"LoginWindow\">\r\n                        <Link href=\"/\"><HomeIcon></HomeIcon></Link>\r\n                        <h3>Register</h3>\r\n                        <form className=\"LoginForm\" >\r\n                            {this.state.registerError ?\r\n                                <div className=\"CenterItemContainer\"><label>{this.state.registerError}</label></div> : null}\r\n                            <input type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleInputChange}\r\n                                    placeholder=\"Email\" required/>\r\n                            <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleInputChange}\r\n                                    placeholder=\"Password\" required/>\r\n                            <input type=\"firstname\" name=\"firstname\" value={this.state.firstname} onChange={this.handleInputChange}\r\n                                    placeholder=\"First name\" required/>\r\n                            <input type=\"lastname\" name=\"lastname\" value={this.state.lastname} onChange={this.handleInputChange}\r\n                                    placeholder=\"Last name\" required/>\r\n                            {/* <input type=\"birthdate\" name=\"birthdate\" value={this.state.birthdate} onChange={this.handleInputChange}\r\n                                    placeholder=\"Birth date - yyyy-mm-dd\" required/>  */}\r\n                            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                                <DesktopDatePicker label=\"Birth date\" value={this.state.b_d} minDate={new Date('1900-01-01')} onChange={(newValue) => {this.parse_date(newValue);}} renderInput={(params) => <TextField {...params} />}/>   \r\n                            </LocalizationProvider>\r\n                            {/* <select name=\"role\" value={this.state.role} required>\r\n                                <option value=\"member\">Member</option>\r\n                                <option value=\"admin\">Admin</option>\r\n                            </select> */}\r\n                            <div className=\"ConnectRegister\">\r\n                                \r\n                \r\n                                <Button onClick={() => this.register()} variant=\"contained\">Register </Button>\r\n                                <Link href=\"/Login\" underline=\"hover\" >\r\n                                {'Already registered? Login'}\r\n                                </Link>\r\n                            </div>\r\n                        </form>\r\n                        {!!this.state.snackbar && (\r\n                        <Snackbar\r\n                        open\r\n                        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n                        onClose={this.handleCloseSnackbar}\r\n                        autoHideDuration={6000}\r\n                        >\r\n                        <Alert\r\n                            {...this.state.snackbar}\r\n                            onClose={this.handleCloseSnackbar}\r\n                        />\r\n                        </Snackbar>\r\n                    )}\r\n                    </div>\r\n                </main>\r\n            );\r\n        \r\n    }\r\n}","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\AddDiscount.js",["519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547"],[],"import Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\"; \r\nimport { StoreApi } from '../API/StoreApi';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Utils } from '../ServiceObjects/Utils';\r\nimport { useEffect } from 'react';\r\nimport React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport FormDialog from './FormDialog';\r\nimport { PoliciesApi } from '../API/PoliciesApi';\r\nimport ControlledRadioButtonsGroup from './ControlledRadioButtonsGroup';\r\nimport StoreProductsTable from './StoreProductsTable';\r\nimport { Row } from 'react-grid-system';\r\n\r\nexport default function AddDiscount() {\r\n    const {id} = useParams();\r\n    const store_id =id;\r\n\r\n    //fields\r\n    const add_simple_discount_rule_for_store_fields =[\"Rule Name\", \"Discount Precent(%)\"];\r\n    const add_simple_discount_rule_for_category_fields =[\"Rule Name\", \"Discount Precent(%)\"];\r\n    const add_simple_discount_rule_for_product_fields =[\"Rule Name\", \"Discount Precent(%)\", \"Product ID\"];\r\n    const add_complex_discount_rule_fields=[\"Rule Name\"];\r\n    const add_complex_and_discount_rule_fields=[\"Rule Name\"];\r\n    const add_complex_or_discount_rule_fields=[\"Rule Name\"];\r\n    const add_complex_xor_discount_rule_fields=[\"Rule Name\"];\r\n    const add_complex_max_discount_rule_fields=[\"Rule Name\"];\r\n    const add_complex_plus_discount_rule_fields=[\"Rule Name\"];\r\n\r\n    //API \r\n    const policiesApi = new PoliciesApi();\r\n    const storeApi = new StoreApi();\r\n\r\n    // list of categories, Predicts, discounts\r\n\r\n    const [categories,setCategories ] =React.useState([\"cat1\", \"cat2\", \"cat3\"]);\r\n    // const [predicts,setPredicts ] =React.useState([\"predicts1\", \"predicts2\", \"Predicts3\"]);\r\n    const [predicts,setPredicts ] =React.useState([]);\r\n    // const [discounts,setDiscounts ] =React.useState([\"discount1\", \"discount2\", \"discount3\"]);\r\n    const [discounts,setDiscounts ] =React.useState([]);\r\n    const get_categories_of_stores = async () =>\r\n    {\r\n        const response = await storeApi.get_all_categories(store_id);\r\n        if (!response.was_exception)\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'success' });\r\n            if(response.value.length !== 0)\r\n                setCategories(response.value);\r\n        }\r\n        else\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'error' });\r\n\r\n        }\r\n    }\r\n    const get_discount_lists = async () =>\r\n    {\r\n        \r\n        let response = await policiesApi.get_discount_policy(store_id);\r\n        if (!response.was_exception)\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'success' });\r\n            setDiscounts(response.value);\r\n        }\r\n        else\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'error' });\r\n\r\n        }\r\n    }\r\n    const get_predicts_lists = async () =>\r\n    {\r\n        let response = await policiesApi.send_predicts(store_id);\r\n        if (!response.was_exception)\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'success' });\r\n            if(response.value.length !== 0)\r\n                setPredicts(response.value);\r\n        }\r\n        else\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'error' });\r\n\r\n        }\r\n    }\r\n\r\n\r\n    \r\n    useEffect(()=>{get_discount_lists()}, []);  \r\n    useEffect(()=>{get_predicts_lists()}, []);  \r\n    useEffect(()=>{get_categories_of_stores()}, []);\r\n\r\n\r\n    const [predictChosen, setPredictChosen] = React.useState(null);\r\n    const [discountChosen, setDiscounChosen] = React.useState(null);\r\n    const [categoryChosen, setCategoryChosen] = React.useState(null);\r\n    const save_predict = (perdict) =>{\r\n        console.log(perdict);\r\n        setPredictChosen(perdict);\r\n    }  \r\n    const save_discount_rule = (discount_rule) =>{\r\n        console.log(discount_rule);\r\n        setDiscounChosen(discount_rule);\r\n    }  \r\n    const save_category = (category) =>{\r\n        console.log(category);\r\n        setCategoryChosen(category);\r\n    }\r\n\r\n    const [checked, setChecked] = React.useState(true);\r\n    const [ruleName, setRuleName] = React.useState(undefined);\r\n    \r\n    const handleChange = (event) => {setChecked(event.target.checked)};\r\n    \r\n\r\n\r\n    //------------- complex and----------------------\r\n    const [predictChosenAnd1, setPredictChosenAnd1] = React.useState(null);\r\n    const [predictChosenAnd2, setPredictChosenAnd2] = React.useState(null);\r\n\r\n    const save_predictAnd1 = (perdict) =>{\r\n        console.log(perdict);\r\n        setPredictChosenAnd1(perdict);\r\n    }\r\n    const save_predictAnd2 = (perdict) =>{\r\n        console.log(perdict);\r\n        setPredictChosenAnd2(perdict);\r\n    }\r\n    //------------- complex or----------------------\r\n\r\n    const [predictChosenOr1, setPredictChosenOr1] = React.useState(null);\r\n    const [predictChosenOr2, setPredictChosenOr2] = React.useState(null);\r\n    const save_predictOr1 = (perdict) =>{\r\n        console.log(perdict);\r\n        setPredictChosenOr1(perdict);\r\n    }\r\n    const save_predictOr2 = (perdict) =>{\r\n        console.log(perdict);\r\n        setPredictChosenOr2(perdict);\r\n    }\r\n\r\n    //------------- discount xor----------------------\r\n\r\n    const [discountChosenXor1, setDiscountChosenXor1] = React.useState(null);\r\n    const [discountChosenXor2, setDiscountChosenXor2] = React.useState(null);\r\n    const save_discountXor1 = (discount) =>{\r\n        console.log(discount);\r\n        setDiscountChosenXor1(discount);\r\n    }\r\n    const save_discountXor2 = (discount) =>{\r\n        console.log(discount);\r\n        setDiscountChosenXor2(discount);\r\n    }\r\n\r\n    //------------- discount max----------------------\r\n\r\n    const [discountChosenMax1, setDiscountChosenMax1] = React.useState(null);\r\n    const [discountChosenMax2, setDiscountChosenMax2] = React.useState(null);\r\n    const save_discountMax1 = (discount) =>{\r\n        console.log(discount);\r\n        setDiscountChosenMax1(discount);\r\n    }\r\n    const save_discountMax2 = (discount) =>{\r\n        console.log(discount);\r\n        setDiscountChosenMax2(discount);\r\n    }\r\n\r\n\r\n    //------------- discount plus----------------------\r\n\r\n    const [discountChosenPlus1, setDiscountChosenPlus1] = React.useState(null);\r\n    const [discountChosenPlus2, setDiscountChosenPlus2] = React.useState(null);\r\n    const save_discountPlus1 = (discount) =>{\r\n        console.log(discount);\r\n        setDiscountChosenPlus1(discount);\r\n    }\r\n    const save_discountPlus2 = (discount) =>{\r\n        console.log(discount);\r\n        setDiscountChosenPlus2(discount);\r\n    }\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    const [option, setOption] = React.useState(\"Simple\");\r\n    const [simpleOptions, setSimpleOptions] = React.useState(\"Store\");\r\n    \r\n    \r\n    const handleCloseSnackbar = () => setSnackbar(null);\r\n    const handleInputChange = event => {\r\n        const name = event.target.name\r\n        const value = event.target.value;\r\n        console.log(name);\r\n        console.log(value);\r\n        setOption(value.toString()); console.log(simpleOptions) };\r\n    const handleInputChange_simple = event => {\r\n        const name = event.target.name\r\n        const value = event.target.value;\r\n        console.log(name);\r\n        console.log(value);\r\n        setSimpleOptions(value);\r\n    };\r\n    const [snackbar, setSnackbar] = React.useState(null);\r\n    const hadleSubmit = async () => {}\r\n\r\n\r\n    //Functions To Server\r\n    const add_simple_discount_rule_for_store = async (values) => {\r\n        const rule_name = values[0];\r\n        const discount_precent = values[1];\r\n        console.log(discount_precent);\r\n        const discount =discount_precent / 100;\r\n        if (Utils.check_rule_name(rule_name) == 0)\r\n        {\r\n            setSnackbar({ children: \"Illegal Rule Name\", severity: 'error' });\r\n            return;\r\n        }\r\n        if (Utils.check_precent(discount) == 0)\r\n        {\r\n            setSnackbar({ children: \"Illegal percent\", severity: 'error' });\r\n            return;\r\n        }\r\n        \r\n        const response = await policiesApi.add_simple_store_discount_rule(store_id, discount, rule_name); \r\n        if (!response.was_exception)\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'success' });\r\n            window.location.reload();\r\n        }\r\n        else\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'error' });\r\n        }\r\n\r\n    }\r\n    const  add_simple_discount_rule_for_category = async (values) => {\r\n        const rule_name = values[0];\r\n        const discount_precent = values[1];\r\n        const discount = discount_precent / 100;\r\n        if (Utils.check_rule_name(rule_name) == 0)\r\n        {\r\n            setSnackbar({ children: \"Illegal Rule Name\", severity: 'error' });\r\n            return;\r\n        }\r\n        if (Utils.check_precent(discount) == 0)\r\n        {\r\n            setSnackbar({ children: \"Illegal precent value\", severity: 'error' });\r\n            return;\r\n        }\r\n        const response = await policiesApi.add_simple_categorey_discount_rule(store_id, categoryChosen, discount, rule_name); \r\n        if (!response.was_exception)\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'success' });\r\n            window.location.reload();\r\n        }\r\n        else\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'error' });\r\n        }\r\n    }\r\n    const  add_simple_discount_rule_for_product = async (values) => {\r\n        const rule_name = values[0];\r\n        const discount_precent = values[1];\r\n        const precent = discount_precent/100;\r\n        const product_id = values[2];\r\n        if (Utils.check_rule_name(rule_name) == 0)\r\n        {\r\n            setSnackbar({ children: \"Illegal Rule Name\", severity: 'error' });\r\n            return;\r\n        }\r\n        if (Utils.check_precent(precent) == 0)\r\n        {\r\n            setSnackbar({ children: \"Illegal precent \", severity: 'error' });\r\n            return;\r\n        }\r\n        //TODO: check if product id is legal\r\n        const response = await policiesApi.add_simple_product_discount_rule(store_id, product_id, precent, rule_name); \r\n        if (!response.was_exception)\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'success' });\r\n            window.location.reload();\r\n        }\r\n        else\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'error' });\r\n        }\r\n    }\r\n    const add_complex_discount_rule = async(values) => {\r\n        console.log(values[0]);\r\n        setRuleName(values[0]);\r\n        if (predictChosen == null)\r\n        {\r\n            setSnackbar({ children: \"Have to choose Predict\", severity: 'error' });\r\n            return;\r\n        }\r\n        if (discountChosen == null)\r\n        {\r\n            setSnackbar({ children: \"Have to choose Discount Rule\", severity: 'error' });\r\n            return;\r\n        }\r\n        if (ruleName == null)\r\n        {\r\n            setSnackbar({ children: \"Have to choose Name For Rule\", severity: 'error' });\r\n            return;\r\n        }\r\n        if (Utils.check_rule_name(ruleName) == 0)\r\n        {\r\n            setSnackbar({ children: \"Illegal Rule Name\", severity: 'error' });\r\n            return;\r\n        }\r\n        const response = await policiesApi.add_complex_discount_rule(store_id, predictChosen, discountChosen, ruleName);\r\n        if (!response.was_exception)\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'success' });\r\n            window.location.reload();\r\n        }\r\n        else\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'error' });\r\n        }\r\n        \r\n    }\r\n    const add_complex_and_discount_rule = async(values) => {\r\n        const rule_name = values[0];\r\n        console.log(values[0]);\r\n        setRuleName(values[0]);\r\n        if (predictChosenAnd1 == null || predictChosenAnd1==null)\r\n        {\r\n            setSnackbar({ children: \"Have to choose Predict\", severity: 'error' });\r\n            return;\r\n        }\r\n        if (ruleName == null)\r\n        {\r\n            setSnackbar({ children: \"Have to choose Name For Rule\", severity: 'error' });\r\n            return;\r\n        }\r\n        if (Utils.check_rule_name(ruleName) == 0)\r\n        {\r\n            setSnackbar({ children: \"Illegal Rule Name\", severity: 'error' });\r\n            return;\r\n        }\r\n        const response = await policiesApi.add_and_discount_rule(predictChosenAnd1, predictChosenAnd2, store_id, ruleName);\r\n        if (!response.was_exception)\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'success' });\r\n            window.location.reload();\r\n        }\r\n        else\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'error' });\r\n        }\r\n    }\r\n    const add_complex_or_discount_rule = async(values) => {\r\n        const rule_name = values[0];\r\n        console.log(values[0]);\r\n        setRuleName(values[0]);\r\n        if (predictChosenOr1 == null || predictChosenOr2==null)\r\n        {\r\n            setSnackbar({ children: \"Have to choose Predict\", severity: 'error' });\r\n            return;\r\n        }\r\n        if (ruleName == null)\r\n        {\r\n            setSnackbar({ children: \"Have to choose Name For Rule\", severity: 'error' });\r\n            return;\r\n        }\r\n        if (Utils.check_rule_name(ruleName) == 0)\r\n        {\r\n            setSnackbar({ children: \"Illegal Rule Name\", severity: 'error' });\r\n            return;\r\n        }\r\n        const response = await policiesApi.add_or_discount_rule(predictChosenOr1, predictChosenAnd2, store_id, rule_name);\r\n        if (!response.was_exception)\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'success' });\r\n            window.location.reload();\r\n        }\r\n        else\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'error' });\r\n        }\r\n    }\r\n    const add_complex_xor_discount_rule = async(values) => {\r\n        const rule_name = values[0];\r\n        console.log(values[0]);\r\n        setRuleName(values[0]);\r\n        if (discountChosenXor1 == null || discountChosenXor2==null)\r\n        {\r\n            setSnackbar({ children: \"Have to choose Discount Rule\", severity: 'error' });\r\n            return;\r\n        }\r\n        if (rule_name == null)\r\n        {\r\n            setSnackbar({ children: \"Have to choose Name For Rule\", severity: 'error' });\r\n            return;\r\n        }\r\n        if (Utils.check_rule_name(rule_name) == 0)\r\n        {\r\n            setSnackbar({ children: \"Illegal Rule Name\", severity: 'error' });\r\n            return;\r\n        }\r\n        console.log(rule_name);\r\n        const response = await policiesApi.add_xor_discount_rule(discountChosenXor1, discountChosenXor2, store_id, rule_name);\r\n        if (!response.was_exception)\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'success' });\r\n            window.location.reload();\r\n        }\r\n        else\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'error' });\r\n        }\r\n    }\r\n    const add_complex_max_discount_rule = async(values) => {\r\n        const rule_name = values[0];\r\n        console.log(values[0]);\r\n        setRuleName(values[0]);\r\n        if (discountChosenMax1 == null || discountChosenMax2==null)\r\n        {\r\n            setSnackbar({ children: \"Have to choose Predict\", severity: 'error' });\r\n            return;\r\n        }\r\n        if (ruleName == null)\r\n        {\r\n            setSnackbar({ children: \"Have to choose Name For Rule\", severity: 'error' });\r\n            return;\r\n        }\r\n        if (Utils.check_rule_name(ruleName) == 0)\r\n        {\r\n            setSnackbar({ children: \"Illegal Rule Name\", severity: 'error' });\r\n            return;\r\n        }\r\n        const response = await policiesApi.add_max_discount_rule(discountChosenMax1, discountChosenMax2, store_id, rule_name);\r\n        if (!response.was_exception)\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'success' });\r\n            window.location.reload();\r\n        }\r\n        else\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'error' });\r\n        }\r\n    }\r\n    const add_complex_plus_discount_rule = async(values) => {\r\n        const rule_name = values[0];\r\n        console.log(values[0]);\r\n        setRuleName(values[0]);\r\n        if (discountChosenPlus1 == null || discountChosenPlus2==null)\r\n        {\r\n            setSnackbar({ children: \"Have to choose Predict\", severity: 'error' });\r\n            return;\r\n        }\r\n        if (ruleName == null)\r\n        {\r\n            setSnackbar({ children: \"Have to choose Name For Rule\", severity: 'error' });\r\n            return;\r\n        }\r\n        if (Utils.check_rule_name(ruleName) == 0)\r\n        {\r\n            setSnackbar({ children: \"Illegal Rule Name\", severity: 'error' });\r\n            return;\r\n        }\r\n        const response = await policiesApi.add_plus_discount_rule(discountChosenPlus1, discountChosenPlus2, store_id, rule_name);\r\n        if (!response.was_exception)\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'success' });\r\n            window.location.reload();\r\n        }\r\n        else\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'error' });\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <>\r\n\r\n            <Box sx={{ flexGrow: 1 }}>\r\n\r\n            <h1 class=\"Header\" align=\"center\">\r\n                            </h1>\r\n            <h2 class=\"Header\" align=\"center\">\r\n            Add Discount Rule\r\n                            </h2>\r\n                            <h5 class=\"Header\" align=\"center\"> \r\n                Select Type Of Discount Rule\r\n                            </h5>\r\n            </Box>\r\n            \r\n            <Grid container spacing={3} justifyContent=\"center\" alignItems=\"center\">\r\n\r\n                <Grid item>\r\n                <Row><select name=\"option\"  onChange={handleInputChange} required>\r\n                        <option value=\"Simple\">Simple</option>\r\n                        <option value=\"Complex\">Complex</option>\r\n                        <option value=\"Complex And\">Complex And</option>\r\n                        <option value=\"Complex Or\">Complex Or</option>\r\n                        <option value=\"Complex Xor\">Complex Xor</option>\r\n                        <option value=\"Complex Max\">Complex Max</option>\r\n                        <option value=\"Complex Plus\">Complex Plus</option>\r\n\r\n              \r\n                    </select>\r\n                    {option ===\"Simple\" ? <div> For </div> : null}\r\n                    {option == \"Simple\" ? <select name=\"simpleOptions\" value={simpleOptions} onChange={handleInputChange_simple} required>\r\n                        <option value=\"Store\">Store</option>\r\n                        <option value=\"Category\">Category</option>\r\n                        <option value=\"Product\">Product</option>\r\n\r\n\r\n                    </select>\r\n                    : null}</Row>\r\n\r\n\r\n                    \r\n                </Grid>\r\n                <Grid item>\r\n                    {option ===\"Complex\" ? <ControlledRadioButtonsGroup list={predicts} name=\"Predicts\" save={save_predict}></ControlledRadioButtonsGroup> : null}\r\n                    {option ===\"Complex And\"  ? <ControlledRadioButtonsGroup list={predicts} name=\"Predicts\" save={save_predictAnd1}></ControlledRadioButtonsGroup> : null}\r\n                    {option ===\"Complex Or\"  ? <ControlledRadioButtonsGroup list={predicts} name=\"Predicts\" save={save_predictOr1}></ControlledRadioButtonsGroup> : null}\r\n                    {option ===\"Complex Xor\"  ? <ControlledRadioButtonsGroup list={discounts} name=\"Discounts\" save={save_discountXor1}></ControlledRadioButtonsGroup> : null}\r\n                    {option ===\"Complex Max\"  ? <ControlledRadioButtonsGroup list={discounts} name=\"Discounts\" save={save_discountMax1}></ControlledRadioButtonsGroup> : null}\r\n                    {option ===\"Complex Plus\"  ? <ControlledRadioButtonsGroup list={discounts} name=\"Discounts\" save={save_discountPlus1}></ControlledRadioButtonsGroup> : null}\r\n                </Grid>\r\n                <Grid item>\r\n                    {option ===\"Complex\"  ?<ControlledRadioButtonsGroup list={discounts} name=\"Discount\" save={save_discount_rule}></ControlledRadioButtonsGroup>: null}\r\n                    {option ===\"Complex And\"  ?<ControlledRadioButtonsGroup list={predicts} name=\"predicts\" save={save_predictAnd2}></ControlledRadioButtonsGroup>: null}\r\n                    {option ===\"Complex Or\"  ?<ControlledRadioButtonsGroup list={predicts} name=\"predicts\" save={save_predictOr2}></ControlledRadioButtonsGroup>: null}\r\n                    {option ===\"Complex Xor\"  ?<ControlledRadioButtonsGroup list={discounts} name=\"Discounts\" save={save_discountXor2}></ControlledRadioButtonsGroup>: null}\r\n                    {option ===\"Complex Max\"  ?<ControlledRadioButtonsGroup list={discounts} name=\"Discounts\" save={save_discountMax2}></ControlledRadioButtonsGroup>: null}\r\n                    {option ===\"Complex Plus\"  ?<ControlledRadioButtonsGroup list={discounts} name=\"Discounts\" save={save_discountPlus2}></ControlledRadioButtonsGroup>: null}\r\n\r\n                </Grid>\r\n                \r\n         \r\n                <Grid item>\r\n                {option ===\"Simple\"  && simpleOptions === \"Category\"  ? <ControlledRadioButtonsGroup list={categories} name=\"Categories\" save={save_category}></ControlledRadioButtonsGroup> : null}  \r\n                </Grid>\r\n                <Grid item>\r\n\r\n                </Grid>\r\n                <Grid item>\r\n                    \r\n                    {option == \"Simple\" && simpleOptions === \"Store\" ? <FormDialog fields={add_simple_discount_rule_for_store_fields} getValues={add_simple_discount_rule_for_store} name=\"Add Simple Discount Rule For Store\"></FormDialog>: null}\r\n                    {option == \"Simple\" && simpleOptions === \"Category\" && categoryChosen!==null ? <FormDialog fields={add_simple_discount_rule_for_category_fields} getValues={add_simple_discount_rule_for_category} name=\"Add Simple Discount Rule For Category\"></FormDialog>: null}\r\n                    {option == \"Simple\" && simpleOptions === \"Product\" ? <FormDialog fields={add_simple_discount_rule_for_product_fields} getValues={add_simple_discount_rule_for_product} name=\"Add Simple Discount Rule For Product\"></FormDialog>: null}\r\n                    {option == \"Complex\" && predictChosen!==null && discountChosen!==null ? <FormDialog fields={add_complex_discount_rule_fields} getValues={add_complex_discount_rule} name=\"Add Complex Discount Rule\"></FormDialog> : null}\r\n                    {option == \"Complex And\" && predictChosenAnd1!==null && predictChosenAnd2!==null ? <FormDialog fields={add_complex_and_discount_rule_fields} getValues={add_complex_and_discount_rule} name=\"Add Complex And Discount Rule\"></FormDialog> : null}\r\n                    {option == \"Complex Or\" && predictChosenOr1!==null && predictChosenOr2!==null ? <FormDialog fields={add_complex_or_discount_rule_fields} getValues={add_complex_or_discount_rule} name=\"Add Complex Or Discount Rule\"></FormDialog> : null}\r\n                    {option == \"Complex Xor\" && discountChosenXor1!==null && discountChosenXor2!==null ? <FormDialog fields={add_complex_xor_discount_rule_fields} getValues={add_complex_xor_discount_rule} name=\"Add Complex Xor Discount Rule\"></FormDialog> : null}\r\n                    {option == \"Complex Max\" && discountChosenMax1!==null && discountChosenMax2!==null ? <FormDialog fields={add_complex_max_discount_rule_fields} getValues={add_complex_max_discount_rule} name=\"Add Complex Max Discount Rule\"></FormDialog> : null}\r\n                    {option == \"Complex Plus\" && discountChosenPlus1!==null && discountChosenPlus2!==null ? <FormDialog fields={add_complex_plus_discount_rule_fields} getValues={add_complex_plus_discount_rule} name=\"Add Complex Plus Discount Rule\"></FormDialog> : null}\r\n                       \r\n                    </Grid>\r\n\r\n                \r\n            </Grid>\r\n            \r\n            \r\n            \r\n            \r\n            \r\n            {!!snackbar && (\r\n            <Snackbar\r\n            open\r\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n            onClose={handleCloseSnackbar}\r\n            autoHideDuration={6000}\r\n            >\r\n            <Alert {...snackbar} onClose={handleCloseSnackbar} />\r\n            </Snackbar>\r\n            \r\n        )}\r\n                    {option ===\"Simple\"  && simpleOptions === \"Product\"  ? <StoreProductsTable\r\n            store_id={store_id}\r\n          ></StoreProductsTable> : null}\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\Login.js",["548","549","550"],[],"import React, { Component } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Link from '@mui/material/Button';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport { ConnectApi } from '../API/ConnectApi';\r\nimport { Navigate } from 'react-router-dom'; \r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport \"./Login.css\";\r\nimport SocketProvider from './SocketProvider';\r\n\r\nexport default class Login extends Component {\r\n    static displayName = Login.name;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            loginError: undefined,\r\n            email: undefined,\r\n            password: undefined,\r\n            snackbar: null,\r\n        };\r\n        this.connectApi = new ConnectApi(); \r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n    \r\n    handleInputChange(event){\r\n        const target = event.target;\r\n        this.setState({\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n\r\n\r\n    async componentDidMount() {\r\n    }\r\n\r\n    async login(){\r\n        const {email, password} = this.state;\r\n        console.log(\"email is \"+email+\" , password is \"+password+\"\\n\");\r\n        let response = await this.connectApi.login(email, password);\r\n        // alert(response.message);\r\n        if (!response.was_exception)\r\n        {\r\n            \r\n            // login success\r\n            const user = response.value;\r\n            this.props.updateUserState(user);\r\n            console.log(\"in login, login success!\\n\");\r\n            const {createSocket} = SocketProvider(this.props.save);\r\n            createSocket(user.email);\r\n            // open seb socket\r\n            // return to home page and update properties (change state of App to assign user).\r\n            this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n            return (<Navigate to=\"/\"/>)\r\n        }\r\n        else{\r\n            this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n\r\n            // failure\r\n            console.log(\"in login, login failed!\\n\");\r\n        }\r\n    }\r\n\r\n\r\n    \r\n    render() {\r\n        const {redirectTo} = this.state\r\n        if (this.props.user.state != 0) {\r\n            \r\n            console.log(this.props.user.state);\r\n            console.log(\"have to route to homepage whe it will be ready\\n\\n\\n\");\r\n            return (<Navigate to=\"/\"/>);\r\n        } else {\r\n            return (\r\n                <main className=\"LoginMain\">\r\n                    <div className=\"LoginWindow\">\r\n                    \r\n                        <h3>Login</h3>\r\n                        <form className=\"LoginForm\" >\r\n                            {this.state.loginError ?\r\n                                <div className=\"CenterItemContainer\"><label>{this.state.loginError}</label></div> : null}\r\n                            <input type=\"text\" name=\"email\" value={this.state.email} onChange={this.handleInputChange}\r\n                                    placeholder=\"Email\" required/>\r\n                            <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleInputChange}\r\n                                    placeholder=\"Password\" required/>\r\n                            \r\n                            <div className=\"ConnectRegister\">\r\n                                \r\n                                <Button onClick={() => this.login()} variant=\"contained\">Login </Button>\r\n                                <Link href=\"/Register\" underline=\"hover\" >{'New user? Create new account'}</Link>\r\n                            </div>\r\n                        </form>\r\n                        {!!this.state.snackbar && (\r\n                        <Snackbar\r\n                        open\r\n                        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n                        onClose={this.handleCloseSnackbar}\r\n                        autoHideDuration={6000}\r\n                        >\r\n                        <Alert\r\n                            {...this.state.snackbar}\r\n                            onClose={this.handleCloseSnackbar}\r\n                        />\r\n                        </Snackbar>\r\n                    )}\r\n                    </div>\r\n                </main>\r\n            );\r\n        \r\n        }\r\n    }\r\n}","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\SupplyPage.js",["551","552","553","554","555","556","557","558"],[],"import React, { Component } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Link from '@mui/material/Button';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\"; \r\nimport { Supply } from '../ServiceObjects/Supply';\r\nimport { Utils } from '../ServiceObjects/Utils';\r\n\r\nexport default function SupplyPage({update}) {\r\n    const [snackbar, setSnackbar] = React.useState(null);\r\n    const handleCloseSnackbar = () => setSnackbar(null);\r\n\r\n    const [name, setName] = React.useState(\"\");\r\n    const [address, setAddress] = React.useState(\"\");\r\n    const [city, setCity] = React.useState(\"\");\r\n    const [country, setCountry] = React.useState(\"\");\r\n    const [zip, setZip] = React.useState(\"\");\r\n\r\n\r\n\r\n    const check_supply = async () =>{\r\n        console.log(name);\r\n        console.log(address);\r\n        console.log(city);\r\n        console.log(country);\r\n        console.log(zip);\r\n        if (Utils.check_holder(name)== 0)\r\n        {\r\n            setSnackbar({ children: \"Illegal Name\", severity: 'error' });\r\n            return;\r\n        }\r\n        if (Utils.check_address(address)== 0)\r\n        {\r\n            setSnackbar({ children: \"Illegal address\", severity: 'error' });\r\n            return;\r\n        }\r\n        if (Utils.check_city(city)== 0)\r\n        {\r\n            setSnackbar({ children: \"Illegal city\", severity: 'error' });\r\n            return;\r\n        }\r\n        if (Utils.check_country(country)== 0)\r\n        {\r\n            setSnackbar({ children: \"Illegal country\", severity: 'error' });\r\n            return;\r\n        }\r\n        if (Utils.check_zip(zip)== 0)\r\n        {\r\n            setSnackbar({ children: \"Illegal zip code\", severity: 'error' });\r\n            return;\r\n        }\r\n        \r\n\r\n        const supply_info = Supply.create(name, address, city, country, zip);\r\n        update(supply_info);\r\n    }\r\n    \r\n\r\n            return (\r\n                <main class=\"LoginMain\">\r\n                    <div class=\"LoginWindow\">\r\n                        <h3>Supply</h3>\r\n                        <form class=\"LoginForm\" >\r\n                           \r\n                            <input type=\"name\" name=\"name\" onChange={e => setName(e.target.value)}\r\n                                    placeholder=\"Name\" required/>\r\n                            <input type=\"address\" name=\"address\" onChange={e => setAddress(e.target.value)}\r\n                                    placeholder=\"Address\" required/>\r\n                            <input type=\"city\" name=\"city\" onChange={e => setCity(e.target.value)}\r\n                                    placeholder=\"City\" required/>\r\n                            <input type=\"country\" name=\"country\"  onChange={e => setCountry(e.target.value)}\r\n                                    placeholder=\"Country\" required/>\r\n                            <input type=\"zip\" name=\"zip\"  onChange={e => setZip(e.target.value)}\r\n                                    placeholder=\"Zip\" required/>\r\n                          \r\n                            <div className=\"ConnectRegister\">\r\n                                \r\n                                <Button onClick={check_supply} variant=\"contained\">Confirm</Button>\r\n                            </div>\r\n                        </form>\r\n                        {!!snackbar && (\r\n            <Snackbar\r\n            open\r\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n            onClose={handleCloseSnackbar}\r\n            autoHideDuration={6000}\r\n            >\r\n            <Alert {...snackbar} onClose={handleCloseSnackbar} />\r\n            </Snackbar>\r\n            \r\n        )}\r\n                    </div>\r\n                </main>\r\n            );\r\n        \r\n    }\r\n","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\AdminPage.js",["559","560","561"],[],"import React, { Component } from 'react';\r\nimport Link from '@mui/material/Button';\r\nimport { AdminApi } from '../API/AdminApi';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport FormDialog from './FormDialog';\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport { Utils } from '../ServiceObjects/Utils';\r\n\r\nexport default function AdminPage() {\r\n\r\n\r\n    const close_store_fields = [\"Store ID\"];\r\n    const remove_user_fields = [\"User Email\"];\r\n    const admin_answer_user_question_fields = [\"User Email\"];\r\n    const admin_view_user_purchases_history_fields = [\"User Email\"];\r\n    const admin_view_store_purchases_history_fields= [\"Store ID\"];\r\n    const adminApi = new AdminApi();\r\n    const [snackbar, setSnackbar] = React.useState(null);\r\n    const handleCloseSnackbar = () => setSnackbar(null);\r\n\r\n\r\n\r\n\r\n \r\n    const admin_view_store_purchases_history = async (values) => {\r\n        console.log(\"in admin view store purchases history\\n\");\r\n        const store_id = values[0];\r\n        window.location.href+=`/AdminViewStorePurchaseHistory/${store_id}`\r\n        console.log(\"in admin view store purchases history - success!\\n\");\r\n    }\r\n    const admin_view_user_purchases_history = async(values) => {\r\n        console.log(\"in admin view user purchases history!\\n\");\r\n        const user_email = values[0];\r\n        if(Utils.check_email(user_email) == 0)\r\n        {\r\n            setSnackbar({ children: \"Illegal Email\", severity: 'error' });\r\n            return;\r\n        }\r\n        window.location.href+=`/AdminViewUserPurchaseHistory/${user_email}`\r\n        // const response = await adminApi.admin_view_user_purchases_history(user_email);\r\n        // if (!response.was_exception) {\r\n        //     console.log(\"in admin view user purchases history - success!\\n\");\r\n            //show history\r\n            // setSnackbar({ children: response.message, severity: 'success' }); \r\n        // }\r\n        // else {\r\n        //     setSnackbar({ children: response.message, severity: 'errot' }); \r\n        // }\r\n    }\r\n\r\n    const remove_user = async(values)=> {\r\n        console.log(\"in remove user!\\n\");\r\n        const user_email = values[0];\r\n        const response = await adminApi.remove_user(user_email);\r\n        // alert(response.message);\r\n        \r\n        if (!response.was_exception) {\r\n            setSnackbar({ children: response.message, severity: 'success' }); \r\n            console.log(\"in remove user - success!\\n\");\r\n        }\r\n        else {\r\n            setSnackbar({ children: response.message, severity: 'error' }); \r\n\r\n        }\r\n    }\r\n\r\n\r\n    const close_store_permanently = async(values) => {\r\n        console.log(\"in close store permanently \\n\");\r\n        const store_id = values[0];\r\n        const response = await adminApi.close_store_permanently(store_id);\r\n        if (!response.was_exception) {\r\n            setSnackbar({ children: response.message, severity: 'success' }); \r\n            console.log(\"in close store permanently - success!\\n\");\r\n        }\r\n        else {\r\n            setSnackbar({ children: response.message, severity: 'error' }); \r\n\r\n        }\r\n    }\r\n\r\n\r\n    \r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n        return (\r\n\r\n        <Box sx={{ flexGrow: 1 }}>\r\n        <h3 align=\"center\">Admin Page</h3>\r\n\r\n        <Grid container spacing={6} paddingRight={25} paddingLeft={25} paddingTop={10}>\r\n            <Grid item xs={3}> <FormDialog fields={close_store_fields} getValues={close_store_permanently} name=\"Close Store\"></FormDialog> </Grid>\r\n            <Grid item xs={3}> <FormDialog fields={remove_user_fields} getValues={remove_user} name=\"Remove User\"></FormDialog></Grid>\r\n            <Grid item xs={3}>  <Link href=\"/AdminViewUserQuestions\" underline=\"hover\"> {'View user questions'}</Link> </Grid>\r\n            <Grid item xs={3}>  <FormDialog fields={admin_view_user_purchases_history_fields} getValues={admin_view_user_purchases_history} name=\"View User Purchase History\"></FormDialog></Grid>\r\n            <Grid item xs={3}>  <FormDialog fields={admin_view_store_purchases_history_fields} getValues={admin_view_store_purchases_history} name=\"View Store Purchase History\"></FormDialog></Grid>\r\n            <Grid item xs={3}>  <Link href=\"/ViewStat\" underline=\"hover\"> {'Show Statistics'}</Link> </Grid>\r\n            \r\n    \r\n    \r\n    \r\n    \r\n   \r\n            </Grid>\r\n            {!!snackbar && (\r\n            <Snackbar\r\n            open\r\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n            onClose={handleCloseSnackbar}\r\n            autoHideDuration={6000}\r\n            >\r\n            <Alert {...snackbar} onClose={handleCloseSnackbar} />\r\n            </Snackbar>\r\n        )}\r\n\r\n            <Box sx={{ flexGrow: 3 }}>\r\n\r\n            </Box>\r\n            <h3> </h3>\r\n            </Box>\r\n\r\n\r\n\r\n\r\n                    );\r\n\r\n                \r\n}","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\ShoppingCart.js",["562"],[],"import * as React from \"react\";\r\nimport { DataGrid, GridActionsCellItem } from \"@mui/x-data-grid\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { ProductApi } from \"../API/ProductApi\";\r\nimport { Row } from \"react-grid-system\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport { StoreApi } from \"../API/StoreApi\";\r\nimport { Component } from \"react\";\r\nimport { UserApi } from \"../API/UserApi\";\r\nimport { CartApi } from \"../API/CartApi\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class ShoppingCart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      price: 0,\r\n      products: [],\r\n      snackbar: null,\r\n      items: [],\r\n      selected_item: [],\r\n      selected_row: [],\r\n      edited: null,\r\n    };\r\n    this.productApi = new ProductApi();\r\n    this.storeApi = new StoreApi();\r\n    this.userApi = new UserApi();\r\n    this.cartApi = new CartApi();\r\n    this.columns = [\r\n      { field: \"id\", headerName: \"ID\", width: 70 },\r\n      { field: \"name\", headerName: \"name\", width: 130 },\r\n      { field: \"category\", headerName: \"category\", width: 130 },\r\n      { field: \"price\", headerName: \"price\", type: \"double\", width: 90 },\r\n      {\r\n        field: \"quantity\",\r\n        headerName: \"quantity\",\r\n        type: \"number\",\r\n        width: 90,\r\n        editable: true,\r\n      },\r\n      { field: \"store\", headerName: \"store\", width: 90, hide: true },\r\n      { field: \"key_words\", headerName: \"key words\", width: 0, hide: true },\r\n      {\r\n        field: \"action\",\r\n        headerName: \"Remove\",\r\n        width: 250,\r\n        // Important: passing id from customers state so I can delete or edit each user\r\n        renderCell: (id) => (\r\n          <>\r\n            <IconButton\r\n              aria-label=\"delete\"\r\n              onClick={() => this.remove_products(id)}\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </>\r\n        ),\r\n      },\r\n    ];\r\n  }\r\n  async componentDidMount() {\r\n    let cart = await this.cartApi.view_user_cart();\r\n    console.log(cart);\r\n    let products_list = [];\r\n    this.setState({ price: cart.value.price });\r\n    cart.value.products.map((p) =>\r\n      products_list.push({\r\n        id: p.product_id,\r\n        name: p.name,\r\n        category: p.category,\r\n        price: p.price,\r\n        quantity: p.quantity,\r\n        store: p.store_id,\r\n        key_words: p.key_words,\r\n      })\r\n    );\r\n    this.setState({\r\n      items: products_list,\r\n      products: products_list,\r\n      selected: undefined,\r\n    });\r\n  }\r\n\r\n  setSnackbar = (val) => {\r\n    this.setState({ snackbar: val });\r\n  };\r\n  setItems = (val) => {\r\n    this.setState({ items: val });\r\n  };\r\n  set_selected = (val) => {\r\n    this.setState({ selected_item: val });\r\n  };\r\n  set_row_selected = (val) => {\r\n    this.setState({ selected_row: val });\r\n  };\r\n  set_edited = (val) => {\r\n    this.setState({ edited: val });\r\n  };\r\n\r\n\r\n\r\n\r\n  handleCloseSnackbar = () => this.setSnackbar(null);\r\n\r\n  edit_function = async (oldRow, newRow) => {\r\n    if (oldRow.quantity !== newRow.quantity)\r\n      return await this.productApi.edit_product_quantity_in_cart(\r\n        newRow.store,\r\n        newRow.id,\r\n        newRow.quantity\r\n      );\r\n    \r\n  };\r\n\r\n  remove_products = async (id) => {\r\n    let selected = this.state.items.find((i) => id.id === i.id);\r\n    let response = await this.productApi.remove_product_from_cart(\r\n      selected.store,\r\n      selected.id\r\n    );\r\n    if (response.was_exception)\r\n      this.setSnackbar({ children: response.message, severity: \"error\" });\r\n  \r\n    else {\r\n      this.setSnackbar({\r\n        children: \"product removed successfully\",\r\n        severity: \"success\",\r\n      });\r\n      let new_items = this.state.items.filter((i) => selected.id !== i.id);\r\n      this.setState({ items: new_items, selected_item: [] });\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  processRowUpdate = async (newRow, oldRow) => {\r\n    if (newRow.quantity < 1) {\r\n      this.setSnackbar({\r\n        children: \"item quantity must be above 0\",\r\n        severity: \"error\",\r\n      });\r\n      return oldRow;\r\n    }\r\n    let response = await this.edit_function(oldRow, newRow);\r\n    if (response.was_exception) {\r\n      this.setSnackbar({ children: response.message, severity: \"error\" });\r\n      return oldRow;\r\n    }\r\n    this.setSnackbar({ children: response.message, severity: \"success\" });\r\n    let new_list = this.state.items.filter((p) => p.id !== newRow.id);\r\n    new_list.push(newRow);\r\n    new_list.sort((a, b) => a.id - b.id);\r\n    this.setState({ items: new_list });\r\n    return newRow;\r\n  };\r\n\r\n  handleProcessRowUpdateError = (error) => {\r\n    this.setState({ snackbar: { children: error.message, severity: \"error\" } });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <main>\r\n        <div style={{ horizontal: \"center\", height: 400, width: \"100%\" }}>\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Row>\r\n              <h1 horizontal=\"center\">Shopping cart items</h1>\r\n            </Row>\r\n            <Row>\r\n              <h6>\r\n                You can edit your products quantity by double click on quantity.\r\n              </h6>\r\n            </Row>\r\n          </Grid>\r\n          <DataGrid\r\n            align=\"center\"\r\n            horizontal=\"center\"\r\n            rows={this.state.items}\r\n            columns={this.columns}\r\n            editMode=\"row\"\r\n            //   checkboxSelection\r\n            onSelectionModelChange={(newSelectionModel) => {\r\n              this.set_row_selected(newSelectionModel);\r\n            }}\r\n\r\n            processRowUpdate={this.processRowUpdate}\r\n            onProcessRowUpdateError={this.handleProcessRowUpdateError}\r\n            experimentalFeatures={{ newEditingApi: true }}\r\n\r\n          ></DataGrid>\r\n          <Row>\r\n            <h1 style={{ color: \"white\" }}> </h1>\r\n          </Row>\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            <h4>cart total price {this.state.price}</h4>\r\n            \r\n            <Button width=\"5\" variant=\"contained\" >\r\n            <Link to={{pathname:`BuyCart`}}   underline=\"hover\" style={{ color: '#FFF' }} >{'Buy Cart'}</Link> \r\n            </Button>\r\n          </Grid>\r\n          {!!this.state.snackbar && (\r\n            <Snackbar\r\n              open\r\n              anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n              onClose={this.handleCloseSnackbar}\r\n              autoHideDuration={6000}\r\n            >\r\n              <Alert\r\n                {...this.state.snackbar}\r\n                onClose={this.handleCloseSnackbar}\r\n              />\r\n            </Snackbar>\r\n          )}\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\StorePage.js",["563","564","565","566"],[],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { StoreApi } from \"../API/StoreApi\";\r\nimport List from \"@mui/material/List\";\r\nimport MenuListComposition from \"./MenuListComposition\";\r\nimport { Paper } from \"@mui/material\";\r\nimport { Typography } from \"@mui/material\";\r\nimport BasicRating from \"./Rating\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport FormDialog from \"./FormDialog\";\r\nimport StoreProductsTable from \"./StoreProductsTable\";\r\nimport ProductionQuantityLimitsIcon from '@mui/icons-material/ProductionQuantityLimits';\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport { ConnectApi } from \"../API/ConnectApi\";\r\n\r\nexport default class StorePage extends Component {\r\n  static displayName = StorePage.name;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      store_id: this.props.store_id,\r\n      products: [],\r\n      store_name:\"\", \r\n      founder_email: \"\",\r\n      foundation_date:\"\",\r\n      snackbar:null,\r\n      send_question_to_store_fields: [\"Enter your question\"],\r\n      ratings:[]\r\n    };\r\n    this.storeApi = new StoreApi();\r\n    this.connectApi = new ConnectApi();\r\n    this.find_store_information(this.props.store_id);\r\n\r\n    console.log(this.props.store_id);\r\n    console.log(this.props.stores_managed);\r\n    let b = parseInt(this.props.store_id);\r\n    console.log(b);\r\n\r\n    let a= this.props.stores_managed.includes(b);\r\n    console.log(a);\r\n  }\r\n\r\n\r\n  async find_store_information(store_id)\r\n  {\r\n    let store_res = await this.storeApi.find_store_information(this.props.store_id);\r\n    let store = store_res.value;\r\n    console.log(\"store foundation_date = \"+store.foundation_date);\r\n    // alert(store_res.message);\r\n    \r\n    if (!store_res.was_exception)\r\n    {\r\n      this.setState({ snackbar: { children: store_res.message, severity: \"success\" } });\r\n      console.log(\"in find store info success\");\r\n      this.setState({\r\n\r\n        store_name: store.name,\r\n        founder_email: store.founder_email,\r\n        foundation_date:store.foundation_date,\r\n        // inventory : store.inventory,\r\n        // storeReview: store.storeReview\r\n      });\r\n        const store_reviews_and_ratings = store.storeReview;\r\n        const rating_entries = Object.entries(store_reviews_and_ratings.rating);\r\n        const ratings = []\r\n        rating_entries.map((e) => ratings.push(\"User - \"+e[0]+\" rate is \"+e[1]))\r\n\r\n\r\n      //Fetch product of the store\r\n      let products_res = await this.storeApi.get_products_by_store_id(this.state.store_id);\r\n      let products = products_res.value;\r\n      // alert(products_res.message);\r\n      if (!products_res.was_exception)\r\n      {\r\n        this.setState({ snackbar: { children: products_res.message, severity: \"success\" } });\r\n        this.setState({\r\n          products: products,\r\n          ratings: ratings,\r\n        });\r\n      }\r\n      else\r\n      {\r\n        this.setState({ snackbar: { children: products_res.message, severity: \"error\" } });\r\n      }\r\n      \r\n    }\r\n    else\r\n    {\r\n      this.setState({ snackbar: { children: store_res.message, severity: \"error\" } });\r\n    \r\n    }\r\n    \r\n  } \r\n  \r\n  async componentDidMount() {\r\n  }\r\n  async send_question_to_store(values) {\r\n    const store_id = this.props.store_id;\r\n    const question = values[0];\r\n    let response = await this.storeApi.send_question_to_store(store_id,question);\r\n    if (!response.was_exception) {\r\n      this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n    } \r\n    else {\r\n      this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n    }\r\n  }\r\n  async rate_store(rating) {\r\n    console.log(\"in rate store\");\r\n    console.log(\"rating is = \" + rating);\r\n    let response = await this.storeApi.rate_store(this.state.store_id, rating);\r\n    // alert(response.message);\r\n    this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n\r\n    if (!response.was_exception) {\r\n      this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n      //get store\r\n      //reload store\r\n    } \r\n    else {\r\n      this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const ratings = this.state.ratings;\r\n    const { redirectTo } = this.state;\r\n    return (\r\n        <div className=\"LoginWindow\">\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            {/* <h3>Store Name goes here</h3> */}\r\n            <h1>{this.state.store_name}</h1>\r\n            {/* <FormDialog fields={this.state.open_store_fields} getValues={this.open_store.bind(this)} name=\"Open Store\"></FormDialog> */}\r\n            {/* <FormDialog fields={this.state.send_question_to_store_fields} getValues={this.send_question_to_store.bind(this)} name=\"Send question to store\"></FormDialog> */}\r\n            <Paper>\r\n              <Typography\r\n                variant=\"body2\"\r\n                color=\"textPrimary\"\r\n                component=\"span\"\r\n                // style={{ width: \"70%\", margin: \"auto\" }} I think you should avoid break tags instead do something with the width\r\n              >\r\n                <div>\r\n                  <h5>Founder Email: {this.state.founder_email}</h5>\r\n                </div>\r\n                <div>\r\n                  <h5>Foundation Date: {this.state.foundation_date}</h5>\r\n                </div>\r\n                <div>\r\n                  <h5 style={{ color: 'blue' }}>Ratings:</h5>\r\n                </div>\r\n                {ratings.length !== 0 ? (\r\n                  <div>\r\n                    <label>{this.state.ratings}</label>\r\n                  </div>\r\n                ) : <h5 style={{ color: 'red' }}> No Rating for this store</h5>}\r\n              </Typography>\r\n            </Paper>\r\n            <h3>Products</h3>\r\n          </Grid>\r\n          <StoreProductsTable\r\n            store_id={this.state.store_id}\r\n          ></StoreProductsTable>\r\n          <Box sx={{ \"& > legend\": { mt: 2 } }}></Box>\r\n          <List\r\n            sx={{\r\n              width: \"100%\",\r\n              maxWidth: 360,\r\n              bgcolor: \"background.paper\",\r\n              position: \"relative\",\r\n              overflow: \"auto\",\r\n              maxHeight: 300,\r\n              \"& ul\": { padding: 0 },\r\n            }}\r\n            subheader={<li />}\r\n          >\r\n            {/* {this.state.products.map((product) => (\r\n                                <ListItem key={`item}-${product}`}>\r\n                                    <ListItemText primary={`Item ${product}`} />\r\n                                </ListItem>\r\n                                ))} */}\r\n          </List>\r\n          <Grid>\r\n            <MenuListComposition\r\n              item2={\r\n                !this.props.stores_managed.includes(parseInt(this.props.store_id)) ? \r\n                <FormDialog\r\n                  fields={this.state.send_question_to_store_fields}\r\n                  getValues={this.send_question_to_store.bind(this)}\r\n                  name=\"Send question to store\"\r\n                ></FormDialog>:null\r\n              }\r\n              item3={\r\n                this.props.stores_managed.includes(parseInt(this.props.store_id)) ? <Link to={{pathname:`StoreManagment`}}   underline=\"hover\" >{'Manage Store'}</Link> : null\r\n              }\r\n            ></MenuListComposition>{\" \"}\r\n          </Grid>\r\n          <BasicRating to_rate=\"Store\" rating={this.rate_store.bind(this)} />\r\n              {!!this.state.snackbar && (\r\n                <Snackbar\r\n                  open\r\n                  anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n                  onClose={this.handleCloseSnackbar}\r\n                  autoHideDuration={1}\r\n                >\r\n                  <Alert\r\n                    {...this.state.snackbar}\r\n                    onClose={this.handleCloseSnackbar}\r\n                  />\r\n                </Snackbar>\r\n              )}\r\n        </div>\r\n        \r\n    );\r\n  }\r\n}\r\n\r\n","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\HomePageSearch.js",["567"],[],"import React, { Component } from \"react\";\r\nimport Button from '@mui/material/Button';\r\nimport { Input } from \"@mui/material\";\r\nimport { ProductApi } from \"../API/ProductApi\";\r\nimport { ConnectApi } from \"../API/ConnectApi\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\";\r\n\r\n\r\nexport default class HomePageSearch extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            productname: undefined,\r\n            products: undefined,\r\n            option: \"name\",\r\n            val:undefined,\r\n\r\n        };\r\n        this.connectAPI = new ConnectApi();\r\n        this.productApi = new ProductApi();\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        console.log(target.name);\r\n        console.log(target.value);\r\n        this.setState({\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n    async componentDidMount() {\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    async find_product_by(option, val) {\r\n        console.log(\"in find product by\");\r\n        console.log(option);\r\n        switch (option) {\r\n            case \"name\":\r\n                this.find_product_by_name(val)\r\n                break;\r\n            case \"category\":\r\n                this.find_product_by_category(val)\r\n                break;\r\n            case \"keywords\":\r\n                this.find_product_by_keywords(val)\r\n                break;\r\n            default:\r\n                console.log(\"option is empty\");\r\n        }\r\n\r\n    }\r\n    async find_product_by_name(val) {\r\n        //this.props.show_products(\"products\");\r\n        console.log(val);\r\n        console.log(\"in find product by name\");\r\n        let response = await this.productApi.find_products_by_name(val);\r\n        if (!response.was_exception) {\r\n\r\n              const products = response.value;\r\n\r\n            //show products\r\n            this.props.show_products(products);\r\n        }\r\n        else {\r\n            console.log(\"in find product by name - fail\");\r\n        }\r\n\r\n    }\r\n\r\n    async find_product_by_category(val) {\r\n        console.log(\"in find product by category\");\r\n        let response = await this.productApi.find_products_by_category(val);\r\n        if (!response.was_exception) {\r\n            this.setState({\r\n                products: response.value\r\n            });\r\n            //show products\r\n        }\r\n        else {\r\n            console.log(\"in find product by category - fail\");\r\n        }\r\n\r\n    }\r\n    async find_product_by_keywords(val) {\r\n        console.log(\"in find product by keywords\");\r\n        let response = await this.productApi.find_products_by_keywords(val);\r\n        if (!response.was_exception) {\r\n            this.setState({\r\n                products: response.value\r\n            });\r\n            //show products\r\n        }\r\n        else {\r\n            console.log(\"in find product by keywords - fail\");\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const searchLabel = \"Search product by \"\r\n        const { redirectTo } = this.state\r\n        return (\r\n            <main class=\"HomePageSearchMain\" >\r\n                <div class=\"HomePageSearchWindow \" >\r\n                    {/* <h3>Welcome To the Green Trading System</h3> */}\r\n                    <form class=\"HomePageSearchForm\" >\r\n                        <Input name=\"val\" value={this.state.val} placeholder={searchLabel + this.state.option} onChange={this.handleInputChange} required/>\r\n                        <Button onClick={() => this.find_product_by(this.state.option, this.state.val)} variant=\"contained\">Search </Button>\r\n                        \r\n                        \r\n                        <select name=\"option\" value={this.state.option} onChange={this.handleInputChange} required>\r\n                            <option value=\"name\">name</option>\r\n                            <option value=\"category\">category</option>\r\n                            <option value=\"keywords\">keywords</option>\r\n                        </select>\r\n\r\n\r\n                    </form>\r\n                    {!!this.state.snackbar && (\r\n                    <Snackbar\r\n                    open\r\n                    anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n                    onClose={this.handleCloseSnackbar}\r\n                    autoHideDuration={6000}\r\n                    >\r\n                    <Alert\r\n                        {...this.state.snackbar}\r\n                        onClose={this.handleCloseSnackbar}\r\n                    />\r\n                    </Snackbar>\r\n  )}\r\n                </div>\r\n            </main>\r\n\r\n        );\r\n    }\r\n\r\n\r\n};","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\ProductPageNevigator.js",[],[],"C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\StoreManagment.js",["568","569","570","571"],[],"import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport { AdminApi } from '../API/AdminApi';\r\nimport { experimentalStyled as styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\nimport FormDialog from './FormDialog';\r\nimport FormDialogPermissions from './FormDialogPermissions';\r\nimport { StoreApi } from '../API/StoreApi';\r\nimport StoreManagmentProductsTable from './StoreManagmentProductsTable';\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\"; \r\nimport { Utils } from '../ServiceObjects/Utils';\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nexport default class StoreManagment extends Component {\r\n    static displayName = StoreManagment.name;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            storeidtoshowhistory: undefined,\r\n            useremailtoshowhistory: undefined,\r\n            useremailtoremove: undefined,\r\n            storeidtoremove: undefined,\r\n            add_product_fields: [\"quantity\", \"name\", \"price\", \"category\", \"key_words\"],\r\n            arr: [],\r\n            delete_product_fields: [\"product_id\"],\r\n            purchase_policies_fields: [\"policy\"],\r\n            discount_policies_fields: [\"policy\"],\r\n            appoint_manager_fields: [\"user_email_to_appoint\"],\r\n            appoint_owner_fields: [\"user_email_to_appoint\"],\r\n            remove_owner_appointment_fields: [\"user_email_to_appoint\"],\r\n            remove_manager_appointment_fields: [\"user_email_to_appoint\"],\r\n            change_manager_permissions_fields: [\"manager_email\"],\r\n            answer_user_questions_fields: [\"question_id\", \"answer\"],\r\n            user_massages_fields: [],\r\n            store_purchase_history_fields: [],\r\n            // אילוצי עקביות\r\n            close_store_temp_fields: [],\r\n            open_closed_store_fields: [],\r\n            staff_information_fields: [],\r\n            store_id: this.props.store_id,\r\n\r\n            option: \"Simple\",\r\n            snackbar: null,\r\n\r\n        };\r\n      \r\n        this.adminApi = new AdminApi();\r\n        this.storeApi = new StoreApi();\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        console.log(\"in store managemrnt , store page = \"+this.props.store_id);\r\n\r\n\r\n    }\r\n\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        this.setState({\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    async componentDidMount() {\r\n    }\r\n\r\n\r\n    async add_product(values) {\r\n        console.log(\"in add product!\\n\");\r\n        const store_id = this.state.store_id;\r\n        const quantity = values[0];\r\n        const name = values[1];\r\n        const price = values[2];\r\n        const category = values[3];\r\n        const key_words = values[4];\r\n\r\n        const response = await this.storeApi.add_product_to_store(store_id, quantity, name, price, category, key_words);\r\n        // alert(response.message);\r\n        if (!response.was_exception) {\r\n            this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n            console.log(\"in add product - success!\\n\");\r\n            //show history\r\n        }\r\n        else {\r\n            this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n\r\n        }\r\n    }\r\n    async delete_product(values) {\r\n        /*delete_product_fields: [\"product_id\", \"store_id\"],*/\r\n        console.log(\"in delete product!\\n\");\r\n        const product_id = values[0];\r\n        const store_id = this.state.store_id;\r\n\r\n        const response = await this.storeApi.delete_product_from_store(product_id, store_id);\r\n        // alert(response.message);\r\n        if (!response.was_exception) {\r\n            this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n            console.log(\"in delete product - success!\\n\");\r\n            //show history\r\n        }\r\n        else {\r\n            this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n\r\n        }\r\n    }\r\n    async store_purchase_policies(values) {\r\n        console.log(\"in store_purchase_policies!\\n\");\r\n        console.log(\"in store_purchase_policies!\\n\");\r\n        const store_id = this.state.store_id;\r\n        const policy = values[0];\r\n\r\n        const response = await this.storeApi.puchase_policies_fields(store_id, policy);\r\n        // alert(response.message);\r\n        if (!response.was_exception) {\r\n            this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n            console.log(\"in store_purchase_policies - success!\\n\");\r\n            //show history\r\n        }\r\n        else {\r\n            this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n\r\n        }\r\n    }\r\n    async store_discount_policy(values) {\r\n        console.log(\"in store_discount_policy!\\n\");\r\n        const store_id = this.state.store_id;\r\n        const policy = values[0];\r\n\r\n\r\n        const response = await this.storeApi.set_store_discount_policy(store_id, policy);\r\n        // alert(response.message);\r\n        if (!response.was_exception) {\r\n            this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n            console.log(\"in store_discount_policy - success!\\n\");\r\n            //show history\r\n        }\r\n        else {\r\n            this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n\r\n        }\r\n    }\r\n    async add_owner(values) {\r\n        console.log(\"in add_owner!\\n\");\r\n        const user_email_to_appoint = values[0];\r\n        const store_id = this.state.store_id;\r\n\r\n        const response = await this.storeApi.add_owner(user_email_to_appoint, store_id);\r\n        // alert(response.message);\r\n\r\n        if (!response.was_exception) {\r\n            this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n            console.log(\"in add_owner - success!\\n\");\r\n            //show history\r\n        }\r\n        else {\r\n            this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n\r\n        }\r\n    }\r\n    async delete_owner(values) {\r\n        console.log(\"in delete_owner!\\n\");\r\n        const user_email_to_delete_appointment = values[0];\r\n        const store_id = this.state.store_id;\r\n\r\n        const response = await this.storeApi.delete_owner(user_email_to_delete_appointment, store_id);\r\n        // alert(response.message);\r\n        if (!response.was_exception) {\r\n            this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n            console.log(\"in delete_owner - success!\\n\");\r\n            //show history\r\n        }\r\n        else {\r\n            this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n\r\n        }\r\n    }\r\n    async add_manager(values) {\r\n        console.log(\"in add_manager!\\n\");\r\n        const user_email_to_appoint = values[0];\r\n        const store_id = this.state.store_id;\r\n\r\n\r\n        const response = await this.storeApi.add_manager(user_email_to_appoint, store_id);\r\n        // alert(response.message);\r\n        if (!response.was_exception) {\r\n            this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n            console.log(\"in add_manager - success!\\n\");\r\n            //show history\r\n        }\r\n        else {\r\n            this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n\r\n        }\r\n    }\r\n    async delete_manager(values) {\r\n        console.log(\"in delete_manager!\\n\");\r\n        const user_email_to_delete_appointment = values[0];\r\n        const store_id = this.state.store_id;\r\n\r\n        console.log(store_id);\r\n\r\n\r\n        const response = await this.storeApi.delete_manager(user_email_to_delete_appointment, store_id);\r\n        // alert(response.message);\r\n        if (!response.was_exception) {\r\n            this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n            console.log(\"in delete_manager - success!\\n\");\r\n            //show history\r\n        }\r\n        else {\r\n            this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n\r\n        }\r\n    }\r\n\r\n    async close_store_temporarily(values) {\r\n        console.log(\"in close_store_temporarily!\\n\");\r\n        const store_id = this.state.store_id;\r\n        const response = await this.storeApi.close_store_temporarily(store_id);\r\n        // alert(response.message);\r\n        if (!response.was_exception) {\r\n            this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n            console.log(\"in close_store_temporarily - success!\\n\");\r\n            //show history\r\n        }\r\n        else {\r\n            this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n\r\n        }\r\n    }\r\n\r\n    async open_closed_store(values) {\r\n        console.log(\"in open_close_store!\\n\");\r\n        const store_id = this.state.store_id;\r\n        const response = await this.storeApi.open_close_store(store_id);\r\n        // alert(response.message);\r\n        if (!response.was_exception) {\r\n            this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n            console.log(\"in open_close_store - success!\\n\");\r\n            //show history\r\n        }\r\n        else {\r\n            this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n\r\n        }\r\n    }\r\n\r\n    async view_store_management_information(values) {\r\n        console.log(\"in view_store_management_information!\\n\");\r\n        const store_id = this.state.store_id;\r\n        const response = await this.storeApi.view_store_management_information(store_id);\r\n        // alert(response.message);\r\n        if (!response.was_exception) {\r\n            this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n            console.log(\"in view_store_management_information - success!\\n\");\r\n            return response.value;\r\n            //show history\r\n        }\r\n        else {\r\n            this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n\r\n        }\r\n    }\r\n\r\n    async manager_view_store_questions(values) {\r\n        console.log(\"in manager_view_store_questions!\\n\");\r\n        const store_id = this.state.store_id;\r\n        const response = await this.storeApi.manager_view_store_questions(store_id);\r\n        // alert(response.message);\r\n        if (!response.was_exception) {\r\n            this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n            console.log(\"in manager_view_store_questions - success!\\n\");\r\n            //show history\r\n        }\r\n        else {\r\n            this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n\r\n        }\r\n    }\r\n\r\n    async manager_answer_question(values) {\r\n        console.log(\"in manager_answer_question!\\n\");\r\n        const store_id = this.state.store_id;\r\n        const question_id = values[0];\r\n        const answer = values[1];\r\n\r\n\r\n        const response = await this.storeApi.manager_answer_question(store_id, question_id, answer);\r\n        // alert(response.message);\r\n        if (!response.was_exception) {\r\n            this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n            console.log(\"in manager_answer_question - success!\\n\");\r\n            //show history\r\n        }\r\n        else {\r\n            this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n\r\n        }\r\n    }\r\n    async view_store_purchases_history(values) {\r\n        console.log(\"in view_store_purchases_history!\\n\");\r\n        const store_id = this.state.store_id;\r\n        const response = await this.storeApi.view_store_purchases_history(store_id);\r\n        // alert(response.message);\r\n        if (!response.was_exception) {\r\n            this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n            console.log(\"in view_store_purchases_history - success!\\n\");\r\n            //show history\r\n        }\r\n        else {\r\n            this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n\r\n        }\r\n    }\r\n    async edit_manager_permissions(values) {\r\n        const user_email = values[0];\r\n        if (Utils.check_email(user_email)== 0)\r\n        {\r\n            this.setState({ snackbar: { children: \"Illegal email\", severity: \"error\" } });\r\n            return;\r\n\r\n        }\r\n        console.log(user_email);\r\n        window.location.href+=`/ManagerPermissions/${user_email}`\r\n        console.log(\"in edit_manager_permissions!\\n\");\r\n        \r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n\r\n\r\n    render() {\r\n        const { redirectTo } = this.state\r\n        // { this.state.redirect ? (<Redirect push to=\"/\"/>) : null }\r\n\r\n        return (\r\n\r\n            <Box sx={{ flexGrow: 1 }}>\r\n                \r\n                <h2 align=\"center\">Store Managment</h2>\r\n                <Grid>\r\n                    <StoreManagmentProductsTable store_id={this.state.store_id}></StoreManagmentProductsTable>\r\n                </Grid>\r\n                <Grid container spacing={6} paddingRight={25} paddingLeft={25} paddingTop={10}>\r\n                    <Grid item xs={3}>  <Item variant=\"outlined\"> <FormDialog outlinedVar=\"text\" fields={this.state.add_product_fields} getValues={this.add_product.bind(this)} name=\"Add Product\"></FormDialog></Item>                    </Grid>\r\n                    <Grid item xs={3}>  <Item variant=\"outlined\"> <FormDialog outlinedVar=\"text\" fields={this.state.delete_product_fields} getValues={this.delete_product.bind(this)} name=\"Delete Product\"></FormDialog></Item></Grid>\r\n                    {/* <Grid item xs={3}>  <Item variant=\"outlined\"> <FormDialog outlinedVar=\"text\" fields={this.state.purchase_policies_fields} getValues={this.store_purchase_policies.bind(this)} name=\"Store Purchase Policies\"></FormDialog></Item></Grid>\r\n                    <Grid item xs={3}>  <Item variant=\"outlined\"> <FormDialog outlinedVar=\"text\" fields={this.state.discount_policies_fields} getValues={this.store_discount_policy.bind(this)} name=\"Store Discount Policies\"></FormDialog></Item></Grid > */}\r\n                    <Grid item xs={3}>  <Item variant=\"outlined\"> <FormDialog outlinedVar=\"text\" fields={this.state.appoint_manager_fields} getValues={this.add_manager.bind(this)} name=\"Add Manager\"></FormDialog></Item></Grid >\r\n                    <Grid item xs={3}>  <Item variant=\"outlined\"> <FormDialog outlinedVar=\"text\" fields={this.state.appoint_owner_fields} getValues={this.add_owner.bind(this)} name=\"Add Owner\"></FormDialog></Item></Grid >\r\n                    <Grid item xs={3}>  <Item variant=\"outlined\"> <FormDialog outlinedVar=\"text\" fields={this.state.remove_owner_appointment_fields} getValues={this.delete_owner.bind(this)} name=\"Delete Owner\"></FormDialog></Item></Grid>\r\n                    <Grid item xs={3}>  <Item variant=\"outlined\"> <FormDialog outlinedVar=\"text\" fields={this.state.remove_manager_appointment_fields} getValues={this.delete_manager.bind(this)} name=\"Remove Manager\"></FormDialog></Item ></Grid >\r\n                    <Grid item xs={3}>  <Item variant=\"outlined\"> <FormDialog outlinedVar=\"text\" fields={this.state.change_manager_permissions_fields} getValues={this.edit_manager_permissions.bind(this)} name=\"Change Manager Permissions\"></FormDialog></Item ></Grid >\r\n                    {/* <Grid item xs={3}>  <Item variant=\"outlined\"> <FormDialogPermissions outlinedVar=\"text\" fields={this.state.change_manager_permissions_fields} getValues={this.edit_manager_permissions.bind(this)} name=\"Change Manager Permissions \"></FormDialogPermissions></Item ></Grid > */}\r\n                    {/* <Grid item xs={3}>  <Item variant=\"outlined\"> <Link to = {`ManagerViewStoreQuestions/${id}`} query={{store:1}}>Bid Item</Link></Item ></Grid >         */}\r\n                    <Grid item xs={3}>  <Item variant=\"outlined\"> <Link to={{pathname:`ManagerViewStoreQuestions` }}   underline=\"hover\" >{'View User Questions'}</Link>   </Item ></Grid >\r\n                    {/* <Grid item xs={3}>  <Item variant=\"outlined\"> <Link to={{pathname:`ManagerPermissions` }}   underline=\"hover\" >{'Change Manager Permissions111'}</Link>   </Item ></Grid > */}\r\n                    {/* <Grid item xs={3}>  <Item variant=\"outlined\"> <Link href=\"/ViewStorePurchaseHistory\"  underline=\"hover\" >{'View Store Purchase History'}</Link>   </Item ></Grid > */}\r\n\r\n                    {/* <Grid item xs={3}>  <Item variant=\"outlined\"> <FormDialog outlinedVar=\"text\" fields={this.state.close_store_temp_fields} getValues={this.close_store_temporarily.bind(this)} name=\"Close Store Temporarily\"></FormDialog></Item ></Grid > */}\r\n                    {/* <Grid item xs={3}>  <Item variant=\"outlined\"> <FormDialog outlinedVar=\"text\" fields={this.state.open_closed_store_fields} getValues={this.open_closed_store.bind(this)} name=\"Open Closed Store\"></FormDialog></Item ></Grid > */}\r\n                    {/* <Grid item xs={3}>  <Item variant=\"outlined\"> <FormDialog outlinedVar=\"text\" fields={this.state.user_massages_fields} getValues={this.manager_view_store_questions.bind(this)} name=\"View User Questions\"></FormDialog></Item ></Grid > */}\r\n\r\n                    <Grid item xs={3}>  <Item variant=\"outlined\"> <Link to={{pathname:`ViewStorePurchaseHistory` }} underline=\"hover\" >{'View Store Purchase History'}</Link></Item ></Grid>\r\n\r\n                    {/* <Grid item xs={3}>  <Item variant=\"outlined\"> <FormDialog outlinedVar=\"text\" fields={this.state.store_purchase_history_fields} getValues={this.view_store_purchases_history.bind(this)} name=\"View Store Purchase History\"></FormDialog></Item ></Grid > */}\r\n                    <Grid item xs={3}>  <Item variant=\"outlined\"> <FormDialog outlinedVar=\"text\" fields={this.state.close_store_temp_fields} getValues={this.close_store_temporarily.bind(this)} name=\"Close Store Temporarily\" title=\"Confirm to Close Store Temporarily\" submit_button=\"Confirm\"></FormDialog></Item ></Grid >\r\n                    <Grid item xs={3}>  <Item variant=\"outlined\"> <FormDialog outlinedVar=\"text\" fields={this.state.open_closed_store_fields} getValues={this.open_closed_store.bind(this)} name=\"Open Closed Store\" title=\"Confirm to Open Closed Store\" submit_button=\"Confirm\"></FormDialog></Item ></Grid >\r\n                    {/* <Grid item xs={3}>  <Item variant=\"outlined\"> <FormDialog outlinedVar=\"text\" fields={this.state.staff_information_fields} getValues={this.view_store_management_information.bind(this)} name=\"View Staff Information\"></FormDialog></Item ></Grid > */}\r\n                    <Grid item xs={3}>  <Item variant=\"outlined\"> <Link outlinedVar=\"text\" to={{pathname:`ViewStaffInformation` }} >{'View Staff Information'}</Link></Item ></Grid >\r\n\r\n                    {/* <Grid item xs={3}>  <Item variant=\"outlined\"> <FormDialog outlinedVar=\"text\" fields={this.state.answer_user_questions_fields} getValues={this.manager_answer_question.bind(this)} name=\"Answer Users Questions\"></FormDialog></Item ></Grid> */}\r\n                    {/* <Grid item xs={3}>  <Item variant=\"outlined\"> <Link to={{pathname:`AddDiscount` }} underline=\"hover\" >{'Add Discount Rule'}</Link></Item ></Grid>\r\n                    <Grid item xs={3}>  <Item variant=\"outlined\"> <Link to={{pathname:`AddPurchase` }} underline=\"hover\" >{'Add Purchase Rule'}</Link></Item ></Grid>\r\n                    <Grid item xs={3}>  <Item variant=\"outlined\"> <Link to={{pathname:`CreatePredict` }} underline=\"hover\" >{'Create Predict'}</Link></Item ></Grid> */}\r\n                    <Grid item xs={3}>  <Item variant=\"outlined\"> <Link to={{pathname:`StorePolicies` }} underline=\"hover\" >{'Store Policies'}</Link></Item ></Grid>\r\n                    <Grid item xs={3}>  <Item variant=\"outlined\"> <Link to={{pathname:`ViewBidsStatus` }}   underline=\"hover\" >{\"Store Bids\"}</Link> </Item ></Grid>\r\n                    <Grid item xs={3}>  <Item variant=\"outlined\"> <Link to={{pathname:`ViewAppointmentsStatus` }}   underline=\"hover\" >{\"Show Store Appointments Agreements\"}</Link> </Item ></Grid>\r\n\r\n\r\n\r\n\r\n\r\n                </Grid>\r\n\r\n                {!!this.state.snackbar && (\r\n                        <Snackbar\r\n                        open\r\n                        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n                        onClose={this.handleCloseSnackbar}\r\n                        autoHideDuration={6000}\r\n                        >\r\n                        <Alert\r\n                            {...this.state.snackbar}\r\n                            onClose={this.handleCloseSnackbar}\r\n                        />\r\n                        </Snackbar>\r\n                    )}\r\n                <h3> </h3>\r\n            </Box>\r\n\r\n\r\n        );\r\n\r\n    }\r\n\r\n}","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\ViewStat.js",["572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602"],[],"import React, { Component } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Link from \"@mui/material/Button\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport { ConnectApi } from \"../API/ConnectApi\";\r\nimport Register from \"./Register.js\";\r\nimport Box from \"@mui/material/Box\";\r\nimport ImageListItem from \"@mui/material/Box\";\r\nimport ImageList from \"@mui/material/Box\";\r\nimport { StoreApi } from \"../API/StoreApi\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport ListSubheader from \"@mui/material/ListSubheader\";\r\nimport { CartApi } from \"../API/CartApi\";\r\nimport MenuListComposition from \"./MenuListComposition\";\r\nimport { Container, Row, Col } from \"react-grid-system\";\r\nimport { Paper } from \"@mui/material\";\r\nimport { Typography } from \"@mui/material\";\r\nimport Rating from \"@mui/material/Rating\";\r\nimport BasicRating from \"./Rating\";\r\nimport ShoppingCart from \"./ShoppingCart\";\r\nimport { ThirtyFpsRounded } from \"@mui/icons-material\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport FormDialog from \"./FormDialog\";\r\nimport Card from \"@mui/material/Card\";\r\nimport { experimentalStyled as styled } from \"@mui/material/styles\";\r\nimport { AdminApi } from \"../API/AdminApi\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { User } from \"../ServiceObjects/User\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\";\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === \"dark\" ? \"#1A2027\" : \"#fff\",\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(2),\r\n  textAlign: \"center\",\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst GUEST = 0;\r\nconst ASSIGN_USER = 1;\r\nconst ADMIN = 2;\r\n\r\nexport default class ViewStat extends Component {\r\n  static displayName = ViewStat.name;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      stat: undefined,\r\n      init_system_time: undefined,\r\n      login_per_minutes: undefined,\r\n      logout_per_minutes: undefined,\r\n      connect_per_minutes: undefined,\r\n      register_per_minutes: undefined,\r\n      buy_cart_per_minutes: undefined,\r\n      num_of_users: undefined,\r\n      num_of_onlines: undefined,\r\n      num_of_guests: undefined,\r\n      num_of_non_managers_and_owners: undefined,\r\n      managers_but_not_owners_or_founders: undefined,\r\n      owners_or_founders: undefined,\r\n      got_input: true,\r\n      snackbar: null,\r\n    };\r\n    this.adminApi = new AdminApi();\r\n  }\r\n\r\n  async componentDidMount() {\r\n    console.log(\"in get market stat\\n\");\r\n    let response = await this.adminApi.get_market_stats();\r\n    console.log(\"response = \" + response);\r\n    const stats = response.value;\r\n    // alert(response.message);\r\n    if (!response.was_excecption) {\r\n      console.log(\"in get market stats - success!\\n\");\r\n      console.log(response);\r\n      this.setState({\r\n        snackbar: { children: response.message, severity: \"success\" },\r\n        init_system_time: stats.init_system_time,\r\n        login_per_minutes: stats.login_per_minutes,\r\n        logout_per_minutes: stats.logout_per_minutes,\r\n        connect_per_minutes: stats.connect_per_minutes,\r\n        register_per_minutes: stats.register_per_minutes,\r\n        buy_cart_per_minutes: stats.buy_cart_per_minutes,\r\n        num_of_onlines: stats.num_of_onlines,\r\n        num_of_users: stats.num_of_users,\r\n        num_of_guests: stats.num_of_guests,\r\n        num_of_non_managers_and_owners: stats.num_of_non_managers_and_owners,\r\n        managers_but_not_owners_or_founders: stats.managers_but_not_owners_or_founders,\r\n        owners_or_founders: stats.owners_or_founders,\r\n        got_input: true,\r\n      });\r\n    } else {\r\n      console.log(\"Error View Stat\");\r\n      this.setState({ got_input: false });\r\n      return (\r\n        <>\r\n          <Navigate to=\"/\" />\r\n        </>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { redirectTo } = this.state;\r\n    return (\r\n      <main class=\"LoginMain\">\r\n        <div class=\"LoginWindow\">\r\n          <row>\r\n            <h3>Market Statistics</h3>\r\n          </row>\r\n          {/* {[0,1,2,3,4,5,6,7].map((item) => (\r\n                            <Card >\r\n                            {item}\r\n                            </Card>\r\n                        ))} */}\r\n          <Card>\r\n            <div> init system time: {this.state.init_system_time}</div>\r\n            <div> login per minutes: {this.state.login_per_minutes}</div>\r\n            <div> logout per minutes: {this.state.logout_per_minutes}</div>\r\n            <div> connect per minutes: {this.state.connect_per_minutes}</div>\r\n            <div> register per minutes: {this.state.register_per_minutes}</div>\r\n            <div> buy cart per minutes: {this.state.buy_cart_per_minutes}</div>\r\n            <div> number of online users: {this.state.num_of_onlines}</div>\r\n            <div> number of users: {this.state.num_of_users}</div>\r\n            <div> number of guests: {this.state.num_of_guests}</div>\r\n            <div>\r\n              {\" \"}\r\n              number of users that are not owners or managers:{\" \"}\r\n              {this.state.num_of_non_managers_and_owners}\r\n            </div>\r\n            <div>\r\n              {\" \"}\r\n              number of users that are managers but now owners:{\" \"}\r\n              {this.state.managers_but_not_owners_or_founders}\r\n            </div>\r\n            <div>\r\n              {\" \"}\r\n              number of users that are owners or founders:{\" \"}\r\n              {this.state.owners_or_founders}\r\n            </div>\r\n          </Card>\r\n          {/* <Grid item xs={3}>  <Item variant=\"outlined\"> <FormDialog outlinedVar=\"text\" fields={this.state.answer_user_questions_fields} getValues={this.manager_answer_question.bind(this)} name=\"Answer Users Questions\"></FormDialog></Item ></Grid> */}\r\n        </div>\r\n        {!!this.state.snackbar && (\r\n          <Snackbar\r\n            open\r\n            anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n            onClose={this.handleCloseSnackbar}\r\n            autoHideDuration={6000}\r\n          >\r\n            <Alert\r\n              {...this.state.snackbar}\r\n              onClose={this.handleCloseSnackbar}\r\n            />\r\n          </Snackbar>\r\n        )}\r\n      </main>\r\n    );\r\n  }\r\n}\r\n","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\AdminSendMessage.js",["603"],[],"// DELETE this page\r\nimport React, { Component } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Link from '@mui/material/Button';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport { Navigate } from 'react-router-dom'; \r\nimport { AdminApi } from '../API/AdminApi';\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\";\r\n\r\nexport default class AdminSendMessage extends Component {\r\n    static displayName = AdminSendMessage.name;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            to: undefined,\r\n            subject: undefined,\r\n            content: undefined,\r\n            snackbar: null,\r\n        };\r\n        this.adminApi = new AdminApi();\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n\r\n\r\n    }\r\n    \r\n    handleInputChange(event){\r\n        const target = event.target;\r\n        this.setState({\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n    \r\n    async handleSubmit(event){\r\n        event.preventDefault();\r\n        const {username, password, role} = this.state;\r\n        const loginRedirectAndRes = await this.authApi.Login(username, password, role);\r\n        if(loginRedirectAndRes) {\r\n            const loginRes = loginRedirectAndRes.data;\r\n\r\n            if (loginRes && loginRes.isSuccess) {\r\n                this.props.loginUpdateHandler(username, this.getUserRole(role))\r\n            } else {\r\n                this.setState({\r\n                    loginError: loginRes.error\r\n                })\r\n            }\r\n        } else {\r\n            this.setState({\r\n                loginError: \"You need to be a guest\"\r\n            })\r\n        }\r\n    }\r\n   \r\n\r\n\r\n\r\n    \r\n    async componentDidMount() {\r\n    }\r\n\r\n    async send(){\r\n        const {to, subject, content} = this.state;\r\n        console.log(\"to is \"+to+\" , subject is \"+subject+\", content is \"+content+\"\\n\");\r\n        const question = subject+\"\\n\"+content;\r\n        let response = await this.adminApi.admin_answer_user_question(question);\r\n        if (!response.was_exception)\r\n        {\r\n            this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n        }\r\n        else{\r\n            this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n\r\n        }\r\n    }\r\n    \r\n   \r\n    \r\n    render() {\r\n        const {redirectTo} = this.state\r\n        if (this.state.submitted) {\r\n            console.log(\"have to route to homepage whe it will be ready\\n\\n\\n\");\r\n            return <Navigate to=\"/HomePageSearch\"/>\r\n        } else {\r\n            return (\r\n                <main className=\"LoginMain\">\r\n                    <div className=\"LoginWindow\">\r\n                    <Link href=\"/\"><HomeIcon></HomeIcon></Link>\r\n                        <h3>Send Messages - (Admin)</h3>\r\n                        <form className=\"LoginForm\" >\r\n                            {this.state.loginError ?\r\n                                <div className=\"CenterItemContainer\"><label>{this.state.loginError}</label></div> : null}\r\n                            <div>To</div>\r\n                            <input type=\"text\" name=\"email\" value={this.state.email} onChange={this.handleInputChange.bind(this)}\r\n                                    placeholder=\"Email\" required/>\r\n                            <div>Subject</div>\r\n                            <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleInputChange.bind(this)}\r\n                                    placeholder=\"Password\" required/>\r\n                                    {/* <InputBox /> */}\r\n                            \r\n                            <div className=\"ConnectRegister\">\r\n                                \r\n                                <Button onClick={() => this.send()} variant=\"contained\">Send </Button>\r\n                                \r\n                            </div>\r\n                        </form>\r\n                        {!!this.state.snackbar && (\r\n                        <Snackbar\r\n                        open\r\n                        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n                        onClose={this.handleCloseSnackbar}\r\n                        autoHideDuration={6000}\r\n                        >\r\n                        <Alert\r\n                            {...this.state.snackbar}\r\n                            onClose={this.handleCloseSnackbar}\r\n                        />\r\n                        </Snackbar>\r\n                    )}\r\n                    </div>\r\n                </main>\r\n            );\r\n        \r\n        }\r\n    }\r\n}","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\ProductPage.js",["604","605","606"],[],"import React, { Component } from 'react';\r\nimport { StoreApi } from '../API/StoreApi';\r\nimport { Paper } from '@mui/material';\r\nimport { Typography } from '@mui/material';\r\nimport BasicRating from './Rating';\r\nimport { ProductApi } from '../API/ProductApi';\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\"; \r\n\r\n  \r\nexport default class ProductPage extends Component {\r\n    static displayName = ProductPage.name;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            product_id:this.props.product_id,\r\n            store_id:this.props.store_id,\r\n            name: undefined,\r\n            category:undefined,\r\n            key_words:undefined,\r\n            price:undefined,\r\n            reviews:[],\r\n            ratings:[],\r\n            add_product_review_fields:[\"Review\"],\r\n            snackbar: null,\r\n        };\r\n        this.storeApi = new StoreApi();\r\n        this.productApi = new ProductApi();\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        console.log(\"in product page, product id = \"+this.state.product_id+\" store id = \"+this.state.store_id);\r\n\r\n    } \r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        console.log(target.name);\r\n        console.log(target.value);\r\n        this.setState({\r\n            [target.name]: target.value\r\n        });\r\n    }   \r\n\r\n    \r\n    \r\n    \r\n    async componentDidMount() {\r\n        console.log(\"product id = \"+this.state.product_id);\r\n      let product_res =  await this.productApi.find_product_information(this.state.product_id, this.state.store_id) ;\r\n      // alert(product_res.message);\r\n      if (!product_res.was_exception)\r\n      {\r\n        this.setState({ snackbar: { children: product_res.message, severity: \"success\" } });\r\n        let product = product_res.value;\r\n        const product_reviews_and_ratings = product.productReview;\r\n        const rating_entries = Object.entries(product_reviews_and_ratings.rating);\r\n        const ratings = []\r\n        rating_entries.map((e) => ratings.push(\"User - \"+e[0]+\" rate is \"+e[1]))\r\n\r\n\r\n        const reviews_entries = Object.entries(product_reviews_and_ratings.reviews);\r\n        const reviews = []\r\n        reviews_entries.map((e) => reviews.push(\"User - \"+e[0]+\" review is \"+e[1]))\r\n        this.setState({\r\n          name: product.name,\r\n          category:product.category,\r\n          key_words:product.key_words,\r\n          price:product.price,\r\n          reviews:reviews,\r\n          ratings:ratings,\r\n    });\r\n\r\n      }\r\n      else\r\n      {\r\n        this.setState({ snackbar: { children: product_res.message, severity: \"error\" } });\r\n      }\r\n      \r\n\r\n\r\n      \r\n      \r\n \r\n    }\r\n    \r\n  async rate_product(rating) {\r\n    console.log(\"in rate Product\");\r\n    console.log(\"rating is = \"+rating);\r\n    let response = await this.productApi.rate_product(this.state.product_id, this.state.store_id,rating);\r\n    // alert(response.message);\r\n    if (!response.was_exception)\r\n    {\r\n      this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n      //get product\r\n      //reload product\r\n      \r\n    }\r\n    else\r\n    {\r\n      this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n\r\nasync find_product_by_category(val) {\r\n    console.log(\"in find_product_by_category\");\r\n    let response = await this.productApi.find_product_by_category(val);\r\n    // alert(response.message);\r\n        if (!response.was_exception) {\r\n            console.log(\"in find_product_by_category- success\");\r\n            this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n        }\r\n        else {\r\n            console.log(\"in find_product_by_category - fail\");\r\n            this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n        }\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\n    render() {\r\n      const ratings = this.state.ratings;\r\n      const reviews = this.state.reviews;\r\n        const {redirectTo} = this.state\r\n            return (\r\n                <main class=\"LoginMain\">\r\n                    <div class=\"LoginWindow\">\r\n                        {/* <row><h3>Product Name goes here</h3></row> */}\r\n                        <row><h3>{this.state.name}</h3></row>  \r\n                        <Paper >\r\n              \r\n             <Typography\r\n                // style={{ width: \"70%\", margin: \"auto\" }} I think you should avoid break tags instead do something with the width\r\n                variant=\"body2\"\r\n                color=\"textPrimary\"\r\n                component=\"span\"\r\n              >\r\n                 {/* <div> Product info goes here</div> */}\r\n                        {/* <div> Product info goes here</div>\r\n                        <div> Product info goes here</div>\r\n                        <div> Product info goes here</div>\r\n                        <div> Product info goes here</div> */}\r\n                        \r\n                        <div> Category: {this.state.category}</div>\r\n                        <div> Price: {this.state.price}</div>\r\n                        <h5 style={{ color: 'blue' }}>Ratings</h5>\r\n                        {ratings.length !== 0 ? <div> {ratings.map((r)=><div>{r}</div>)}</div>: <h5 style={{ color: 'red' }}> No Rating for this store</h5>} \r\n                        <h5 style={{ color: 'blue' }}>Reviews</h5>\r\n                        {reviews.length !== 0 ? <div> {reviews.map((r)=><div>{r}</div>)}</div>: <h5 style={{ color: 'red' }}> No Reviews for this store</h5>} \r\n\r\n              </Typography>\r\n            </Paper>\r\n            {!!this.state.snackbar && (\r\n                        <Snackbar\r\n                        open\r\n                        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n                        onClose={this.handleCloseSnackbar}\r\n                        autoHideDuration={6000}\r\n                        >\r\n                        <Alert\r\n                            {...this.state.snackbar}\r\n                            onClose={this.handleCloseSnackbar}\r\n                        />\r\n                        </Snackbar>\r\n                    )}\r\n                            \r\n                            {/* <BasicRating to_rate=\"Product\" rating={this.rate_product.bind(this)} /> */}\r\n                             \r\n                       \r\n                    </div>\r\n                </main>\r\n            );\r\n        \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/* <Typography component=\"legend\">Controlled</Typography>\r\n      <Rating\r\n        name=\"simple-controlled\"\r\n        value={value}\r\n        onChange={(event, newValue) => {\r\n          setValue(newValue);\r\n        }}\r\n      />\r\n      <Typography component=\"legend\">Read only</Typography>\r\n      <Rating name=\"read-only\" value={value} readOnly />\r\n      <Typography component=\"legend\">Disabled</Typography>\r\n      <Rating name=\"disabled\" value={value} disabled />\r\n      <Typography component=\"legend\">No rating given</Typography>\r\n      <Rating name=\"no-value\" value={null} /> */}","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\EditProfilePremium.js",["607"],[],"// import * as React from 'react';\r\nimport React, { Component } from 'react';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport Box from '@mui/material/Box';\r\nimport Link from '@mui/material/Button';\r\nimport Grid from '@mui/material/Grid';\r\nimport { UserApi } from '../API/UserApi';\r\nimport FormDialog from './FormDialog';\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\";\r\n\r\n\r\nexport default class EditProfileEditProfilePremium extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: this.props.name,\r\n            lastName: this.props.lastName,\r\n            security_question: \"this.props.security_question\",\r\n            improve_security_fields: [\"question\", \"answer\",\"password\"],\r\n            edit_name_fields: [\"new_name\",\"security question answer\"],\r\n            edit_password_fields: [\"old password\",\"new password\",\"new password again\",\"security question answer\"],\r\n            unregister_fields: [\"password\"],\r\n            snackbar: null,\r\n\r\n\r\n        }\r\n        console.log(\"start edit profile\");\r\n        this.userApi = new UserApi();\r\n\r\n    }\r\n\r\n    async improve_security(values){\r\n        const question = values[0];\r\n        const answer = values[1];\r\n        const password = values[2];\r\n\r\n        let response =  await this.userApi.improve_security(password, question, answer);\r\n        // alert(response.message);\r\n        if (!response.was_exception) {\r\n            this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n        }\r\n        else {    \r\n            this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n        }\r\n\r\n    }\r\n    async handle_name_edit_premium(values)  {\r\n        console.log(\"in handle name edit premium\\n\");\r\n        const new_name = values[0];\r\n        const answer = values[1];\r\n        let response = await this.userApi.edit_name_premium(new_name, answer);\r\n        // alert(response.message);\r\n        if (!response.was_exception) {\r\n            this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n            console.log(\"in edit name premium - success!\\n\");\r\n        }\r\n        else {\r\n            this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    \r\n    async handle_last_name_edit_premium(values) {\r\n\r\n        console.log(\"in handle last name edit premium\\n\");\r\n        const new_name = values[0];\r\n        const answer = values[1];\r\n        let response = await this.userApi.edit_last_name_premium(new_name, answer);\r\n        // alert(response.message);\r\n        if (!response.was_exception) {\r\n            this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n        }\r\n        else {    \r\n            this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n        }\r\n    \r\n    }\r\n\r\n\r\n    async handle_password_edit_premium(values) {\r\n        console.log(\"in handle password edit premium\\n\");\r\n        let old_password = values[0];\r\n        let new_password =values[1];\r\n        let new_password_check = values[2];\r\n        let answer = values[3];\r\n        \r\n        if (new_password == new_password_check) {\r\n            let response =  await this.userApi.edit_password_premium(old_password, new_password, answer);\r\n            // alert(response.message);\r\n            if (!response.was_exception) {\r\n                this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n            }\r\n            else {\r\n                this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n    \r\n            }\r\n    \r\n        }\r\n        else {\r\n            console.log(\"in edit password - NOT THE SAME!\\n\");\r\n    \r\n        }\r\n    }\r\n\r\n    async unregister(values){\r\n        const password = values[0];\r\n        let response = await this.userApi.unregister(password);\r\n        // alert(response.message);\r\n        if (!response.was_exception) {\r\n            this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n            // set as a guest & go to home page.\r\n        }\r\n        else\r\n        {\r\n            this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n        }\r\n\r\n    }\r\n\r\n    \r\n\r\n    async componentDidMount() {\r\n        console.log(\"did mount in edit profile : \");\r\n        console.log(this.props.get_state());\r\n      \r\n    }\r\n\r\n    render() {\r\n        return (<>\r\n            <Box sx={{ flexGrow: 1 }}>\r\n                <Link href=\"/\">\r\n                    <HomeIcon></HomeIcon>\r\n                </Link>\r\n                <h3 class=\"Header\" align=\"center\">\r\n                    Edit Profile Premium\r\n                </h3>\r\n\r\n                <Grid><FormDialog outlinedVar=\"text\" title={this.state.security_question}\r\n                    fields={this.state.edit_name_fields} getValues={this.handle_name_edit_premium.bind(this)}\r\n                    name=\"edit name\"></FormDialog></Grid> \r\n\r\n                <Grid><FormDialog outlinedVar=\"text\" \r\n                    fields={this.state.edit_name_fields} getValues={this.handle_last_name_edit_premium.bind(this)}\r\n                    name=\"edit last name\"></FormDialog></Grid>\r\n\r\n                <Grid><FormDialog outlinedVar=\"text\" \r\n                    fields={this.state.edit_password_fields} getValues={this.handle_password_edit_premium.bind(this)}\r\n                    name=\"edit password\"></FormDialog></Grid> \r\n\r\n                <Grid><FormDialog outlinedVar=\"text\" \r\n                    fields={this.state.improve_security_fields} getValues={this.improve_security.bind(this)}\r\n                    name=\"Upgrade Security\"></FormDialog></Grid> \r\n\r\n                <Grid><FormDialog outlinedVar=\"text\" \r\n                    fields={this.state.unregister_fields} getValues={this.unregister.bind(this)}\r\n                    name=\"unregister\"></FormDialog></Grid> \r\n\r\n            </Box>\r\n            {!!this.state.snackbar && (\r\n                <Snackbar\r\n                open\r\n                anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n                onClose={this.handleCloseSnackbar}\r\n                autoHideDuration={6000}\r\n                >\r\n                <Alert\r\n                    {...this.state.snackbar}\r\n                    onClose={this.handleCloseSnackbar}\r\n                />\r\n                </Snackbar>\r\n            )}\r\n\r\n        </>)\r\n    }\r\n}","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\ManagerViewStoreQuestions.js",["608","609","610"],[],"import React, { Component } from 'react';\r\nimport Link from '@mui/material/Button';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport { StoreApi } from '../API/StoreApi';\r\nimport FormDialog from './FormDialog';\r\nimport Card from '@mui/material/Card';\r\nimport { Question } from '../ServiceObjects/Question';\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\"; \r\n\r\n\r\nexport default class ManagerViewStoreQuestions extends Component {\r\n\r\n    static displayName = ManagerViewStoreQuestions.name;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            questions:[],\r\n            answer_user_questions_fields: [\"question_id\", \"answer\"],\r\n            store_id:this.props.store_id, \r\n            snackbar: null,\r\n\r\n        };\r\n        this.storeApi = new StoreApi();\r\n\r\n    }    \r\n\r\n    \r\n    \r\n    \r\n    async componentDidMount() {\r\n        \r\n        \r\n        console.log(\"in manager_view_store_questions!\\n\");\r\n        const store_id = this.props.store_id;\r\n        console.log(\"store id = \"+store_id);\r\n        const response = await this.storeApi.manager_view_store_questions(store_id);\r\n       \r\n        console.log(\"in UserViewQuestions!\\n\");\r\n        const questions = response.value;\r\n        console.log(\"questions = \"+questions);\r\n        // alert(response.message);\r\n        if (!response.was_excecption) {\r\n            this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n            console.log(\"in UserViewQuestions - success!\\n\");\r\n            console.log(response.value);\r\n            \r\n                  //\r\n                  //static create( question_id,  message_date,  answer_date,  message,  answer, has_answer) {\r\n            const final_questions=[];\r\n            let splitted_questions=[];\r\n            questions.map(q=>{ splitted_questions = q.split(\",\");\r\n            console.log(\"spplited= \"+splitted_questions);\r\n            const user_email = splitted_questions[0];\r\n            const question_id = splitted_questions[1];\r\n            const message_date = splitted_questions[2];\r\n            const answer_date = splitted_questions[3];\r\n            const message = splitted_questions[4];\r\n            const answer = splitted_questions[5];\r\n            const has_answer = splitted_questions[6];\r\n            const que=new Question (question_id, message_date, answer_date, message, answer, has_answer, user_email);\r\n            final_questions.push(que);\r\n                });\r\n            this.setState({\r\n                questions:final_questions,\r\n                    })\r\n\r\n        }\r\n        else {\r\n            this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n\r\n        }\r\n    }\r\n    async manager_answer_question(values) {\r\n        console.log(\"in manager_answer_question!\\n\");\r\n        const store_id = this.state.store_id;\r\n        const question_id = values[0];\r\n        const answer = values[1];\r\n        console.log(store_id +\" , \"+question_id+\" , \"+answer);\r\n\r\n        const response = await this.storeApi.manager_answer_question(store_id, question_id, answer);\r\n        // alert(response.message);\r\n        if (!response.was_execption) {\r\n            this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n            console.log(\"in manager_answer_question - success!\\n\");\r\n            //show history\r\n        }\r\n        else {\r\n            this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n\r\n        }\r\n    }\r\n      \r\n\r\n    render() {\r\n        const {redirectTo} = this.state\r\n            return (\r\n                <main class=\"LoginMain\">\r\n                    <div class=\"LoginWindow\">\r\n                    <Link href=\"/\"><HomeIcon></HomeIcon></Link>\r\n                        <row><h1>User Questions (User)</h1></row>\r\n                        {/* {[0,1,2,3,4,5,6,7].map((item) => (\r\n                            <Card >\r\n                            {item}\r\n                            </Card>\r\n                        ))} */}\r\n                        {this.state.questions.length == 0 ? <h3 style={{ color: 'red' }}>No Questions To Show</h3> : \r\n                        this.state.questions.map((question) => (\r\n                            <Card >\r\n                            <h3 style={{ color: 'blue' }}> {question.email}</h3>\r\n                            <div> {question.question_id}</div>\r\n                            <div> {question.message_date}</div>\r\n                            <div> {question.answer_date}</div>\r\n                            <div> {question.answer}</div>\r\n                            <div> {question.has_answer}</div>\r\n                            {/* <div> question : {question}</div> */}\r\n                           \r\n\r\n                            </Card>\r\n                        ))}\r\n                        <FormDialog outlinedVar=\"text\" fields={this.state.answer_user_questions_fields} getValues={this.manager_answer_question.bind(this)} name=\"Answer Users Questions\"></FormDialog>\r\n                        {!!this.state.snackbar && (\r\n                        <Snackbar\r\n                        open\r\n                        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n                        onClose={this.handleCloseSnackbar}\r\n                        autoHideDuration={6000}\r\n                        >\r\n                        <Alert\r\n                            {...this.state.snackbar}\r\n                            onClose={this.handleCloseSnackbar}\r\n                        />\r\n                        </Snackbar>\r\n                    )}      \r\n                       \r\n                    </div>\r\n                </main>\r\n            );\r\n        \r\n    }\r\n}\r\n\r\n\r\n","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\EditProfile.js",["611","612","613","614","615","616","617","618","619","620","621","622","623"],[],"import React, {useState } from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Link from '@mui/material/Button';\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\nimport { UserApi } from '../API/UserApi';\r\nimport FormDialog from './FormDialog';\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport { escapeLeadingUnderscores } from 'typescript';\r\nimport { User } from '../ServiceObjects/User';\r\nimport { Utils } from '../ServiceObjects/Utils';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport { Row } from \"react-grid-system\";\r\nimport { experimentalStyled as styled } from '@mui/material/styles';\r\nimport Paper from '@mui/material/Paper';\r\nimport { useEffect } from 'react';\r\nimport { ConnectApi } from '../API/ConnectApi';\r\n\r\n\r\n\r\n\r\nexport default function EditProfile(props) {\r\n    const Item = styled(Paper)(({ theme }) => ({\r\n        backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n        ...theme.typography.body2,\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    }));\r\n    console.log(\"props\");\r\n    console.log(props);\r\n    const [snackbar, setSnackbar] = React.useState(null);\r\n    const handleCloseSnackbar = () => setSnackbar(null);\r\n    const connectApi = new ConnectApi();\r\n    const [user, setUser] = useState(props.user);\r\n    useEffect(()=>{get_online_user()}, []);\r\n  const get_online_user = async () => {\r\n    let response = await connectApi.get_online_user();\r\n    console.log(response.value);\r\n    if(!response.was_exception)\r\n    {\r\n      setUser(response.value);\r\n      setSnackbar({ children: response.message, severity: 'success' });\r\n\r\n    }\r\n    else\r\n    {\r\n      setSnackbar({ children: response.message, severity: 'error' });\r\n\r\n    }\r\n    \r\n}\r\n    const name = user.name;\r\n    const lastName =user.lastName;\r\n    const security_question=user.security_question;\r\n    const improve_security_fields= [\"question\", \"answer\",\"password\"];\r\n    const unregister_fields = [\"password\"];\r\n    const change_password_fields = [\"Old Password\", \"New Password\",\"Re-Enter Password\" ];\r\n    const userApi = new UserApi();\r\n       \r\n    //Handle Input Change\r\n    const handleInputChange_name = event => {\r\n        const value = event.target.value;\r\n        console.log(value);\r\n        setNewname(value);\r\n    };\r\n    const handleInputChange_last_name = event => {\r\n        const value = event.target.value;\r\n        console.log(value);\r\n        setNewlastname(value);\r\n    };\r\n    const handleInputChange_old_password = event => {\r\n        const value = event.target.value;\r\n        console.log(value);\r\n        setOldpassword(value);\r\n    };\r\n    const handleInputChange_new_password = event => {\r\n        const value = event.target.value;\r\n        console.log(value);\r\n        setNewpassword(value);\r\n    };\r\n    const handleInputChange_reEntered_password = event => {\r\n        const value = event.target.value;\r\n        console.log(value);\r\n        setReEnterpassword(value);\r\n    };\r\n    //Fields\r\n    const [newname, setNewname] = useState(name);\r\n    const [newlastname, setNewlastname] = useState(lastName);\r\n    const [oldpassword, setOldpassword] = useState(null);\r\n    const [newpassword, setNewpassword] = useState(null);\r\n    const [reEnterpassword, setReEnterpassword] = useState(null);\r\n\r\n    //Functions To Server\r\n    const handle_name_edit = async()=>  {\r\n        console.log(newname);\r\n        let response = await userApi.edit_name(newname);\r\n        if (!response.was_exception) {\r\n            setSnackbar({ children: response.message, severity: 'success' });\r\n            console.log(\"in edit name - success!\\n\");\r\n        }\r\n        else {\r\n            setSnackbar({ children: response.message, severity: 'error' });\r\n        }\r\n    }\r\n    const handle_last_name_edit = async ()=> {\r\n\r\n        let response =  await userApi.edit_last_name(newlastname);\r\n        if (!response.was_exception) {\r\n            this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n        }\r\n        else {    \r\n            this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n        }\r\n    \r\n    }\r\n    const unregister  = async (values)=>{\r\n        const password = values[0];\r\n        let response = await userApi.unregister(password);\r\n        if (!response.was_exception) {\r\n            this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n            props.updateUserState(User.guest());\r\n            window.location.href=`/`\r\n        }\r\n        else\r\n        {\r\n            this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n        }\r\n\r\n    }\r\n    const improve_security = async(values) =>{\r\n        const question = values[0];\r\n        const answer = values[1];\r\n        const password = values[2];\r\n        if (Utils.check_not_empty(question) == 0)\r\n        {\r\n            this.setState({ snackbar: { children: \"Question can't be ampty\", severity: \"error\" } });\r\n            return;\r\n        }\r\n        if (Utils.check_not_empty(answer) == 0)\r\n        {\r\n            this.setState({ snackbar: { children: \"Answer can't be ampty\", severity: \"error\" } });\r\n            return;\r\n        }\r\n        \r\n        let response =  await userApi.improve_security(password, question, answer);\r\n        if (!response.was_exception) {\r\n            this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n        }\r\n        else {    \r\n            this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n        }\r\n\r\n    }\r\n    const handle_password_edit = async() => {\r\n        console.log(\"in handle password edit\\n\");\r\n\r\n        if (newpassword == reEnterpassword) {\r\n            let response =  await this.userApi.edit_password(oldpassword, newpassword);  \r\n            if (!response.was_exception) {\r\n                this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n    \r\n            }\r\n            else {\r\n                this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n    \r\n            }\r\n    \r\n        }\r\n        else {\r\n            this.setState({ snackbar: { children: \"Passwords Does Not Match\", severity: \"error\" } });\r\n            console.log(\"in edit password - NOT THE SAME!\\n\");\r\n    \r\n        }\r\n    }\r\n\r\n\r\n        return (<>\r\n            <Box sx={{ flexGrow: 1 }}>\r\n\r\n                <h2 class=\"Header\" align=\"center\">\r\n                    Edit Profile\r\n                </h2>\r\n                <Grid container align=\"left\" position=\"center\" spacing={6} paddingRight={50} paddingLeft={50} paddingTop={10}>\r\n                    <Grid align=\"center\" item xs={13}>\r\n                        <TextField\r\n                            autoFocus\r\n                            id=\"Edit Name\"\r\n                            defaultValue = {name}\r\n                            label=\"Edit Name\"\r\n                            variant=\"outlined\"\r\n                            onChange={handleInputChange_name}\r\n\r\n                        />\r\n                        <Button variant=\"contained\" onClick={handle_name_edit}>\r\n                            Save\r\n                        </Button>\r\n                    </Grid>\r\n\r\n                    <Grid align=\"center\" item xs={13}>\r\n                        <TextField\r\n                            autoFocus\r\n                            id=\"Edit Last Name\"\r\n                            defaultValue = {lastName}\r\n                            label=\"Edit Last Name\"\r\n                            variant=\"outlined\"\r\n                            onChange={handleInputChange_last_name}\r\n\r\n                        />\r\n                        <Button variant=\"contained\" onClick={handle_last_name_edit}>\r\n                            Save\r\n                        </Button>\r\n\r\n                    </Grid>\r\n                \r\n                  \r\n                <Grid container position=\"center\" spacing={6} paddingRight={50} paddingLeft={30} paddingTop={2} >\r\n                    <Grid item xs={80}>  <Item variant=\"outlined\"> <FormDialog outlinedVar=\"text\" \r\n                            fields={change_password_fields} getValues={handle_password_edit}\r\n                             name=\"Change Password\"></FormDialog></Item ></Grid>\r\n\r\n                    <Grid item xs={80}>  <Item variant=\"outlined\"> <FormDialog outlinedVar=\"text\" \r\n                            fields={improve_security_fields} getValues={improve_security}\r\n                             name=\"Upgrade Security\"></FormDialog></Item ></Grid>\r\n\r\n                    <Grid item xs={80}>  <Item variant=\"outlined\"> <FormDialog outlinedVar=\"text\" \r\n                            fields={unregister_fields} getValues={unregister}\r\n                             name=\"Unregister\"></FormDialog></Item ></Grid>\r\n\r\n            </Grid>\r\n                        </Grid>\r\n\r\n                        \r\n \r\n                    \r\n            </Box>\r\n            \r\n            {!!snackbar && (\r\n            <Snackbar\r\n            open\r\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n            onClose={handleCloseSnackbar}\r\n            autoHideDuration={6000}\r\n            >\r\n            <Alert {...snackbar} onClose={handleCloseSnackbar} />\r\n            </Snackbar>\r\n        )}\r\n        </>)\r\n    \r\n}\r\n","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\HomePage.js",["624","625","626","627","628","629","630","631","632","633","634","635","636"],[],"import React, { Component, useState } from \"react\";\r\nimport Link from \"@mui/material/Button\";\r\nimport { ConnectApi } from \"../API/ConnectApi\";\r\nimport { ProductApi } from \"../API/ProductApi\";\r\nimport { Container } from \"@mui/material\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { AdminApi } from \"../API/AdminApi\";\r\nimport { StoreApi } from \"../API/StoreApi\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport FormDialog from \"./FormDialog\";\r\nimport ShoppingCart from \"./ShoppingCart\";\r\nimport { Row } from \"react-grid-system\";\r\nimport HomeProductsTable from \"./HomeProductsTable\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport { propSatisfies } from \"ramda\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { useEffect } from 'react';\r\n\r\n\r\nexport default function HomePage({user}) {\r\n  const [snackbar, setSnackbar] = React.useState(null);\r\n  const handleCloseSnackbar = () => setSnackbar(null);\r\n  const [products, setProducts] = useState([]);\r\n  const connectApi = new ConnectApi();\r\nconsole.log(user);\r\n\r\n  const stores = [];\r\n  const open_store_fields = [\"Store name\"];\r\n  const send_question_to_admin_fields=[\"Enter your question\"];\r\n  \r\n  const productApi = new ProductApi();\r\n  const storeApi = new StoreApi();\r\n  const adminApi = new AdminApi();\r\n\r\n\r\n  const open_store = async (values) =>  {\r\n    const storeApi = new StoreApi();\r\n    const store_name = values[0];\r\n    let response = await storeApi.open_store(store_name);\r\n    // alert(response.message);\r\n    if (!response.was_exception) {\r\n      const store_id = response.value;\r\n      setSnackbar({ children: response.message, severity: 'success' });\r\n      // this.props.add_store_to_user(store_id)\r\n\r\n    } \r\n    else {\r\n      setSnackbar({ children: response.message, severity: 'error' });\r\n\r\n    }\r\n  }\r\n  const send_question_to_admin = async (values)=> {\r\n    const adminApi = new adminApi();\r\n    const question = values[0];\r\n    let response = await adminApi.send_question_to_admin(question);\r\n    // alert(response.message);\r\n    if (!response.was_exception) {\r\n      setSnackbar({ children: response.message, severity: 'success' });\r\n    } \r\n    else {\r\n      setSnackbar({ children: response.message, severity: 'error' });\r\n\r\n    }\r\n  }\r\n  const show_products = (products) => {\r\n    console.log(\"in show product\");\r\n    setProducts(products);\r\n    //    return (<ShoppingCart products={products}></ShoppingCart>);\r\n    return <ShoppingCart products={products}></ShoppingCart>;\r\n  }\r\n\r\n  const  get_notifications = async ()=>{\r\n    console.log(\"goti\");\r\n    // let response = await this.connectAPI.get_notifications(\"amit@gmail.com\");\r\n    let response = await connectApi.get_notifications(user.email);\r\n    console.log(response);\r\n    if (!response.was_exception)\r\n    {\r\n        alert(response.value);\r\n        // this.props.user.notifications.push(response.value);\r\n        console.log(\"in noti, noti success!\\n\");\r\n    }\r\n    else{\r\n        console.log(\"in noti, noti failed!\\n\");\r\n    }\r\n}\r\n\r\n    return (\r\n      <>\r\n        <Container>\r\n          <Box sx={{ flexGrow: 1 }}>\r\n            <h1 className=\"Header\" align=\"center\">\r\n              Welcome To The Trading System\r\n            </h1>\r\n            {/* <Button onClick={()=>this.get_notifications()} varient=\"contained\">noty</Button> */}\r\n            {/* <HomePageSearch sx={{ height: '5%' }} /> */}\r\n          </Box>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Row position=\"center\">\r\n              <HomeProductsTable stores_managed = {user.storesManaged} />\r\n            </Row>\r\n          </Grid>\r\n        </Container>\r\n        <h1 style={{ color: \"white\" }}>-------------------------</h1>\r\n        <h1 style={{ color: \"white\" }}>-------------------------</h1>\r\n        <Grid container direction=\"row\" justifyContent=\"space-evenly\">\r\n          {user.state !== 0 ? (<>\r\n          <FormDialog\r\n            fields={open_store_fields}\r\n            getValues={open_store}\r\n            name=\"Open Store\"\r\n          ></FormDialog>\r\n         </>):null}\r\n         {\r\n           user.state !==0 && user.state !==2 ? \r\n           <FormDialog\r\n           fields={send_question_to_admin_fields}\r\n           getValues={send_question_to_admin}\r\n           name=\"Send question to admin\"\r\n         ></FormDialog>\r\n         :null\r\n         }\r\n          {user.state === 2?<>\r\n            <Link href=\"/AdminPage\" underline=\"hover\">\r\n            {\"Admin Operations\"}\r\n          </Link></>:null}\r\n        </Grid>\r\n        {!!snackbar && (\r\n            <Snackbar\r\n            open\r\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n            onClose={handleCloseSnackbar}\r\n            autoHideDuration={6000}\r\n            >\r\n            <Alert {...snackbar} onClose={handleCloseSnackbar} />\r\n            </Snackbar>\r\n        )}\r\n      </>\r\n    );\r\n  \r\n}\r\n\r\n\r\n\r\n// import React, { Component } from \"react\";\r\n// import Link from \"@mui/material/Button\";\r\n// import { ConnectApi } from \"../API/ConnectApi\";\r\n// import { ProductApi } from \"../API/ProductApi\";\r\n// import { Container } from \"@mui/material\";\r\n// import Box from \"@mui/material/Box\";\r\n// import { AdminApi } from \"../API/AdminApi\";\r\n// import { StoreApi } from \"../API/StoreApi\";\r\n// import Grid from \"@mui/material/Grid\";\r\n// import FormDialog from \"./FormDialog\";\r\n// import ShoppingCart from \"./ShoppingCart\";\r\n// import { Row } from \"react-grid-system\";\r\n// import HomeProductsTable from \"./HomeProductsTable\";\r\n// import Snackbar from \"@mui/material/Snackbar\";\r\n// import Alert from \"@mui/material/Alert\";\r\n// import { propSatisfies } from \"ramda\";\r\n// import Button from \"@mui/material/Button\";\r\n\r\n\r\n// export default class HomePage extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       user:this.props.user,\r\n//       username: this.props.user.name,\r\n//       stores: [],\r\n//       open_store_fields: [\"Store name\"],\r\n//       send_question_to_admin_fields: [\"Enter your question\"],\r\n//       products: [],\r\n//       snackbar: null,\r\n//       stores_managed:[],\r\n//     };\r\n//     this.connectAPI = new ConnectApi();\r\n//     this.productApi = new ProductApi();\r\n//     this.storeApi = new StoreApi();\r\n//     this.adminApi = new AdminApi();\r\n//     // this.logout = this.logout.bind(this);\r\n//     console.log(this.props);\r\n//     console.log(\"in component did mount - user state = \"+this.props.user.state);\r\n//     this.get_online_user();\r\n//   }\r\n//   async componentDidMount() {\r\n\r\n//   }\r\n//   async open_store(values) {\r\n//     const store_name = values[0];\r\n//     let response = await this.storeApi.open_store(store_name);\r\n//     // alert(response.message);\r\n//     if (!response.was_exception) {\r\n//       const store_id = response.value;\r\n//       this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n//       this.props.add_store_to_user(store_id)\r\n\r\n//     } \r\n//     else {\r\n//       this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n\r\n//     }\r\n//   }\r\n\r\n//   // async logout() {\r\n//   //   console.log(\"in logout home page\");\r\n//   //   let response = await this.connectAPI.logout();\r\n//   //   // alert(response.message);\r\n//   //   if (!response.was_exception) {\r\n//   //     this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n//   //     console.log(response)\r\n//   //     const user_logout = response.value;\r\n//   //     this.props.updateUserState(user_logout);\r\n//   //   }\r\n//   //   else\r\n//   //   {\r\n//   //     this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n\r\n//   //   }\r\n//   // }\r\n\r\n//   async send_question_to_admin(values) {\r\n//     const question = values[0];\r\n//     let response = await this.adminApi.send_question_to_admin(question);\r\n//     // alert(response.message);\r\n//     if (!response.was_exception) {\r\n//       this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n//     } \r\n//     else {\r\n//       this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n\r\n//     }\r\n//   }\r\n//   show_products(products) {\r\n//     console.log(\"in show product\");\r\n//     this.setState({\r\n//       products: products,\r\n//     });\r\n//     //    return (<ShoppingCart products={products}></ShoppingCart>);\r\n//     return <ShoppingCart products={this.state.products}></ShoppingCart>;\r\n//   }\r\n//   async get_online_user ()  {\r\n//     let response = await this.connectApi.get_online_user()\r\n//     if(!response.was_exception)\r\n//     {\r\n//       console.log(response.value.storesManaged);\r\n//       this.setState({store_managed:response.value.storesManaged})\r\n\r\n//     }\r\n//     else\r\n//     {\r\n\r\n//     }\r\n//   }\r\n//   async get_notifications(){\r\n//     console.log(\"goti\");\r\n//     // let response = await this.connectAPI.get_notifications(\"amit@gmail.com\");\r\n//     let response = await this.connectAPI.get_notifications(this.props.user.email);\r\n//     console.log(response);\r\n//     if (!response.was_exception)\r\n//     {\r\n//         alert(response.value);\r\n//         // this.props.user.notifications.push(response.value);\r\n//         console.log(\"in noti, noti success!\\n\");\r\n//     }\r\n//     else{\r\n//         console.log(\"in noti, noti failed!\\n\");\r\n//     }\r\n// }\r\n\r\n//   render() {\r\n//     return (\r\n//       <>\r\n//         <Container>\r\n//           <Box sx={{ flexGrow: 1 }}>\r\n//             <h1 className=\"Header\" align=\"center\">\r\n//               Welcome To The Trading System\r\n//             </h1>\r\n//             {/* <Button onClick={()=>this.get_notifications()} varient=\"contained\">noty</Button> */}\r\n//             {/* <HomePageSearch sx={{ height: '5%' }} /> */}\r\n//           </Box>\r\n//           <Grid\r\n//             container\r\n//             direction=\"row\"\r\n//             justifyContent=\"center\"\r\n//             alignItems=\"center\"\r\n//           >\r\n//             <Row position=\"center\">\r\n//               <HomeProductsTable stores_managed={this.state.storesManaged} />\r\n//             </Row>\r\n//           </Grid>\r\n//         </Container>\r\n//         <h1 style={{ color: \"white\" }}>-------------------------</h1>\r\n//         <h1 style={{ color: \"white\" }}>-------------------------</h1>\r\n//         <Grid container direction=\"row\" justifyContent=\"space-evenly\">\r\n//           {this.props.user.state !== 0 ? (<>\r\n//           <FormDialog\r\n//             fields={this.state.open_store_fields}\r\n//             getValues={this.open_store.bind(this)}\r\n//             name=\"Open Store\"\r\n//           ></FormDialog>\r\n//          </>):null}\r\n//          {\r\n//            this.props.user.state !==0 && this.props.user.state !==2 ? \r\n//            <FormDialog\r\n//            fields={this.state.send_question_to_admin_fields}\r\n//            getValues={this.send_question_to_admin.bind(this)}\r\n//            name=\"Send question to admin\"\r\n//          ></FormDialog>\r\n//          :null\r\n//          }\r\n//           {this.props.user.state === 2?<>\r\n//             <Link href=\"/AdminPage\" underline=\"hover\">\r\n//             {\"Admin Operations\"}\r\n//           </Link></>:null}\r\n//         </Grid>\r\n//         {!!this.state.snackbar && (\r\n//     <Snackbar\r\n//       open\r\n//       anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n//       onClose={this.handleCloseSnackbar}\r\n//       autoHideDuration={6000}\r\n//     >\r\n//       <Alert\r\n//         {...this.state.snackbar}\r\n//         onClose={this.handleCloseSnackbar}\r\n//       />\r\n//     </Snackbar>\r\n//   )}\r\n//       </>\r\n//     );\r\n//   }\r\n// }\r\n","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\UserViewQuestions.js",["637","638","639","640"],[],"\r\n     \r\nimport React, { Component } from 'react';\r\nimport Link from '@mui/material/Button';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport Card from '@mui/material/Card';\r\nimport { Question } from '../ServiceObjects/Question';\r\nimport { UserApi } from '../API/UserApi';\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\"; \r\n  \r\nexport default class UserViewQuestions extends Component {\r\n    static displayName = UserViewQuestions.name;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            questions:[],\r\n            snackbar: null,\r\n        };\r\n        this.userApi = new UserApi();\r\n\r\n    }    \r\n\r\n    \r\n    \r\n    \r\n    async componentDidMount() {\r\n        console.log(\"in UserViewQuestions!\\n\");\r\n        const response = await this.userApi.get_user_questions();\r\n        const questions = response.value;\r\n        console.log(\"questions = \"+questions);\r\n        // alert(response.message);\r\n        if (!response.was_excecption) {\r\n            this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n            console.log(\"in UserViewQuestions - success!\\n\");\r\n            console.log(response);\r\n            const final_questions=[];\r\n            let splitted_questions=[];\r\n            questions.map(q=>{ splitted_questions = q.split(\",\");\r\n            console.log(\"spplited= \"+splitted_questions);\r\n            const user_email = splitted_questions[0];\r\n            const question_id = splitted_questions[1];\r\n            const message_date = splitted_questions[2];\r\n            const answer_date = splitted_questions[3];\r\n            const message = splitted_questions[4];\r\n            const answer = splitted_questions[5];\r\n            const has_answer = splitted_questions[6];\r\n            const que=new Question (question_id, message_date, answer_date, message, answer, has_answer, user_email);\r\n            final_questions.push(que);\r\n                });\r\n            this.setState({\r\n                questions:final_questions,\r\n                    })\r\n        \r\n\r\n        }\r\n        else {\r\n            this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n        }\r\n    }\r\n      \r\n\r\n    render() {\r\n        const {redirectTo} = this.state\r\n            return (\r\n                <main class=\"LoginMain\">\r\n                    <div class=\"LoginWindow\">\r\n                    <Link href=\"/\"><HomeIcon></HomeIcon></Link>\r\n                        <row><h1>User Questions (User)</h1></row>\r\n                        {/* {[0,1,2,3,4,5,6,7].map((item) => (\r\n                            <Card >\r\n                            {item}\r\n                            </Card>\r\n                        ))} */}\r\n                        {this.state.questions.length == 0 ? <h3 style={{ color: 'red' }}>No Questions To Show</h3> : \r\n                        this.state.questions.map((question) => (\r\n                            <Card >\r\n                            <h3 style={{ color: 'blue' }}> {question.email}</h3>\r\n                            <div> {question.question_id}</div>\r\n                            <div> {question.message_date}</div>\r\n                            <div> {question.answer_date}</div>\r\n                            <div> {question.answer}</div>\r\n                            <div> {question.has_answer}</div>\r\n                            {/* <div> question : {question}</div> */}\r\n                           \r\n\r\n                            </Card>\r\n                        ))}\r\n\r\n\r\n     \r\n                       \r\n                    </div>\r\n                    {!!this.state.snackbar && (\r\n                        <Snackbar\r\n                        open\r\n                        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n                        onClose={this.handleCloseSnackbar}\r\n                        autoHideDuration={6000}\r\n                        >\r\n                        <Alert\r\n                            {...this.state.snackbar}\r\n                            onClose={this.handleCloseSnackbar}\r\n                        />\r\n                        </Snackbar>\r\n                    )}\r\n                </main>\r\n            );\r\n        \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/* <Typography component=\"legend\">Controlled</Typography>\r\n      <Rating\r\n        name=\"simple-controlled\"\r\n        value={value}\r\n        onChange={(event, newValue) => {\r\n          setValue(newValue);\r\n        }}\r\n      />\r\n      <Typography component=\"legend\">Read only</Typography>\r\n      <Rating name=\"read-only\" value={value} readOnly />\r\n      <Typography component=\"legend\">Disabled</Typography>\r\n      <Rating name=\"disabled\" value={value} disabled />\r\n      <Typography component=\"legend\">No rating given</Typography>\r\n      <Rating name=\"no-value\" value={null} /> */}","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\ViewStorePurchaseHistory.js",["641","642","643"],[],"import * as React from 'react';\r\nimport { Component } from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport List from '@mui/material/List';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\n\r\nimport Grid from '@mui/material/Grid';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport Link from '@mui/material/Button';\r\nimport { StoreApi } from '../API/StoreApi';\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\"; \r\n\r\nconst Demo = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.background.paper,\r\n}));\r\n\r\n\r\n\r\nexport default class ViewStorePurchaseHistory extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            store_id : this.props.store_id,\r\n            history: [],\r\n            open: false,\r\n            snackbar: null,\r\n        };\r\n        console.log(this.props.store_id);\r\n        this.storeApi = new StoreApi();\r\n\r\n\r\n\r\n    }\r\n    handleClick = () => {\r\n        this.setState({ open: !this.state.open });\r\n    };\r\n\r\n    async view_store_purchases_history(values) {\r\n        console.log(\"in view_store_purchases_history!\\n\");\r\n        // const store_id = this.state.store_id;\r\n        const response = await this.storeApi.view_store_purchases_history(this.state.store_id);\r\n        // alert(response.message);\r\n        if (!response.was_exception) {\r\n            this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n            let res = [];\r\n            this.setState({ history: response.value });\r\n            console.log(\"history: \");\r\n            console.log(this.state.history);\r\n            //show history\r\n        }\r\n        else {\r\n            this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n\r\n        }\r\n    }\r\n   \r\n\r\n    async componentDidMount() {\r\n        this.view_store_purchases_history();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <>\r\n\r\n                <Box position='center' align='center'>\r\n                    <Grid position='center' row-spacing={3}>\r\n                        <Grid item>\r\n                            <h3 class=\"Header\" align=\"center\">\r\n                                Store Purchase History\r\n                            </h3>\r\n                        </Grid>\r\n\r\n                        <Grid position='center' align='center'>\r\n\r\n                            <Demo>\r\n                                <List>\r\n                                    {this.state.history.length !== 0 ? this.state.history.map((his) => (\r\n                                        <>\r\n                                            <ListItemButton onClick={this.handleClick}\r\n                                                secondaryAction={\r\n\r\n                                                    <IconButton edge=\"end\" aria-label=\"view more\">\r\n                                                        <ExpandMoreIcon />\r\n                                                    </IconButton>\r\n                                                }>\r\n\r\n                                                {this.state.open ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n\r\n                                                <ListItemText\r\n                                                    primary={'Purchase date: ' + his.transaction_date}\r\n                                                    secondary={'Total price: ₪ ' + his.purchase.totalPrice}\r\n                                                // primary='fsdf'\r\n                                                />\r\n                                            </ListItemButton>\r\n\r\n                                            <Collapse in={this.state.open} timeout=\"auto\" unmountOnExit>\r\n                                                <List component=\"div\" disablePadding>\r\n                                                    <ListItemButton sx={{ pl: 4 }}>\r\n                                                        {/*buyer_email: \"amit@gmail.com\"\r\n                                                        product_and_name: {1: 'iphone'}\r\n                                                        product_and_quantity: {1: 20}\r\n                                                        product_and_totalPrice: {1: 59998}\r\n                                                        purchase: {transaction_date: '2022-05-24', product_and_quantity: {…}, product_and_totalPrice: {…}, product_and_name: {…}, totalPrice: 59998}\r\n                                                        purchase_id: 0\r\n                                                        totalPrice: 59998\r\n                                                        transaction_date: \"2022-05-24\"*/}\r\n                                                        <ListItemText secondary={\"Purchase ID: \" + his.purchase_id\r\n                                                            // + \"\\n Product: \" + his.product_and_name\r\n                                                        } primary={\"Buyer email: \" + his.buyer_email} />\r\n                                                    </ListItemButton>\r\n                                                </List>\r\n                                            </Collapse>\r\n                                        </>\r\n\r\n\r\n                                    )) : <h3 style={{ color: 'red' }}>No Purchase History To Store {this.state.store_id}</h3>\r\n\r\n\r\n\r\n\r\n                                    }\r\n                                </List>\r\n                            </Demo>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n                {!!this.state.snackbar && (\r\n                        <Snackbar\r\n                        open\r\n                        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n                        onClose={this.handleCloseSnackbar}\r\n                        autoHideDuration={6000}\r\n                        >\r\n                        <Alert\r\n                            {...this.state.snackbar}\r\n                            onClose={this.handleCloseSnackbar}\r\n                        />\r\n                        </Snackbar>\r\n                    )}\r\n            </>\r\n        );\r\n\r\n    }\r\n}\r\n","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\AdminViewUserQuestions.js",["644","645"],[],"import React, { Component } from 'react';\r\nimport FormDialog from './FormDialog';\r\nimport { AdminApi } from '../API/AdminApi';\r\nimport { Question } from '../ServiceObjects/Question';\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport BasicTable from './BasicTable';\r\nimport Grid from '@mui/material/Grid';\r\n\r\n  \r\nexport default class AdminViewUserQuestions extends Component {\r\n    static displayName = AdminViewUserQuestions.name;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            questions:[],\r\n            snackbar: null,\r\n            rows:[], \r\n        };\r\n        this.adminApi = new AdminApi();\r\n        this.admin_answer_user_question_fields = [\"Question ID\", \"Answer\"];\r\n\r\n    }    \r\n\r\n    \r\n    async admin_answer_user_question (values) {\r\n        console.log(\"in admin answer user question user!\\n\");\r\n        const question_id = values[0];\r\n        const answer = values[1];\r\n        const response = await this.adminApi.admin_answer_user_question(question_id, answer);\r\n        if (!response.was_exception) {\r\n            this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n        }\r\n    }\r\n    \r\n    async componentDidMount() {\r\n        this.setState({rows:[]});\r\n        console.log(\"in admin_view_users_questions!\\n\");\r\n        const response = await this.adminApi.admin_view_users_questions();\r\n        const questions = response.value;\r\n        console.log(\"questions = \"+questions);\r\n        // alert(response.message);\r\n        if (!response.was_excecption) {\r\n            this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n            console.log(\"in AdminViewUserQuestions - success!\\n\");\r\n            console.log(response);\r\n            const final_questions=[];\r\n            let splitted_questions=[];\r\n            let rows = [];\r\n            const all_rows=[];\r\n            questions.map(q=>{ splitted_questions = q.split(\",\");\r\n            console.log(\"spplited= \"+splitted_questions);\r\n            \r\n            // console.log(mes);\r\n            let user_email = splitted_questions[0];\r\n            user_email = user_email.substring(user_email.indexOf('{')+1, user_email.length);\r\n            const question_id = splitted_questions[1];\r\n            const message_date = splitted_questions[2];\r\n            const answer_date = splitted_questions[3];\r\n            const message = splitted_questions[4];\r\n            const answer = splitted_questions[5];\r\n            let has_answer = splitted_questions[6];\r\n            has_answer = has_answer.substring(0,has_answer.length-1);\r\n            const left_side = [];\r\n            const right_side = [];\r\n            \r\n            rows.push(question_id.split(\"=\"));\r\n            rows.push(user_email.split(\"=\"));\r\n            rows.push(message_date.split(\"=\"));\r\n            rows.push(message.split(\"=\"));\r\n            rows.push(answer_date.split(\"=\"));\r\n            rows.push(answer.split(\"=\"));\r\n            rows.push(has_answer.split(\"=\"));\r\n            all_rows.push(rows);\r\n            rows=[];\r\n\r\n\r\n            left_side.push(user_email.split(\"=\")[0]);\r\n            left_side.push(question_id.split(\"=\")[0]);\r\n            left_side.push(message_date.split(\"=\")[0]);\r\n            left_side.push(answer_date.split(\"=\")[0]);\r\n            left_side.push(answer.split(\"=\")[0]);\r\n            left_side.push(has_answer.split(\"=\")[0]);\r\n\r\n            right_side.push(user_email.split(\"=\")[1]);\r\n            right_side.push(question_id.split(\"=\")[1]);\r\n            right_side.push(message_date.split(\"=\")[1]);\r\n            right_side.push(answer_date.split(\"=\")[1]);\r\n            right_side.push(answer.split(\"=\")[1]);\r\n            right_side.push(has_answer.split(\"=\")[1]);\r\n\r\n\r\n\r\n            console.log(user_email);\r\n            console.log(question_id);\r\n            console.log(message_date);\r\n            console.log(answer_date);\r\n            console.log(answer);\r\n\r\n\r\n            console.log(left_side);\r\n            console.log(right_side);\r\n            const que=new Question (question_id, message_date, answer_date, message, answer, has_answer, user_email);\r\n            final_questions.push(que);\r\n                });\r\n                console.log(all_rows);\r\n\r\n            this.setState({\r\n                questions:final_questions,\r\n                    })\r\n            this.setState({\r\n                rows:all_rows,\r\n                    })\r\n\r\n\r\n        }\r\n        else {\r\n            this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n        }\r\n    }\r\n      \r\n\r\n    render() {\r\n            return (\r\n                <main >\r\n                    <div class=\"LoginWindow\">\r\n                    \r\n                        <row><h1>User Questions (Admin)</h1></row>\r\n                        \r\n                        <Grid container spacing={6} paddingRight={25} paddingLeft={25} paddingTop={10}>\r\n                        {this.state.questions.length == 0 ? <h3 style={{ color: 'red' }}>No Questions To Show</h3> :\r\n                        this.state.rows.map(rows => <BasicTable rowss = {rows}></BasicTable>) \r\n                          }\r\n                          \r\n                          </Grid>\r\n                          {this.state.questions.length !==0? <FormDialog fields={this.admin_answer_user_question_fields} getValues={this.admin_answer_user_question.bind(this)} name=\"Answer Question\"></FormDialog> : null}\r\n\r\n                        {!!this.state.snackbar && (\r\n                            <Snackbar\r\n                            open\r\n                            anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n                            onClose={this.handleCloseSnackbar}\r\n                            autoHideDuration={6000}\r\n                            >\r\n                            <Alert\r\n                                {...this.state.snackbar}\r\n                                onClose={this.handleCloseSnackbar}\r\n                            />\r\n                            </Snackbar>\r\n                        )}\r\n                    </div>\r\n                </main>\r\n            );\r\n        \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\ViewUserPurchaseHistory.js",[],[],"C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\ViewStaffInformation.js",["646","647"],[],"import * as React from 'react';\r\nimport { Component } from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Grid from '@mui/material/Grid';\r\nimport Link from '@mui/material/Button';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport { StoreApi } from '../API/StoreApi';\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\"; \r\nimport HomeIcon from '@mui/icons-material/Home';\r\n\r\nconst Demo = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.background.paper,\r\n}));\r\n\r\n\r\nexport default class ViewStaffInformation extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            store_id:this.props.store_id,\r\n            staff: [],\r\n            snackbar: null,\r\n        };\r\n        this.storeApi = new StoreApi();\r\n        console.log(\"in view stuff information, id = \"+this.props.store_id);\r\n\r\n\r\n\r\n    }\r\n\r\n    async get_staff_info() {\r\n        console.log(\"get store staff info\\n\");\r\n\r\n        let response = await this.storeApi.view_store_management_information(this.state.store_id);\r\n        if (!response.was_exception) {\r\n            this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n            console.log(\"in get store staff info - success!\\n\");\r\n            // return response.message;\r\n            console.log(response.value.appointmentInformationList);\r\n            // return response;\r\n            this.setState({ staff: response.value.appointmentInformationList });\r\n        }\r\n        else {\r\n            this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n            // alert(response.message);\r\n\r\n\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.get_staff_info();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <>\r\n       \r\n                <Box position='center' align='center'>\r\n                    <Grid position='center' row-spacing={3}>\r\n                        <Grid item>\r\n                            <h3 class=\"Header\" align=\"center\">\r\n                                Staff Information\r\n                            </h3>\r\n                        </Grid>\r\n\r\n                        <Grid position='center' align='center'>\r\n\r\n                            <Demo>\r\n                                <List>\r\n                                    {\r\n\r\n                                        this.state.staff.map((staf) => (\r\n                                            <ListItem>\r\n                                                <ListItemAvatar>\r\n                                                    <Avatar>\r\n                                                        <PersonIcon />\r\n                                                    </Avatar>\r\n                                                </ListItemAvatar>\r\n                                                <ListItemText\r\n                                                    primary={staf.type + ': ' + staf.member_email}\r\n                                                    secondary={'Appointed by: ' + staf.appointer_email}\r\n                                                // primary='fsdf'\r\n                                                />\r\n                                            </ListItem>\r\n\r\n                                        ))\r\n\r\n\r\n\r\n\r\n                                    }\r\n                                </List>\r\n                            </Demo>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n                {!!this.state.snackbar && (\r\n                        <Snackbar\r\n                        open\r\n                        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n                        onClose={this.handleCloseSnackbar}\r\n                        autoHideDuration={6000}\r\n                        >\r\n                        <Alert\r\n                            {...this.state.snackbar}\r\n                            onClose={this.handleCloseSnackbar}\r\n                        />\r\n                        </Snackbar>\r\n                    )}\r\n\r\n            </>\r\n        );\r\n        // )\r\n        // );\r\n\r\n    }\r\n}","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\ViewStorePurchaseHistoryNevigator.js",[],[],"C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\MangerViewStoreQuestionsNevigator.js",["648","649"],[],"import React, { Component } from 'react';\r\nimport { useLocation, useParams } from 'react-router-dom';\r\nimport ManagerViewStoreQuestions from './ManagerViewStoreQuestions';\r\n\r\n\r\nexport default function MangerViewStoreQuestionsNevigator() {\r\n    const {id} = useParams();\r\n    console.log(\"in ManagerViewStoreQuestions nevigator, id = \"+id);\r\n    return (<ManagerViewStoreQuestions store_id={id}></ManagerViewStoreQuestions>);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\AllStores.js",["650","651"],[],"import React, { Component } from \"react\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport { StoreApi } from \"../API/StoreApi\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport AllStoresTable from \"./AllStoresTable\";\r\nexport default class AllStores extends Component {\r\n    static displayName = AllStores.name;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            snackbar: null,\r\n        }\r\n        this.storeApi = new StoreApi();\r\n       \r\n    }\r\n    async componentDidMount() {\r\n\r\n    }\r\n    render() {\r\n        const stores = this.state.stores;\r\n        const { redirectTo } = this.state;\r\n        return (\r\n            <div className=\"LoginWindow\">\r\n              <Grid\r\n                container\r\n                direction=\"column\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n \r\n                <h3>Market Stores</h3>\r\n          \r\n              </Grid>\r\n              <AllStoresTable\r\n              ></AllStoresTable>\r\n              \r\n   \r\n\r\n              \r\n                  {!!this.state.snackbar && (\r\n                    <Snackbar\r\n                      open\r\n                      anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n                      onClose={this.handleCloseSnackbar}\r\n                      autoHideDuration={6000}\r\n                    >\r\n                      <Alert\r\n                        {...this.state.snackbar}\r\n                        onClose={this.handleCloseSnackbar}\r\n                      />\r\n                    </Snackbar>\r\n                  )}\r\n            </div>\r\n            \r\n        );\r\n      }\r\n}\r\n\r\n","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\MyStores.js",["652","653","654","655","656","657","658","659","660","661","662","663","664"],[],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { StoreApi } from \"../API/StoreApi\";\r\nimport List from \"@mui/material/List\";\r\nimport MenuListComposition from \"./MenuListComposition\";\r\nimport { Paper } from \"@mui/material\";\r\nimport { Typography } from \"@mui/material\";\r\nimport BasicRating from \"./Rating\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport FormDialog from \"./FormDialog\";\r\nimport StoreProductsTable from \"./StoreProductsTable\";\r\nimport AllStoresTable from \"./AllStoresTable\";\r\nimport MyStoresTable from \"./MyStoresTable\";\r\nexport default class MyStores extends Component {\r\n    static displayName = MyStores.name;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            snackbar: null,\r\n        }\r\n        this.storeApi = new StoreApi();\r\n        console.log(\"user = \"+this.props.user);\r\n       \r\n    }\r\n    async componentDidMount() {\r\n\r\n    }\r\n    render() {\r\n        const stores = this.state.stores;\r\n        const { redirectTo } = this.state;\r\n        return (\r\n            <div className=\"LoginWindow\">\r\n              <Grid\r\n                container\r\n                direction=\"column\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n \r\n                <h3>My Stores</h3>\r\n          \r\n              </Grid>\r\n              <MyStoresTable></MyStoresTable>\r\n              \r\n   \r\n\r\n              \r\n                  {!!this.state.snackbar && (\r\n                    <Snackbar\r\n                      open\r\n                      anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n                      onClose={this.handleCloseSnackbar}\r\n                      autoHideDuration={6000}\r\n                    >\r\n                      <Alert\r\n                        {...this.state.snackbar}\r\n                        onClose={this.handleCloseSnackbar}\r\n                      />\r\n                    </Snackbar>\r\n                  )}\r\n            </div>\r\n            \r\n        );\r\n      }\r\n}\r\n\r\n","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\NavBar.js",["665","666"],[],"import React, { Component } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Link from \"@mui/material/Button\";\r\nimport PrimarySearchAppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport AccountMenu from \"./AccountMenu\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { ConnectApi } from \"../API/ConnectApi\";\r\nimport { Navigate } from 'react-router-dom'; \r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport SimpleBadge from \"./SimpleBadge\";\r\n\r\nexport default function NavBar({updateUserState, user}) {\r\n\r\n  const user_name = user.name;\r\n  console.log(\"username = \" + user_name);\r\n  const logout = async () => {\r\n    let response = await new ConnectApi().logout();\r\n    alert(response.message);\r\n    if (!response.was_exception) {\r\n      console.log(response)\r\n      const user_logout = response.value;\r\n      console.log(\"in logout - user is \"+user_logout);\r\n      updateUserState(user_logout);\r\n      window.location.href=`/`\r\n      // return (<Navigate to=\"/\"/>)\r\n    }\r\n  };\r\n  const login_register = () => {\r\n    return user.state === 0 ?\r\n     (\r\n      <>\r\n      <Link\r\n      href=\"/Login\"\r\n      component=\"button\"\r\n      variant=\"body2\"\r\n      position=\"right\"\r\n      onClick={() => {\r\n        console.info(\"I'm Login button, add link.\");\r\n      }}\r\n    >\r\n      Login\r\n    </Link>\r\n    <Link\r\n      href=\"/Register\"\r\n      component=\"button\"\r\n      variant=\"body2\"\r\n      position=\"right\"\r\n      onClick={() => {\r\n        console.info(\"I'm Register button, add link.\");\r\n      }}\r\n    >\r\n      Register\r\n    </Link>\r\n    </>\r\n    ):(<></>)\r\n  }\r\n  return (\r\n    <PrimarySearchAppBar position=\"relative\" style={{ background: \"#2E3755\" }}>\r\n      <Toolbar>\r\n        <Grid container justifyContent=\"flex-start\">\r\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n            Hello {user.name}\r\n            {/* Hello {user_name} , */}\r\n            {/* Hello Amit, */}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid container justifyContent=\"flex-end\">\r\n          <Link\r\n              href=\"/AllStores\"\r\n              component=\"button\"\r\n              variant=\"body2\"\r\n              position=\"right\"\r\n            >\r\n              Market Stores\r\n            </Link>\r\n\r\n\r\n\r\n            {/* <MenuItem>\r\n              <Avatar />{\" \"}\r\n              <Link to={{pathname:`/Notifications`}} onClick={handleClose} underline=\"hover\"> {<SimpleBadge num={6}></SimpleBadge>}</Link>\r\n            </MenuItem> */}\r\n\r\n            {\r\n              user.state !== 0 ? \r\n              <Link\r\n            href=\"/Notifications\"\r\n            component=\"button\"\r\n            variant=\"body2\"\r\n            position=\"right\"\r\n            onClick={() => {\r\n              console.info(\"I'm Register button, add link.\");\r\n            }}\r\n          >\r\n            <SimpleBadge num={3}></SimpleBadge>\r\n            \r\n          </Link>: null\r\n            }\r\n\r\n\r\n\r\n\r\n          <Link\r\n            href=\"/\"\r\n            component=\"button\"\r\n            variant=\"body2\"\r\n            position=\"right\"\r\n            onClick={() => {\r\n              console.info(\"I'm Register button, add link.\");\r\n            }}\r\n          >\r\n            <HomeIcon></HomeIcon>\r\n            \r\n          </Link>\r\n          {login_register()}\r\n          <AccountMenu log={logout} state={user.state} user={user}></AccountMenu>\r\n        </Grid>\r\n      </Toolbar>\r\n    </PrimarySearchAppBar>\r\n  );\r\n}\r\n","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\ManagerPermissions.js",["667","668","669","670","671","672","673"],[],"import * as React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport List from '@mui/material/List';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Button from '@mui/material/Button';\r\nimport Divider from '@mui/material/Divider';\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\"; \r\nimport { StoreApi } from '../API/StoreApi';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Utils } from '../ServiceObjects/Utils';\r\nimport { useEffect } from 'react';\r\nfunction not(a, b) {    \r\n    return a.filter((value) => b.indexOf(value) === -1);\r\n}\r\n\r\nfunction intersection(a, b) {\r\n    return a.filter((value) => b.indexOf(value) !== -1);\r\n}\r\n\r\nfunction union(a, b) {\r\n    return [...a, ...not(b, a)];\r\n}\r\n\r\nexport default function ManagerPermissions() {\r\n    const current_permissions=[];\r\n    const storeApi = new StoreApi();\r\n    const [snackbar, setSnackbar] = React.useState(null);\r\n    const handleCloseSnackbar = () => setSnackbar(null);\r\n    const {id, user_email} = useParams();\r\n    \r\n    const get_permissionss = async () =>{\r\n        const response = await storeApi.get_permissions(user_email, id);\r\n        if (!response.was_exception) {\r\n\r\n            setSnackbar({ children: response.message, severity: 'success' });\r\n            console.log(response.value);\r\n            // current_permissions = response.value;\r\n            response.value.map((per) => {\r\n                let name =permissions_to_names(per);\r\n                if (!current_permissions.includes(name))\r\n                    current_permissions.push(name)\r\n            });\r\n           \r\n\r\n        }\r\n        else {\r\n            setSnackbar({ children: response.message, severity: 'error' });   \r\n\r\n        }\r\n    }\r\n    useEffect(()=>{get_permissionss()}, []);\r\n    \r\n    const [checked, setChecked] = React.useState([]);\r\n    const [left, setLeft] = React.useState([\"Add Item\", \"Remove Item\", \"Edit Item Name\", \"Edit Item Price\",\r\n        \"Edit Item Category\", \"Edit Item Keywords\", \"View Permissions\", \"View User Questions\",\r\n        \"Edit Store Policy\", \"Edit Discount Policy\", \"Edit Purchase Policy\", \"View Purchase History\",\r\n        \"Close Store Temporarily\", \"Open Closed Store\", \"Add Manager\", \"Remove Manager\",\r\n        \"Add Owner\", \"Remove Owner\", \"Edit Permissions\", \"View Bids Status\",\"Answer Bid Offer\",\r\n        \"Answer Bid Offer Negotiate\",   ]);\r\n    const [right, setRight] = React.useState(current_permissions);\r\n\r\n    const leftChecked = intersection(checked, left);\r\n    const rightChecked = intersection(checked, right);\r\n    \r\n\r\n    const handleToggle = (value) => () => {\r\n        const currentIndex = checked.indexOf(value);\r\n        const newChecked = [...checked];\r\n\r\n        if (currentIndex === -1) {\r\n            newChecked.push(value);\r\n        } else {\r\n            newChecked.splice(currentIndex, 1);\r\n        }\r\n\r\n        setChecked(newChecked);\r\n    };\r\n\r\n    const numberOfChecked = (items) => intersection(checked, items).length;\r\n\r\n    const handleToggleAll = (items) => () => {\r\n        if (numberOfChecked(items) === items.length) {\r\n            setChecked(not(checked, items));\r\n        } else {\r\n            setChecked(union(checked, items));\r\n        }\r\n    };\r\n\r\n    const handleCheckedRight = () => {\r\n\r\n        if (!right.includes(leftChecked[0]))\r\n        {\r\n            setRight(right.concat(leftChecked));\r\n            setLeft(not(left, leftChecked));\r\n            \r\n        }\r\n        setChecked(not(checked, leftChecked));\r\n    };\r\n\r\n    const handleCheckedLeft = () => {\r\n        if (!left.includes(rightChecked[0]))\r\n        {\r\n            setLeft(left.concat(rightChecked));\r\n            setRight(not(right, rightChecked));\r\n        } \r\n        setChecked(not(checked, rightChecked));\r\n    };\r\n    const permissions_dict = {add_item :0,\r\n        remove_item:1,\r\n        edit_item_name:2,\r\n        edit_item_price:3,\r\n        edit_item_category:4,\r\n        edit_item_keywords:5,\r\n        edit_item_quantity:6,\r\n        view_permissions:7,\r\n        view_users_questions:8,\r\n        edit_store_policy:9,\r\n        edit_discount_policy:10,\r\n        edit_purchase_policy:11,\r\n        view_purchases_history:12,\r\n        close_store_temporarily:13,\r\n        open_close_store:14,\r\n        add_manager:15,\r\n        remove_manager:16,\r\n        add_owner:17,\r\n        remove_owner:18,\r\n        edit_permissions:19,\r\n        view_bids_status:20,\r\n        answer_bid_offer:21,\r\n        answer_bid_offer_negotiate:22,};\r\n    const handleInputChange = event => {\r\n        const name = event.target.name\r\n        const value = event.target.value;\r\n        console.log(value);\r\n        console.log(name);\r\n        localStorage.setItem(name, value);\r\n    \r\n        \r\n        };   \r\n        // const hadleSubmit = async () => {\r\n        //     return (<Button>fffff</Button>);\r\n        // }\r\n    const permissions_to_names = (per) =>{\r\n        if (per === \"add_item\") {\r\n           return \"Add Item\";\r\n        }\r\n        else if (per === \"remove_item\") {\r\n            return \"Remove Item\";\r\n        }\r\n        else if (per === \"edit_item_name\") {\r\n            return \"Edit Item Name\";\r\n        }\r\n        else if (per === \"edit_item_price\") {\r\n            return \"Edit Item Price\";\r\n        }\r\n        else if (per === \"edit_item_category\") {\r\n            return \"Edit Item Category\";\r\n        }\r\n        else if (per === \"edit_item_keywords\") {\r\n            return \"Edit Item Keywords\";\r\n        }\r\n        else if (per === \"view_permissions\") {\r\n            return \"View Permission\";\r\n        }\r\n        else if (per === \"view_users_questions\") {\r\n            return \"View User Questions\";\r\n        }\r\n        else if (per === \"edit_store_policy\") {\r\n            return \"Edit Store Policy\";\r\n        }\r\n        else if (per === \"edit_discount_policy\") {\r\n            return \"Edit Discount Policy\";\r\n        }\r\n        else if (per === \"edit_purchase_policy\") {\r\n            return \"Edit Purchase Policy\";\r\n        }\r\n\r\n        else if (per === \"view_purchases_history\") {\r\n            return \"View Purchase History\";\r\n        }\r\n\r\n        else if (per === \"close_store_temporarily\") {\r\n            return \"Close Store Temporarily\";\r\n        }\r\n        else if (per === \"open_close_store\") {\r\n            return \"Open Closed Store\";\r\n        }\r\n        else if (per === \"add_manager\") {\r\n            return \"Add Manager\";\r\n        }\r\n        else if (per === \"remove_manager\") {\r\n            return \"Remove Manager\";\r\n        }\r\n        else if (per === \"add_owner\") {\r\n            return \"Add Owner\";\r\n        }\r\n        else if (per === \"remove_owner\") {\r\n            return \"Remove Owner\";\r\n        }\r\n        else if (per === \"edit_permissions\") {\r\n            return \"Edit Permissions\";\r\n        }\r\n        else if (per === \"view_bids_status\") {\r\n            return \"View Bids Status\";\r\n        }\r\n        else if (per === \"answer_bid_offer\") {\r\n            return \"Answer Bid Offer\";\r\n        }\r\n        else if (per === \"answer_bid_offer_negotiate\") {\r\n            return \"Answer Bid Offer Negotiate\";\r\n        }\r\n\r\n    }\r\n    const hadleSubmit = async () => {\r\n        let permissions = [];\r\n        right.map((per) => {\r\n            if (per === \"Add Item\") {\r\n                permissions.push(\"add_item\");\r\n            }\r\n            else if (per === \"Remove Item\") {\r\n                permissions.push(\"remove_item\");\r\n            }\r\n            else if (per === \"Edit Item Name\") {\r\n                permissions.push(\"edit_item_name\");\r\n            }\r\n            else if (per === \"Edit Item Price\") {\r\n                permissions.push(\"edit_item_price\");\r\n            }\r\n            else if (per === \"Edit Item Category\") {\r\n                permissions.push(\"edit_item_category\");\r\n            }\r\n            else if (per === \"Edit Item Keywords\") {\r\n                permissions.push(\"edit_item_keywords\");\r\n            }\r\n            else if (per === \"View Permission\") {\r\n                permissions.push(\"view_permissions\");\r\n            }\r\n            else if (per === \"View User Questions\") {\r\n                permissions.push(\"view_users_questions\");\r\n            }\r\n            else if (per === \"Edit Store Policy\") {\r\n                permissions.push(\"edit_store_policy\");\r\n            }\r\n            else if (per === \"Edit Discount Policy\") {\r\n                permissions.push(\"edit_discount_policy\");\r\n            }\r\n            else if (per === \"Edit Purchase Policy\") {\r\n                permissions.push(\"edit_purchase_policy\");\r\n            }\r\n\r\n            else if (per === \"View Purchase History\") {\r\n                permissions.push(\"view_purchases_history\");\r\n            }\r\n\r\n            else if (per === \"Close Store Temporarily\") {\r\n                permissions.push(\"close_store_temporarily\");\r\n            }\r\n            else if (per === \"Open Closed Store\") {\r\n                permissions.push(\"open_close_store\");\r\n            }\r\n            else if (per === \"Add Manager\") {\r\n                permissions.push(\"add_manager\");\r\n            }\r\n            else if (per === \"Remove Manager\") {\r\n                permissions.push(\"remove_manager\");\r\n            }\r\n            else if (per === \"Add Owner\") {\r\n                permissions.push(\"add_owner\");\r\n            }\r\n            else if (per === \"Remove Owner\") {\r\n                permissions.push(\"remove_owner\");\r\n            }\r\n            else if (per === \"Edit Permissions\") {\r\n                permissions.push(\"edit_permissions\");\r\n            }\r\n            else if (per === \"View Bids Status\") {\r\n                permissions.push(\"view_bids_status\");\r\n            }\r\n            else if (per === \"Answer Bid Offer\") {\r\n                permissions.push(\"answer_bid_offer\");\r\n            }\r\n            else if (per === \"Answer Bid Offer Negotiate\") {\r\n                permissions.push(\"answer_bid_offer_negotiate\");\r\n            }\r\n\r\n    \r\n\r\n\r\n        })\r\n        console.log(permissions);\r\n        let permissions_numbers = [];\r\n        permissions.map((p)=> permissions_numbers.push(permissions_dict[p]));\r\n        console.log(permissions_numbers);\r\n        console.log(id);\r\n        if (permissions_numbers.length == 0 )\r\n        {\r\n            setSnackbar({ children: \"Have to choose al least one permission\", severity: 'error' });   \r\n            return;\r\n        }\r\n        \r\n        let permissions_str = \"\";\r\n        permissions_numbers.map((p)=>{\r\n            permissions_str = permissions_str.concat(p.toString()).concat(\"/\")\r\n        });\r\n        console.log(permissions_str)\r\n        // storeApi.edit_manager_permissions(user_email, store_id, permissions_numbers)\r\n        const response = await storeApi.edit_manager_permissions(user_email, id, permissions_str);\r\n        if (!response.was_exception) {\r\n            setSnackbar({ children: response.message, severity: 'success' });   \r\n            console.log(\"in edit_manager_permissions - success!\\n\");\r\n        }\r\n        else {\r\n            setSnackbar({ children: response.message, severity: 'error' });   \r\n\r\n        }\r\n    };\r\n\r\n    const customList = (title, items) => (\r\n        <Card>\r\n            <CardHeader\r\n                paddingTop={2}\r\n                sx={{ px: 2, py: 1 }}\r\n                avatar={\r\n                    <Checkbox\r\n                        onClick={handleToggleAll(items)}\r\n                        checked={numberOfChecked(items) === items.length && items.length !== 0}\r\n                        indeterminate={\r\n                            numberOfChecked(items) !== items.length && numberOfChecked(items) !== 0\r\n                        }\r\n                        disabled={items.length === 0}\r\n                        inputProps={{\r\n                            'aria-label': 'all items selected',\r\n                        }}\r\n                    />\r\n                }\r\n                title={title}\r\n                subheader={`${numberOfChecked(items)}/${items.length} selected`}\r\n            />\r\n            <Divider />\r\n            <List\r\n                sx={{\r\n                    width: 300,\r\n                    height: 330,\r\n                    bgcolor: 'background.paper',\r\n                    overflow: 'auto',\r\n                    paddingTop: 2,\r\n                }}\r\n                dense\r\n                component=\"div\"\r\n                role=\"list\"\r\n            >\r\n                {items.map((value) => {\r\n                    const labelId = `transfer-list-all-item-${value}-label`;\r\n\r\n                    return (\r\n                        <ListItem\r\n                            key={value}\r\n                            role=\"listitem\"\r\n                            button\r\n                            onClick={handleToggle(value)}\r\n                        >\r\n                            <ListItemIcon>\r\n                                <Checkbox\r\n                                    checked={checked.indexOf(value) !== -1}\r\n                                    tabIndex={-1}\r\n                                    disableRipple\r\n                                    inputProps={{\r\n                                        'aria-labelledby': labelId,\r\n                                    }}\r\n                                />\r\n                            </ListItemIcon>\r\n                            <ListItemText id={labelId} primary={`${value}`} />\r\n                        </ListItem>\r\n                    );\r\n                })}\r\n                <ListItem />\r\n            </List>\r\n        </Card>\r\n    );\r\n\r\n    return (\r\n        <>\r\n        <Grid container spacing={3} justifyContent=\"center\" alignItems=\"center\" paddingTop={10}>\r\n            <h3 align=\"center\">Change Permissions Of User {user_email}</h3>      \r\n            </Grid>\r\n            <Grid container spacing={3} justifyContent=\"center\" alignItems=\"center\">\r\n            \r\n                <Grid item>{customList('Permission Choices', left)}</Grid>\r\n                <Grid item>\r\n                    <Grid container direction=\"column\" alignItems=\"center\">\r\n                        <Button\r\n                            sx={{ my: 0.5 }}\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            onClick={handleCheckedRight}\r\n                            disabled={leftChecked.length === 0}\r\n                            aria-label=\"move selected right\"\r\n                        >\r\n                            &gt;\r\n                        </Button>\r\n                        <Button\r\n                            sx={{ my: 0.5 }}\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            onClick={handleCheckedLeft}\r\n                            disabled={rightChecked.length === 0}\r\n                            aria-label=\"move selected left\"\r\n                        >\r\n                            &lt;\r\n                        </Button>\r\n                    </Grid>\r\n                    \r\n                </Grid>\r\n                <Grid item>{customList('Current Permissions', right)}</Grid>\r\n                <Grid container direction=\"column\" alignItems=\"center\">\r\n                <Grid item>\r\n                    \r\n                    <Button variant=\"contained\" onClick={hadleSubmit} >Submit</Button>\r\n                    </Grid>\r\n                    </Grid>\r\n            </Grid>\r\n            \r\n            {!!snackbar && (\r\n            <Snackbar\r\n            open\r\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n            onClose={handleCloseSnackbar}\r\n            autoHideDuration={6000}\r\n            >\r\n            <Alert {...snackbar} onClose={handleCloseSnackbar} />\r\n            </Snackbar>\r\n        )}\r\n        </>\r\n    );\r\n}\r\n","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\PaymentPage.js",["674","675","676","677","678","679","680","681","682","683"],[],"import React, { Component } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Link from '@mui/material/Button';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\"; \r\nimport { Utils } from '../ServiceObjects/Utils';\r\nimport { Payment } from '../ServiceObjects/Payment';\r\nimport { Supply } from '../ServiceObjects/Supply';\r\nimport { set } from 'date-fns';\r\n\r\nexport default function PaymentPage({update}) {\r\n    const [snackbar, setSnackbar] = React.useState(null);\r\n    const handleCloseSnackbar = () => setSnackbar(null);\r\n\r\n    const [creditnumber, setCreditnumber] = React.useState(\"\");\r\n    const [month_year, setMonth_year] = React.useState(\"\");\r\n    const [holder, setHolder] = React.useState(\"\");\r\n    const [ccv, setCcv] = React.useState(\"\");\r\n    const [id, setId] = React.useState(\"\");\r\n\r\n\r\n\r\n\r\n\r\n    const  check_payment = async () =>{\r\n        const date = month_year.split('-');\r\n        let month = date[1];\r\n        let year = date[0];\r\n        console.log(creditnumber)\r\n        console.log(month)\r\n        console.log(year)\r\n        console.log(holder)\r\n        console.log(ccv)\r\n        console.log(id)\r\n\r\n        if (Utils.check_credit_number(creditnumber) == 0)\r\n        {\r\n            setSnackbar({ children: \"Illegal Card Number\", severity: 'error' });\r\n            return;\r\n        }\r\n        if(Utils.check_date(month, year) == 0)\r\n        {\r\n            setSnackbar({ children: \"Illegal date\", severity: 'error' });\r\n            return;\r\n        }\r\n        if (Utils.check_holder(holder)== 0)\r\n        {\r\n            setSnackbar({ children: \"Illegal Name\", severity: 'error' });\r\n            return;\r\n        }\r\n        if (Utils.check_ccv(ccv)== 0)\r\n        {\r\n            setSnackbar({ children: \"Illegal CCV\", severity: 'error' });\r\n            return;\r\n        }\r\n        if (Utils.check_id(id)== 0)\r\n        {\r\n            setSnackbar({ children: \"Illegal ID\", severity: 'error' });\r\n            return;\r\n        }\r\n\r\n\r\n        const payment_info = Payment.create(creditnumber, month, year, holder, ccv, id);\r\n        update(payment_info);\r\n\r\n\r\n    }\r\n\r\n            return (\r\n                <main class=\"LoginMain\">\r\n                    <div class=\"LoginWindow\">\r\n                        <h3>Payment</h3>\r\n                        <form class=\"LoginForm\" >\r\n                            <input type=\"creditnumber\" name=\"creditnumber\" onChange={e => setCreditnumber(e.target.value)}\r\n                                    placeholder=\"Credit Number\" required/>\r\n                            <input type=\"month\" name=\"month_year\" onChange={e => setMonth_year(e.target.value)}\r\n                                    placeholder=\"mm/yyyy\" required/>\r\n                            <input type=\"holder\" name=\"holder\" onChange={e => setHolder(e.target.value)}\r\n                                placeholder=\"Holder\" required/>\r\n                            <input type=\"ccv\" name=\"ccv\" onChange={e => setCcv(e.target.value)}\r\n                                placeholder=\"CCV\" required/>\r\n                            <input type=\"id\" name=\"id\" onChange={e => setId(e.target.value)}\r\n                                placeholder=\"ID\" required/>\r\n                           \r\n\r\n                            <div className=\"ConnectRegister\">\r\n                                \r\n                                <Button onClick={check_payment} variant=\"contained\">Confirm</Button>\r\n                            </div>\r\n                            {!!snackbar && (\r\n            <Snackbar\r\n            open\r\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n            onClose={handleCloseSnackbar}\r\n            autoHideDuration={6000}\r\n            >\r\n            <Alert {...snackbar} onClose={handleCloseSnackbar} />\r\n            </Snackbar>\r\n\r\n        )}\r\n                        </form>\r\n                    </div>\r\n                </main>\r\n            );\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { Component } from 'react';\r\n// import Button from '@mui/material/Button';\r\n// import Link from '@mui/material/Button';\r\n// import HomeIcon from '@mui/icons-material/Home';\r\n// import Snackbar from \"@mui/material/Snackbar\";\r\n// import Alert from \"@mui/material/Alert\";\r\n// import { Utils } from '../ServiceObjects/Utils';\r\n// import { Payment } from '../ServiceObjects/Payment';\r\n// import { Supply } from '../ServiceObjects/Supply';\r\n\r\n\r\n// export default class PaymentPage extends Component {\r\n//     static displayName = PaymentPage.name;\r\n\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             paymentError: undefined,\r\n//             creditnumber: \"\",\r\n//             month_year: \"\",\r\n//             holder: \"\",\r\n//             ccv: \"\",\r\n//             id: \"\",\r\n//             snackbar: null,\r\n//         };\r\n//         this.handleInputChange = this.handleInputChange.bind(this);\r\n\r\n//     }\r\n\r\n//     handleInputChange(event){\r\n//         const target = event.target;\r\n//         console.log(target.name)\r\n//         console.log(target.value)\r\n//         this.setState({\r\n//             [target.name]: target.value\r\n//         });\r\n//     }\r\n\r\n\r\n//     async componentDidMount() {\r\n\r\n\r\n//     }\r\n\r\n//     async check_payment(){\r\n//         let creditnumber = this.state.creditnumber;\r\n//         let ccv = this.state.ccv;\r\n//         let holder = this.state.holder;\r\n//         let id = this.state.id;\r\n//         console.log(this.state.month_year);\r\n//         const date = this.state.month_year.split('-');\r\n//         let month = date[1];\r\n//         let year = date[0];\r\n//         console.log(creditnumber)\r\n//         console.log(month)\r\n//         console.log(year)\r\n//         console.log(holder)\r\n//         console.log(ccv)\r\n//         console.log(id)\r\n\r\n//         if (Utils.check_credit_number(creditnumber) == 0)\r\n//         {\r\n//             this.setState({ snackbar: { children: \"Illegal Card Number\", severity: \"error\" } });\r\n//             return;\r\n//         }\r\n//         if(Utils.check_date(month, year) == 0)\r\n//         {\r\n//             this.setState({ snackbar: { children: \"Illegal date\", severity: \"error\" } });\r\n//             return;\r\n//         }\r\n//         if (Utils.check_holder(holder)== 0)\r\n//         {\r\n//             this.setState({ snackbar: { children: \"Illegal Name\", severity: \"error\" } });\r\n//             return;\r\n//         }\r\n//         if (Utils.check_ccv(ccv)== 0)\r\n//         {\r\n//             this.setState({ snackbar: { children: \"Illegal CCV\", severity: \"error\" } });\r\n//             return;\r\n//         }\r\n//         if (Utils.check_id(id)== 0)\r\n//         {\r\n//             this.setState({ snackbar: { children: \"Illegal ID\", severity: \"error\" } });\r\n//             return;\r\n//         }\r\n\r\n\r\n//         const payment_info = Payment.create(creditnumber, month, year, holder, ccv, id);\r\n//         this.props.update(payment_info);\r\n\r\n\r\n//     }\r\n\r\n//     render() {\r\n//         const {redirectTo} = this.state\r\n//             return (\r\n//                 <main class=\"LoginMain\">\r\n//                     <div class=\"LoginWindow\">\r\n//                         <h3>Payment</h3>\r\n//                         <form class=\"LoginForm\" >\r\n//                             {this.state.loginError ?\r\n//                                 <div class=\"CenterItemContainer\"><label>{this.state.loginError}</label></div> : null}\r\n//                             <input type=\"creditnumber\" name=\"creditnumber\" value={this.state.creditnumber} onChange={this.handleInputChange}\r\n//                                     placeholder=\"Credit Number\" required/>\r\n//                             <input type=\"month\" name=\"month_year\" value={this.state.month_year} onChange={this.handleInputChange}\r\n//                                     placeholder=\"mm/yyyy\" required/>\r\n//                             <input type=\"holder\" name=\"holder\" value={this.state.holder} onChange={this.handleInputChange}\r\n//                                 placeholder=\"Holder\" required/>\r\n//                             <input type=\"ccv\" name=\"ccv\" value={this.state.ccv} onChange={this.handleInputChange}\r\n//                                 placeholder=\"CCV\" required/>\r\n//                             <input type=\"id\" name=\"id\" value={this.state.id} onChange={this.handleInputChange}\r\n//                                 placeholder=\"ID\" required/>\r\n\r\n//                             {/* <select name=\"role\" value={this.state.role} required>\r\n//                                 <option value=\"member\">Member</option>\r\n//                                 <option value=\"admin\">Admin</option>\r\n//                             </select> */}\r\n//                             <div className=\"ConnectRegister\">\r\n\r\n//                                 {/* <Link to=\"/register\">Create new account</Link> */}\r\n//                                 <Button onClick={() => this.check_payment()} variant=\"contained\">Confirm</Button>\r\n//                                 {/* <input class=\"action\" type=\"submit\" value=\"Login\"/> */}\r\n//                             </div>\r\n//                             {!!this.state.snackbar && (\r\n//                         <Snackbar\r\n//                         open\r\n//                         anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n//                         onClose={this.handleCloseSnackbar}\r\n//                         autoHideDuration={6000}\r\n//                         >\r\n//                         <Alert\r\n//                             {...this.state.snackbar}\r\n//                             onClose={this.handleCloseSnackbar}\r\n//                         />\r\n//                         </Snackbar>\r\n//                     )}\r\n//                         </form>\r\n//                     </div>\r\n//                 </main>\r\n//             );\r\n\r\n//     }\r\n// }","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\StoreManagmentNevigator.js",["684"],[],"\r\n     \r\nimport React, { Component } from 'react';\r\nimport {useParams } from 'react-router-dom';\r\nimport StoreManagment from './StoreManagment';\r\n\r\nexport default function StoreManagmentNevigator() {\r\n    const {id} = useParams();\r\n    console.log(\"store managment nevigator-> id =\"+id);\r\n    return (<StoreManagment store_id={id}></StoreManagment>);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\ViewStaffInformationNevigator.js",[],[],"C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\BuyCart.js",[],[],"C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\Notifications.js",["685","686","687","688","689","690","691","692"],[],"import * as React from 'react';\r\n\r\nimport { Component } from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Grid from '@mui/material/Grid';\r\nimport Link from '@mui/material/Button';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport { StoreApi } from '../API/StoreApi';\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\"; \r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport SocketProvider from './SocketProvider';\r\nimport { ConnectApi } from '../API/ConnectApi';\r\nimport { useEffect } from 'react';\r\nimport {useState} from \"react\";\r\n\r\nconst Demo = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.background.paper,\r\n}));\r\n\r\n\r\nexport default function Notifications() {\r\n    const [user, setUser] = useState(null);\r\n    const connectApi = new ConnectApi();\r\n    // useEffect(()=>{get_online_user()}, []);\r\n    useEffect(()=>{get_notifications_list()}, []);\r\n    \r\n    const get_notifications_list = async () => {\r\n        let response = await connectApi.get_notifications_list();\r\n        if(!response.was_exception)\r\n        {\r\n            setNotifications(response.value);\r\n            setSnackbar({ children: response.message, severity: 'success' });\r\n        }\r\n        else\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'error' });\r\n    \r\n        }\r\n        \r\n    }\r\n\r\n    const get_online_user = async () => {\r\n      let response = await connectApi.get_online_user()\r\n      if(!response.was_exception)\r\n      {\r\n          console.log(response.value);\r\n            setUser(response.value);\r\n        // get_notifications(response.value);\r\n      }\r\n      else\r\n      {\r\n  \r\n      }\r\n      \r\n  }\r\n\r\n\r\n    const [snackbar, setSnackbar] = React.useState(null);\r\n    const handleCloseSnackbar = () => setSnackbar(null);\r\n\r\n    \r\n    const [notifications, setNotifications] = React.useState([]);\r\n\r\n\r\n    \r\n\r\n        return (\r\n\r\n            \r\n       \r\n                <Box position='center' align='center'>\r\n                    <Grid position='center' row-spacing={3} paddingTop={10}>\r\n                        <Grid item>\r\n                            <h2 class=\"Header\" align=\"center\" > \r\n                                Notifications\r\n                            </h2>\r\n                        </Grid>\r\n\r\n                        <Grid position='center' align='center'>\r\n\r\n                            <Demo>\r\n                                <List>\r\n                                    {\r\n\r\n                                        notifications.length !==0 ? notifications.map((n) => (\r\n                                            <ListItem>\r\n                                                <ListItemAvatar>\r\n                                                    <Avatar>\r\n                                                        <PersonIcon />\r\n                                                    </Avatar>\r\n                                                </ListItemAvatar>\r\n                                                <ListItemText\r\n                                                    primary={n}\r\n                                                    secondary={n}\r\n                                                // primary='fsdf'\r\n                                                />\r\n                                            </ListItem>\r\n\r\n                                        )) : <h8 style={{ color: 'red' }}> No Notifications</h8>\r\n\r\n\r\n\r\n\r\n                                    }\r\n                                </List>\r\n                            </Demo>\r\n                        </Grid>\r\n                    </Grid>\r\n                    {!!snackbar && (\r\n            <Snackbar\r\n            open\r\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n            onClose={handleCloseSnackbar}\r\n            autoHideDuration={6000}\r\n            >\r\n            <Alert {...snackbar} onClose={handleCloseSnackbar} />\r\n            </Snackbar>\r\n        )}\r\n                </Box>\r\n                \r\n\r\n    \r\n    );\r\n\r\n\r\n}          \r\n","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\StorePageNevigator.js",["693"],[],"\r\n     \r\nimport React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport StorePage from './StorePage';\r\nimport { ConnectApi } from '../API/ConnectApi';\r\nimport { useEffect } from 'react';\r\nimport {useState} from \"react\";\r\n\r\nexport default function StorePageNevigator() {\r\n    const {id} = useParams();\r\n    const [user, setUser] = useState(null);\r\n    const connectApi = new ConnectApi();\r\n    useEffect(()=>{get_online_user()}, []);\r\n    const get_online_user = async () => {\r\n      let response = await connectApi.get_online_user()\r\n      if(!response.was_exception)\r\n      {\r\n        setUser(response.value);\r\n\r\n      }\r\n      else\r\n      {\r\n\r\n      }\r\n      \r\n  }\r\n    console.log(\"store page nevigator-> id =\"+id);\r\n    console.log(\"store page nevigator-> user =\"+user);\r\n    console.log(user);\r\n    if(user!==null)\r\n        return (<StorePage store_id={id} stores_managed={user.storesManaged}></StorePage>);\r\n    }\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\AdminViewUserPurchaseHistory.js",["694","695","696","697","698","699","700","701","702","703"],[],"import * as React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport List from '@mui/material/List';\r\nimport { styled } from '@mui/material/styles';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Button from '@mui/material/Button';\r\nimport Divider from '@mui/material/Divider';\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\"; \r\nimport { StoreApi } from '../API/StoreApi';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Utils } from '../ServiceObjects/Utils';\r\nimport { useEffect } from 'react';\r\nimport { AdminApi } from '../API/AdminApi';\r\nimport Box from '@mui/material/Box';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\n\r\nconst Demo = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.background.paper,\r\n}));\r\n\r\nexport default function AdminViewUserPurchaseHistory() {\r\n\r\n    const [snackbar, setSnackbar] = React.useState(null);\r\n    const handleCloseSnackbar = () => setSnackbar(null);\r\n    const {user_email} = useParams();\r\n    const [purchaseHistory, setPurchaseHistory] = React.useState([]);\r\n    useEffect(()=>{admin_view_user_purchases_history()}, []);\r\n    const adminApi = new AdminApi();\r\n    const admin_view_user_purchases_history = async () =>{\r\n        // const response = await adminApi.admin_view_user_purchases_history(user_email);\r\n        // if(!response.was_exception)\r\n        // {\r\n        //     setSnackbar({ children: response.message, severity: 'success' });\r\n        //     console.log(response.value);\r\n        //     setPurchaseHistory(response.value);\r\n        // }\r\n        // else{\r\n        //     setSnackbar({ children: response.message, severity: 'error' });\r\n\r\n        // }\r\n    }\r\n    return (\r\n        <>\r\n        <Grid container spacing={3} justifyContent=\"center\" alignItems=\"center\" paddingTop={10}>\r\n            <h3 align=\"center\">User History - User {user_email}</h3>      \r\n            </Grid>\r\n\r\n            <Box position='center' align='center'>\r\n                    <Grid position='center' row-spacing={3}>\r\n                  \r\n\r\n                        <Grid position='center' align='center'>\r\n\r\n                            <Demo>\r\n                                <List>\r\n                                    {purchaseHistory.length!==0 ? purchaseHistory.map((staf) => (\r\n                                            <ListItem>\r\n                                                <ListItemAvatar>\r\n                                                    <Avatar>\r\n                                                        <PersonIcon />\r\n                                                    </Avatar>\r\n                                                </ListItemAvatar>\r\n                                                <ListItemText\r\n                                                    primary={\"ffff\"}\r\n                                                    secondary={\"fffffff\"}\r\n                                                // primary='fsdf'\r\n                                                />\r\n                                            </ListItem>\r\n\r\n                                        )) : <h3 style={{ color: 'red' }}>No Purchase History</h3>\r\n\r\n\r\n\r\n\r\n                                    }\r\n                                </List>\r\n                            </Demo>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            {!!snackbar && (\r\n            <Snackbar\r\n            open\r\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n            onClose={handleCloseSnackbar}\r\n            autoHideDuration={6000}\r\n            >\r\n            <Alert {...snackbar} onClose={handleCloseSnackbar} />\r\n            </Snackbar>\r\n        )}\r\n        </>\r\n    );\r\n}","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\StorePolicies.js",["704","705","706","707","708","709","710","711","712","713","714","715","716","717","718","719","720","721","722","723","724","725","726","727","728"],[],"import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport { AdminApi } from '../API/AdminApi';\r\nimport { experimentalStyled as styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\nimport FormDialog from './FormDialog';\r\nimport FormDialogPermissions from './FormDialogPermissions';\r\nimport { StoreApi } from '../API/StoreApi';\r\nimport StoreManagmentProductsTable from './StoreManagmentProductsTable';\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\"; \r\nimport { Utils } from '../ServiceObjects/Utils';\r\nimport List from '@mui/material/List';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Button from '@mui/material/Button';\r\nimport Divider from '@mui/material/Divider';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport { PoliciesApi } from '../API/PoliciesApi';\r\nimport ControlledRadioButtonsGroup from './ControlledRadioButtonsGroup';\r\nimport InteractiveList from './InteractiveList';\r\nimport FolderIcon from '@mui/icons-material/Folder';\r\nimport MoneyOffIcon from '@mui/icons-material/MoneyOff';\r\nimport { purple } from '@mui/material/colors';\r\nimport AddDiscount from './AddDiscount';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport CreatePredict from './CreatePredict';\r\nimport AddPurchase from './AddPurchase';\r\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\r\nimport QuestionMarkIcon from '@mui/icons-material/QuestionMark';\r\nimport { RemoveRoad, ReplayOutlined } from '@mui/icons-material';\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nexport default function StorePolicies() {\r\n    const [snackbar, setSnackbar] = React.useState(null);\r\n    const handleCloseSnackbar = () => setSnackbar(null);\r\n    const {id} = useParams();\r\n    const store_id=id;\r\n    const policiesApi = new PoliciesApi();\r\n\r\n\r\n    //Getters\r\n    const [purchases,setPurchases ] =React.useState([\"purchase1\", \"purchase2\", \"purchase3\"]);\r\n    const [predicts,setPredicts ] =React.useState([\"predict1\", \"predict2\", \"predict3\"]);\r\n    const [discounts,setDiscounts ] =React.useState([\"discount1\", \"discount2\", \"discount3\"]);\r\n\r\n    //ADD\r\n    const [addDiscount,setAddDiscount ] =React.useState(false);\r\n    const [addPurchase,setAddPurchase ] =React.useState(false);\r\n    const [addPredict,setAddPredict ] =React.useState(false);\r\n\r\n\r\n\r\n\r\n    const get_purchase_policy = async () => {\r\n        const response = await policiesApi.get_purchase_policy(id);\r\n        if(!response.was_exception)\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'success' }); \r\n            setPurchases(response.value);\r\n            \r\n        }\r\n        else{\r\n            setSnackbar({ children: response.message, severity: 'error' }); \r\n        }\r\n    }\r\n    const send_predicts = async () => {\r\n        const response = await policiesApi.send_predicts(id);\r\n        if(!response.was_exception)\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'success' });    \r\n            setPredicts(response.value);\r\n         }\r\n        else{\r\n            setSnackbar({ children: response.message, severity: 'error' }); \r\n        }\r\n    }\r\n    const get_discount_policy = async () => {\r\n        const response = await policiesApi.get_discount_policy(id);\r\n        if(!response.was_exception)\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'success' });    \r\n            console.log(response.value);\r\n            setDiscounts(response.value);\r\n        }\r\n        else{\r\n            setSnackbar({ children: response.message, severity: 'error' }); \r\n        }\r\n    }\r\n\r\n\r\n\r\n    useEffect(()=>{get_purchase_policy()}, []);\r\n    useEffect(()=>{send_predicts()}, []);\r\n    useEffect(()=>{get_discount_policy()}, []);\r\n\r\n    const ShowAddPredict = ()=>{\r\n        setAddPredict(!addPredict);\r\n    }\r\n    const ShowAddDiscount = ()=>{\r\n        setAddDiscount(!addDiscount);\r\n    }\r\n    const ShowAddPurchase = ()=>{\r\n        setAddPurchase(!addPurchase);\r\n    }\r\n\r\n    \r\n\r\n    //Functions to Server\r\n    const remove_predict = async (predict_name) =>{\r\n        console.log(predict_name);\r\n        const response = await policiesApi.remove_predict(store_id, predict_name)\r\n        if (!response.was_exception)\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'success' });\r\n            window.location.reload();\r\n        }\r\n        else{\r\n            setSnackbar({ children: response.message, severity: 'error' });\r\n\r\n        }\r\n    }\r\n    const remove_discount_rule = async (discount_rule) =>{\r\n        console.log(discount_rule);\r\n        const response = await policiesApi.remove_discount_rule(store_id, discount_rule)\r\n        if (!response.was_exception)\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'success' });\r\n            window.location.reload();\r\n\r\n        }\r\n        else{\r\n            setSnackbar({ children: response.message, severity: 'error' });\r\n\r\n        }\r\n    }\r\n    const remove_purchase_rule = async (purchase_rule) =>{\r\n        console.log(purchase_rule);\r\n        const response = await policiesApi.remove_purchase_rule(store_id, purchase_rule)\r\n        if (!response.was_exception)\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'success' });\r\n            window.location.reload();\r\n        }\r\n        else{\r\n            setSnackbar({ children: response.message, severity: 'error' });\r\n\r\n        }\r\n    }\r\n        return (\r\n\r\n            <Box sx={{ flexGrow: 1 }}>\r\n                <Grid container spacing={5} paddingRight={25} paddingLeft={25} paddingTop={10}>\r\n\r\n                    \r\n                </Grid>\r\n                <h1 align=\"center\">Store Policies</h1>\r\n                <Grid>\r\n                </Grid>\r\n                <Grid container spacing={5} paddingRight={25} paddingLeft={25} paddingTop={10}>\r\n                    <Grid item xs={10}>  <Item> \r\n                        <InteractiveList name=\"predicts\" list={predicts} icon={<QuestionMarkIcon></QuestionMarkIcon>} remove={remove_predict}></InteractiveList>\r\n                        <Button onClick={ShowAddPredict}><AddIcon></AddIcon></Button> \r\n                        {addPredict ? <CreatePredict></CreatePredict>:null}</Item>                    \r\n                    </Grid>\r\n\r\n                    <Grid item xs={10}>  <Item> \r\n                    <InteractiveList name=\"Discount Rules\" list={discounts} icon={<MoneyOffIcon></MoneyOffIcon>} remove={remove_discount_rule}></InteractiveList>\r\n                        <Button onClick={ShowAddDiscount}><AddIcon></AddIcon></Button> \r\n                        {addDiscount ? <AddDiscount></AddDiscount>:null}</Item>                    \r\n                    </Grid>\r\n\r\n                    <Grid item xs={10}>  <Item> \r\n                    <InteractiveList name=\"Purchase Rules\" list={purchases} icon={<ShoppingCartIcon></ShoppingCartIcon>} remove={remove_purchase_rule}></InteractiveList>\r\n                        <Button onClick={ShowAddPurchase}><AddIcon></AddIcon></Button> \r\n                        {addPurchase ? <AddPurchase></AddPurchase>:null}</Item>                    \r\n                    </Grid>\r\n\r\n\r\n\r\n                    <Grid item xs={10}>  <Item> </Item>                    </Grid>\r\n                    \r\n                    \r\n                    {/* <ControlledRadioButtonsGroup list={predicts} name=\"Predicts\" save={save_predictOr1}></ControlledRadioButtonsGroup> */}\r\n\r\n\r\n\r\n\r\n\r\n                </Grid>\r\n\r\n                {!!snackbar && (\r\n            <Snackbar\r\n            open\r\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n            onClose={handleCloseSnackbar}\r\n            autoHideDuration={6000}\r\n            >\r\n            <Alert {...snackbar} onClose={handleCloseSnackbar} />\r\n            </Snackbar>\r\n        )}\r\n                <h3> </h3>\r\n            </Box>\r\n\r\n\r\n        );\r\n\r\n    \r\n\r\n}","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\AddPurchase.js",["729","730","731","732","733","734","735","736","737","738","739","740","741","742","743","744","745"],[],"\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\"; \r\nimport { StoreApi } from '../API/StoreApi';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Utils } from '../ServiceObjects/Utils';\r\nimport { useEffect } from 'react';\r\nimport React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport FormDialog from './FormDialog';\r\nimport { PoliciesApi } from '../API/PoliciesApi';\r\nimport ControlledRadioButtonsGroup from './ControlledRadioButtonsGroup';\r\n\r\n\r\nexport default function AddPurchase() {\r\n    const {id} = useParams();\r\n    const store_id =id;\r\n\r\n    //fields\r\n\r\n    const add_simple_purchase_rule_for_store_fields=[\"Rule Name\"];\r\n    const add_complex_and_policy_rule_fields=[\"Rule Name\"];\r\n    const add_complex_or_policy_rule_fields=[\"Rule Name\"];\r\n   \r\n    //API \r\n    const policiesApi = new PoliciesApi();\r\n    const storeApi = new StoreApi();\r\n\r\n    // list of categories, Predicts, discounts\r\n\r\n    const [purchases,setPurchases] =React.useState([]);\r\n    const [predicts,setPredicts] =React.useState([]);\r\n    const get_purchases_predict_lists = async () =>\r\n    {\r\n        const response = await policiesApi.send_predicts(store_id);\r\n        if (!response.was_exception)\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'success' });\r\n            setPredicts(response.value);\r\n        }\r\n        else\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'error' });\r\n\r\n        }\r\n        const response_purchases = await policiesApi.get_purchase_policy(store_id);\r\n        if (!response_purchases.was_exception)\r\n        {\r\n            setSnackbar({ children: response_purchases.message, severity: 'success' });\r\n                setPurchases(response_purchases.value);\r\n        }\r\n        else\r\n        {\r\n            setSnackbar({ children: response_purchases.message, severity: 'error' });\r\n\r\n        }\r\n    }\r\n    useEffect(()=>{get_purchases_predict_lists()}, []);  \r\n\r\n    const [predictChosen, setPredictChosen] = React.useState(null);\r\n    const [discountChosen, setDiscounChosen] = React.useState(null);\r\n    const [categoryChosen, setCategoryChosen] = React.useState(null);\r\n    const save_predict = (perdict) =>{\r\n        console.log(perdict);\r\n        setPredictChosen(perdict);\r\n    }  \r\n    const save_discount_rule = (discount_rule) =>{\r\n        console.log(discount_rule);\r\n        setDiscounChosen(discount_rule);\r\n    }  \r\n    const save_category = (category) =>{\r\n        console.log(category);\r\n        setCategoryChosen(category);\r\n    }\r\n\r\n    const [checked, setChecked] = React.useState(true);\r\n    const [ruleName, setRuleName] = React.useState(undefined);\r\n    \r\n    const handleChange = (event) => {setChecked(event.target.checked)};\r\n    \r\n    \r\n    \r\n    \r\n\r\n\r\n    //------------- complex and----------------------\r\n    const [policyChosenAnd1, setPolicyChosenAnd1] = React.useState(null);\r\n    const [policyChosenAnd2, setPolicyChosenAnd2] = React.useState(null);\r\n\r\n    const save_policyAnd1 = (policy) =>{\r\n        console.log(policy);\r\n        setPolicyChosenAnd1(policy);\r\n    }\r\n    const save_policyAnd2 = (policy) =>{\r\n        console.log(policy);\r\n        setPolicyChosenAnd2(policy);\r\n    }\r\n    //------------- complex or----------------------\r\n\r\n    const [policyChosenOr1, setPolicyChosenOr1] = React.useState(null);\r\n    const [policyChosenOr2, setPolicyChosenOr2] = React.useState(null);\r\n\r\n    const save_policyOr1 = (policy) =>{\r\n        console.log(policy);\r\n        setPolicyChosenOr1(policy);\r\n    }\r\n    const save_policyOr2 = (policy) =>{\r\n        console.log(policy);\r\n        setPolicyChosenOr2(policy);\r\n    }\r\n\r\n   \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    const [option, setOption] = React.useState(\"Simple\");\r\n    \r\n    \r\n    const handleCloseSnackbar = () => setSnackbar(null);\r\n    const handleInputChange = event => {\r\n        const name = event.target.name\r\n        const value = event.target.value;\r\n        console.log(name);\r\n        console.log(value);\r\n        setOption(value.toString()); };\r\n    \r\n    const [snackbar, setSnackbar] = React.useState(null);\r\n    const hadleSubmit = async () => {}\r\n\r\n\r\n\r\n    // add_simple_purchase_rule(PredictName,  NameOfRule,  store_id){\r\n    // add_and_purchase_rule( left,  right,  store_id,  NameOfrule){\r\n    // add_or_purchase_rule( left,  right,  store_id,  NameOfrule){\r\n\r\n    //Functions To Server\r\n    const add_simple_purchase_rule = async (values) => {\r\n        const rule_name = values[0];\r\n        if (Utils.check_rule_name(rule_name) == 0)\r\n        {\r\n            setSnackbar({ children: \"Illegal Rule Name\", severity: 'error' });\r\n            return;\r\n        }\r\n        \r\n        const response = await policiesApi.add_simple_purchase_rule(predictChosen, rule_name, store_id); \r\n        if (!response.was_exception)\r\n        {\r\n            window.location.reload();\r\n            setSnackbar({ children: response.message, severity: 'success' });\r\n        }\r\n        else\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'error' });\r\n        }\r\n\r\n    }\r\n    const add_and_purchase_rule = async (values) => {\r\n        const rule_name = values[0];\r\n        if (Utils.check_rule_name(rule_name) == 0)\r\n        {\r\n            setSnackbar({ children: \"Illegal Rule Name\", severity: 'error' });\r\n            return;\r\n        }\r\n    \r\n        const response = await policiesApi.add_and_purchase_rule(policyChosenAnd1, policyChosenAnd2, store_id, rule_name); \r\n        if (!response.was_exception)\r\n        {\r\n            window.location.reload();\r\n            setSnackbar({ children: response.message, severity: 'success' });\r\n        }\r\n        else\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'error' });\r\n        }\r\n    }\r\n    const add_or_purchase_rule = async (values) => {\r\n        const rule_name = values[0];\r\n        if (Utils.check_rule_name(rule_name) == 0)\r\n        {\r\n            setSnackbar({ children: \"Illegal Rule Name\", severity: 'error' });\r\n            return;\r\n        }\r\n        const response = await policiesApi.add_or_purchase_rule(policyChosenOr1, policyChosenOr2,store_id, rule_name); \r\n        if (!response.was_exception)\r\n        {\r\n            window.location.reload();\r\n            setSnackbar({ children: response.message, severity: 'success' });\r\n        }\r\n        else\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'error' });\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <>\r\n\r\n            <Box sx={{ flexGrow: 1 }}>\r\n\r\n            <h1 class=\"Header\" align=\"center\">\r\n                            </h1>\r\n            <h2 class=\"Header\" align=\"center\">\r\n            Add Purchase Rule\r\n                            </h2>\r\n                            <h5 class=\"Header\" align=\"center\">\r\n                            Select Type Of Purchase Rule\r\n                            </h5>\r\n                            \r\n            </Box>\r\n            \r\n            <Grid container spacing={3} justifyContent=\"center\" alignItems=\"center\" paddingTop={8}> \r\n\r\n                <Grid item>\r\n                    <select name=\"option\"  onChange={handleInputChange} required>\r\n                        <option value=\"Simple\">Simple</option>\r\n                        <option value=\"Complex And\">Complex And</option>\r\n                        <option value=\"Complex Or\">Complex Or</option>\r\n\r\n              \r\n                    </select>\r\n                 \r\n\r\n\r\n                    \r\n                </Grid>\r\n                <Grid item>\r\n                    {option ===\"Simple\"  ? <ControlledRadioButtonsGroup list={predicts} name=\"Predicts\" save={save_predict}></ControlledRadioButtonsGroup> : null}\r\n                    {option ===\"Complex And\"  ? <ControlledRadioButtonsGroup list={purchases} name=\"Purchases\" save={save_policyAnd1}></ControlledRadioButtonsGroup> : null}\r\n                    {option ===\"Complex Or\"  ? <ControlledRadioButtonsGroup list={purchases} name=\"Purchases\" save={save_policyOr1}></ControlledRadioButtonsGroup> : null}\r\n                    \r\n                </Grid>\r\n                <Grid item>\r\n                    {option ===\"Complex And\"  ?<ControlledRadioButtonsGroup list={purchases} name=\"Purchases\" save={save_policyAnd2}></ControlledRadioButtonsGroup>: null}\r\n                    {option ===\"Complex Or\"  ?<ControlledRadioButtonsGroup list={purchases} name=\"Purchases\" save={save_policyOr2}></ControlledRadioButtonsGroup>: null}\r\n                    \r\n\r\n                </Grid>\r\n                \r\n         \r\n                <Grid item>\r\n                </Grid>\r\n                <Grid item>\r\n\r\n                </Grid>\r\n                <Grid item>\r\n                    \r\n                    {option == \"Simple\"  ? <FormDialog fields={add_simple_purchase_rule_for_store_fields} getValues={add_simple_purchase_rule} name=\"Add Simple Purchase Rule\"></FormDialog>: null}\r\n                    {option == \"Complex And\" && policyChosenAnd1!==null && policyChosenAnd2!==null ? <FormDialog fields={add_complex_and_policy_rule_fields} getValues={add_and_purchase_rule} name=\"Add Complex And Purchase Rule\"></FormDialog> : null}\r\n                    {option == \"Complex Or\" && policyChosenOr1!==null && policyChosenOr2!==null ? <FormDialog fields={add_complex_or_policy_rule_fields} getValues={add_or_purchase_rule} name=\"Add Complex Or Purchase Rule\"></FormDialog> : null}\r\n                   \r\n                       \r\n                    </Grid>\r\n\r\n                \r\n            </Grid>\r\n            \r\n            \r\n            \r\n            \r\n            \r\n            {!!snackbar && (\r\n            <Snackbar\r\n            open\r\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n            onClose={handleCloseSnackbar}\r\n            autoHideDuration={6000}\r\n            >\r\n            <Alert {...snackbar} onClose={handleCloseSnackbar} />\r\n            </Snackbar>\r\n            \r\n        )}\r\n                   \r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\AdminViewStorePurchaseHistory.js",["746","747","748","749","750","751","752","753","754","755"],[],"import * as React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport List from '@mui/material/List';\r\nimport { styled } from '@mui/material/styles';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Button from '@mui/material/Button';\r\nimport Divider from '@mui/material/Divider';\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\"; \r\nimport { StoreApi } from '../API/StoreApi';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Utils } from '../ServiceObjects/Utils';\r\nimport { useEffect } from 'react';\r\nimport { AdminApi } from '../API/AdminApi';\r\nimport Box from '@mui/material/Box';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\n\r\nconst Demo = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.background.paper,\r\n}));\r\n\r\nexport default function AdminViewStorePurchaseHistory() {\r\n\r\n    const [snackbar, setSnackbar] = React.useState(null);\r\n    const handleCloseSnackbar = () => setSnackbar(null);\r\n    const {id} = useParams();\r\n    const [purchaseHistory, setPurchaseHistory] = React.useState([]);\r\n    useEffect(()=>{admin_view_store_purchases_history()}, []);\r\n    const adminApi = new AdminApi();\r\n    const admin_view_store_purchases_history = async () =>{\r\n        // const response = await adminApi.admin_view_store_purchases_history(id);\r\n        // if(!response.was_exception)\r\n        // {\r\n        //     setSnackbar({ children: response.message, severity: 'success' });\r\n        //     console.log(response.value);\r\n        //     setPurchaseHistory(response.value);\r\n        // }\r\n        // else{\r\n        //     setSnackbar({ children: response.message, severity: 'error' });\r\n\r\n        // }\r\n    }\r\n    return (\r\n        <>\r\n        <Grid container spacing={3} justifyContent=\"center\" alignItems=\"center\" paddingTop={10}>\r\n            <h3 align=\"center\">Purchase History - Store {id}</h3>      \r\n            </Grid>\r\n\r\n            <Box position='center' align='center'>\r\n                    <Grid position='center' row-spacing={3}>\r\n                  \r\n\r\n                        <Grid position='center' align='center'>\r\n\r\n                            <Demo>\r\n                                <List>\r\n                                    {purchaseHistory.length!==0 ? purchaseHistory.map((staf) => (\r\n                                            <ListItem>\r\n                                                <ListItemAvatar>\r\n                                                    <Avatar>\r\n                                                        <PersonIcon />\r\n                                                    </Avatar>\r\n                                                </ListItemAvatar>\r\n                                                <ListItemText\r\n                                                    primary={\"ffff\"}\r\n                                                    secondary={\"fffffff\"}\r\n                                                // primary='fsdf'\r\n                                                />\r\n                                            </ListItem>\r\n\r\n                                        )) : <h3 style={{ color: 'red' }}>No Purchase History</h3>\r\n\r\n\r\n\r\n\r\n                                    }\r\n                                </List>\r\n                            </Demo>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            {!!snackbar && (\r\n            <Snackbar\r\n            open\r\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n            onClose={handleCloseSnackbar}\r\n            autoHideDuration={6000}\r\n            >\r\n            <Alert {...snackbar} onClose={handleCloseSnackbar} />\r\n            </Snackbar>\r\n        )}\r\n        </>\r\n    );\r\n}","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\ViewRules.js",["756","757","758","759","760","761","762","763","764"],[],"import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport { styled } from '@mui/material/styles';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport { useParams } from 'react-router-dom';\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\"; \r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport List from '@mui/material/List';\r\nimport BasicTable from './BasicTable';\r\nimport CollapsibleTable from './CollapsibleTable';\r\nconst Demo = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.background.paper,\r\n}));\r\n\r\n\r\nexport default function ViewRules({ }) {\r\n    const [snackbar, setSnackbar] = React.useState(null);\r\n    const handleCloseSnackbar = () => setSnackbar(null);\r\n  \r\n\r\n  return (\r\n    <div>\r\n           \r\n    <Box position='center' align='center'>\r\n            <Grid position='center' row-spacing={3}>\r\n                <Grid item>\r\n                    <h3 class=\"Header\" align=\"center\">\r\n                        Store Policies Rules\r\n                    </h3>\r\n                </Grid>\r\n\r\n                <Grid position='center' align='center'>\r\n\r\n                    <Demo>\r\n                        <List>\r\n                            {\r\n                                // <BasicTable></BasicTable>\r\n                                <CollapsibleTable></CollapsibleTable>\r\n                            }\r\n                        </List>\r\n                    </Demo>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n        {!!snackbar && (\r\n            <Snackbar\r\n            open\r\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n            onClose={handleCloseSnackbar}\r\n            autoHideDuration={6000}\r\n            >\r\n            <Alert {...snackbar} onClose={handleCloseSnackbar} />\r\n            </Snackbar>\r\n        )}\r\n    </div>\r\n  );\r\n}\r\n// }","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\CreatePredict.js",["765","766","767","768","769","770","771","772","773","774","775","776","777","778","779","780","781","782","783","784","785","786","787","788","789","790","791","792","793","794","795","796","797","798","799"],[],"\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\"; \r\nimport { StoreApi } from '../API/StoreApi';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Utils } from '../ServiceObjects/Utils';\r\nimport { useEffect } from 'react';\r\nimport React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport { PoliciesApi } from '../API/PoliciesApi';\r\nimport ControlledRadioButtonsGroup from './ControlledRadioButtonsGroup';\r\nimport StoreProductsTable from './StoreProductsTable';\r\nimport AddPredictFormDialog from './AddPredictFormDialog';\r\n\r\nexport default function CreatePredict() {\r\n    const {id} = useParams();\r\n    const store_id =id;\r\n    const add_predict_for_category_fields =[\"Rule Name\"];\r\n    const add_predict_for_time_fields =[\"Rule Name\"];\r\n    const add_predict_for_quantity_fields =[\"Rule Name\", \"Quantity\"];\r\n    const add_predict_for_product_fields =[\"Rule Name\",\"Product ID\"];\r\n    const add_predict_for_price_fields =[\"Rule Name\", \"Price\"];\r\n    const add_predict_for_age_fields =[\"Rule Name\", \"Age\"];\r\n\r\n\r\n\r\n\r\n\r\n    //API \r\n    const policiesApi = new PoliciesApi();\r\n    const storeApi = new StoreApi();\r\n\r\n    // list of categories, Predicts, discounts\r\n\r\n    const [categories,setCategories ] =React.useState([\"car1\", \"cat2\", \"cat3\"]);\r\n    const get_categories_of_stores = async () =>\r\n    {\r\n        const response = await storeApi.get_all_categories(store_id);\r\n        if (!response.was_exception)\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'success' });\r\n            if(response.value.length !== 0)\r\n                setCategories(response.value);\r\n        }\r\n        else\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'error' });\r\n\r\n        }\r\n    }\r\n    \r\n    useEffect(()=>{get_categories_of_stores()}, []);\r\n\r\n\r\n    const [categoryChosen, setCategoryChosen] = React.useState(null);\r\n    const save_category = (category) =>{\r\n        console.log(category);\r\n        setCategoryChosen(category);\r\n    }\r\n\r\n    const [checked, setChecked] = React.useState(true);\r\n    const [ruleName, setRuleName] = React.useState(undefined);\r\n    \r\n    const handleChange = (event) => {setChecked(event.target.checked)};\r\n    \r\n    \r\n    \r\n    const [option, setOption] = React.useState(\"Category\");\r\n    \r\n    \r\n    const handleCloseSnackbar = () => setSnackbar(null);\r\n    const handleInputChange = event => {\r\n        const name = event.target.name\r\n        const value = event.target.value;\r\n        console.log(name);\r\n        console.log(value);\r\n        setOption(value.toString());  };\r\n\r\n    const [snackbar, setSnackbar] = React.useState(null);\r\n    const hadleSubmit = async () => {}\r\n\r\n\r\n    //Functions To Server\r\n    //    add_predict(store_id,catgorey,product_id,above,equql,num,price,quantity,age,time,year,month,day,name){\r\n    const add_predict_for_category = async(values) => {\r\n        console.log(values);\r\n        const rule_name = values[0];\r\n        const inside = values[1];\r\n        console.log(inside);\r\n        if (Utils.check_rule_name(rule_name) == 0)\r\n        {\r\n            setSnackbar({ children: \"Illegal Rule Name\", severity: 'error' });\r\n            \r\n            return;\r\n        }\r\n        \r\n        const response = await policiesApi.add_predict(store_id,categoryChosen, -1, 0, inside, 0, 0, 0, 0, 0, 0, 0, 0, rule_name )\r\n        if (!response.was_exception)\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'success' });\r\n            window.location.reload();\r\n        }\r\n        else\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'error' });\r\n        }\r\n    }\r\n    const add_predict_for_time = async(values) => {\r\n        console.log(values);\r\n        const rule_name = values[0];\r\n        const date = values[1].split('-');\r\n        console.log(date);\r\n        const year = date[0];\r\n        const month = date[1];\r\n        const day = date[2];\r\n        const inside = values[2];\r\n        console.log(inside);\r\n        if (Utils.check_rule_name(rule_name) == 0)\r\n        {\r\n            setSnackbar({ children: \"Illegal Rule Name\", severity: 'error' });\r\n            return;\r\n        }\r\n        console.log(parseInt(year));\r\n        console.log(parseInt(month));\r\n        console.log(parseInt(day));\r\n        const response = await policiesApi.add_predict(store_id,\"\", -1, 0, inside, 0, 0, 0, 0, 1,parseInt(year) ,parseInt(month) ,parseInt(day) , rule_name )\r\n        if (!response.was_exception)\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'success' });\r\n            window.location.reload();\r\n        }\r\n        else\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'error' });\r\n        }\r\n    }\r\n    const add_predict_for_product = async(values) => {\r\n        const rule_name = values[0];\r\n        const product_id = values[1];\r\n        const inside = values[2];\r\n        console.log(inside);\r\n        if (Utils.check_rule_name(rule_name) == 0)\r\n        {\r\n            setSnackbar({ children: \"Illegal Rule Name\", severity: 'error' });\r\n            return;\r\n        }//TODO: chek product id with products list\r\n        if (Utils.check_all_digits(product_id)==0 || Utils.check_range(parseInt(product_id)) == 0)\r\n        {\r\n            setSnackbar({ children: \"Illegal Range\", severity: 'error' });\r\n            return;\r\n        }\r\n        const response = await policiesApi.add_predict(store_id,\"\", product_id, 0, inside, 0, 0, 0, 0, 0, 0, 0, 0, rule_name )\r\n        if (!response.was_exception)\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'success' });\r\n            window.location.reload();\r\n        }\r\n        else\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'error' });\r\n        }\r\n    }\r\n\r\n\r\n    //range:\r\n    // 1-> Above\r\n    // 0-> Equal\r\n    // 2-> Below\r\n\r\n//add_predict(store_id,catgorey,product_id,above,equql,num,price,quantity,age,time,year,month,day,name){\r\n\r\n    const add_predict_for_quantity = async(values) => {\r\n        console.log(values);\r\n        const rule_name = values[0];\r\n        const value=values[1];\r\n        const range = values[2];\r\n        if (Utils.check_rule_name(rule_name) == 0)\r\n        {\r\n            setSnackbar({ children: \"Illegal Rule Name\", severity: 'error' });\r\n            return;\r\n        }\r\n        if (Utils.check_all_digits(value)==0 || Utils.check_range(parseInt(value)) == 0)\r\n        {\r\n            setSnackbar({ children: \"Illegal Range\", severity: 'error' });\r\n            return;\r\n        }\r\n        if(range !== 0 && range!==1 && range!==2)\r\n        {\r\n            return;\r\n        }\r\n        let response;\r\n        if(range==0)\r\n        {\r\n            response = await policiesApi.add_predict(store_id,\"\", -1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, rule_name )\r\n            if(!response.was_exception)\r\n            {\r\n                setSnackbar({ children: response.message, severity: 'success' });\r\n                window.location.reload();\r\n\r\n            }\r\n            else\r\n            {\r\n                setSnackbar({ children: response.message, severity: 'error' });\r\n\r\n            }\r\n        }\r\n        else if(range==1)\r\n        {\r\n            response = await policiesApi.add_predict(store_id,\"\", -1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, rule_name );\r\n            if(!response.was_exception)\r\n            {\r\n                setSnackbar({ children: response.message, severity: 'success' });\r\n                window.location.reload();\r\n\r\n            }\r\n            else\r\n            {\r\n                setSnackbar({ children: response.message, severity: 'error' });\r\n\r\n            }\r\n        }\r\n        else if(range==2)\r\n        {\r\n            response = await policiesApi.add_predict(store_id,\"\", -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, rule_name );\r\n            if(!response.was_exception)\r\n            {\r\n                setSnackbar({ children: response.message, severity: 'success' });\r\n                window.location.reload();\r\n\r\n            }\r\n            else\r\n            {\r\n                setSnackbar({ children: response.message, severity: 'error' });\r\n\r\n            }\r\n        }\r\n        if (!response.was_exception)\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'success' });\r\n        }\r\n        else\r\n        {\r\n            setSnackbar({ children: response.message, severity: 'error' });\r\n        }\r\n    }\r\n\r\n    const add_predict_for_price = async(values) => {\r\n        console.log(values);\r\n        const rule_name = values[0];\r\n        const value=values[1];\r\n        const range = values[2];\r\n        if (Utils.check_rule_name(rule_name) == 0)\r\n        {\r\n            setSnackbar({ children: \"Illegal Rule Name\", severity: 'error' });\r\n            return;\r\n        }\r\n        if (Utils.check_all_digits(value)==0 || Utils.check_range(parseInt(value)) == 0)\r\n        {\r\n            setSnackbar({ children: \"Illegal Range\", severity: 'error' });\r\n            return;\r\n        }\r\n        if(range !== 0 && range!==1 && range!==2)\r\n        {\r\n            return;\r\n        }\r\n        let response;\r\n        if(range==0)\r\n        {\r\n            response = await policiesApi.add_predict(store_id,\"\", -1, 0, 1, value, 1, 0, 0, 0, 0, 0, 0, rule_name );\r\n            if(!response.was_exception)\r\n            {\r\n                setSnackbar({ children: response.message, severity: 'success' });\r\n                window.location.reload();\r\n\r\n            }\r\n            else\r\n            {\r\n                setSnackbar({ children: response.message, severity: 'error' });\r\n\r\n            }\r\n        }\r\n        else if(range==1)\r\n        {\r\n            response = await policiesApi.add_predict(store_id,\"\", -1, 1, 0, value, 1, 0, 0, 0, 0, 0, 0, rule_name );\r\n            if(!response.was_exception)\r\n            {\r\n                setSnackbar({ children: response.message, severity: 'success' });\r\n                window.location.reload();\r\n\r\n            }\r\n            else\r\n            {\r\n                setSnackbar({ children: response.message, severity: 'error' });\r\n\r\n            }\r\n        }\r\n        else if(range==2)\r\n        {\r\n            response = await policiesApi.add_predict(store_id,\"\", -1, 0, 0, value, 1, 0, 0, 0, 0, 0, 0, rule_name );\r\n            if(!response.was_exception)\r\n            {\r\n                setSnackbar({ children: response.message, severity: 'success' });\r\n                window.location.reload();\r\n\r\n            }\r\n            else\r\n            {\r\n                setSnackbar({ children: response.message, severity: 'error' });\r\n\r\n            }\r\n        }\r\n       \r\n    }\r\n\r\n    const add_predict_for_age= async(values) => {\r\n        console.log(values);\r\n        const rule_name = values[0];\r\n        const age=values[1];//age\r\n        const range = values[2];\r\n        if (Utils.check_rule_name(rule_name) == 0)\r\n        {\r\n            setSnackbar({ children: \"Illegal Rule Name\", severity: 'error' });\r\n            return;\r\n        }\r\n        if (Utils.check_all_digits(age)==0 || Utils.check_range(parseInt(age)) == 0)\r\n        {\r\n            setSnackbar({ children: \"Illegal Range\", severity: 'error' });\r\n            return;\r\n        }\r\n        if(range !== 0 && range!==1 && range!==2)\r\n        {\r\n            return;\r\n        }\r\n        let response;\r\n        if(range==0)\r\n        {\r\n            response = await policiesApi.add_predict(store_id,\"\", -1, 0, 1, age, 0, 0, 1, 0, 0, 0, 0, rule_name );\r\n            if(!response.was_exception)\r\n            {\r\n                setSnackbar({ children: response.message, severity: 'success' });\r\n                window.location.reload();\r\n\r\n            }\r\n            else\r\n            {\r\n                setSnackbar({ children: response.message, severity: 'error' });\r\n\r\n            }\r\n        }\r\n        else if(range==1)\r\n        {\r\n            response = await policiesApi.add_predict(store_id,\"\", -1, 1, 0, age, 0, 0, 1, 0, 0, 0, 0, rule_name );\r\n            if(!response.was_exception)\r\n            {\r\n                setSnackbar({ children: response.message, severity: 'success' });\r\n                window.location.reload();\r\n\r\n            }\r\n            else\r\n            {\r\n                setSnackbar({ children: response.message, severity: 'error' });\r\n\r\n            }\r\n        }\r\n        else if(range==2)\r\n        {\r\n            response = await policiesApi.add_predict(store_id,\"\", -1, 0, 0, age, 0, 0, 1, 0, 0, 0, 0, rule_name );\r\n            if(!response.was_exception)\r\n            {\r\n                setSnackbar({ children: response.message, severity: 'success' });\r\n                window.location.reload();\r\n\r\n            }\r\n            else\r\n            {\r\n                setSnackbar({ children: response.message, severity: 'error' });\r\n\r\n            }\r\n        }\r\n        \r\n    }\r\n    \r\n    \r\n    return (\r\n        <>\r\n\r\n            <Box sx={{ flexGrow: 1 }}>\r\n\r\n            <h1 class=\"Header\" align=\"center\">\r\n                            </h1>\r\n            <h2 class=\"Header\" align=\"center\">\r\n            Create Predict\r\n                            </h2>\r\n                            <h5 class=\"Header\" align=\"center\">\r\n                            Select Type Of Predict\r\n                            </h5>\r\n            </Box>\r\n            \r\n            <Grid container spacing={3} justifyContent=\"center\" alignItems=\"center\">\r\n\r\n                <Grid item>\r\n                <select name=\"option\"  onChange={handleInputChange} required>\r\n                        <option value=\"Category\">Category</option>\r\n                        <option value=\"Age\">Age</option>\r\n                        <option value=\"Product\">Product</option>\r\n                        <option value=\"Price\">Price</option>\r\n                        <option value=\"Quantity\">Quantity</option>\r\n                        <option value=\"Time\">Time</option>\r\n\r\n              \r\n                    </select>\r\n                    \r\n\r\n\r\n                    \r\n                </Grid>\r\n                <Grid item>\r\n                   \r\n                </Grid>\r\n                <Grid item>\r\n                    \r\n\r\n                </Grid>\r\n                \r\n         \r\n                <Grid item>\r\n                {option ===\"Category\"  ? <ControlledRadioButtonsGroup list={categories} name=\"Categories\" save={save_category}></ControlledRadioButtonsGroup> : null}  \r\n                \r\n                </Grid>\r\n                <Grid item>\r\n\r\n                </Grid>\r\n                <Grid item>\r\n                    \r\n                    {option == \"Category\" && categoryChosen!==null ? <AddPredictFormDialog fields={add_predict_for_category_fields} head={\"Please Choose Inside/Outside the Category\"} option1={\"Inside\"} option2={\"Outside\"} getValues={add_predict_for_category} name={\"Add Predict For Category\"}></AddPredictFormDialog>: null}\r\n                    {option == \"Time\" ? <AddPredictFormDialog fields={add_predict_for_time_fields} head={\"Please Choose Include/Uninclude the Time\"} option1={\"Include\"} option2={\"Uninclude\"} getValues={add_predict_for_time} name={\"Add Predict For Time\"} time={1}></AddPredictFormDialog>: null}\r\n                    {option == \"Product\"  ? <AddPredictFormDialog fields={add_predict_for_product_fields} head={\"Please Choose Include/Uninclude the Product\"} option1={\"Include\"} option2={\"Uninclude\"} getValues={add_predict_for_product} name={\"Add Predict For Product\"}></AddPredictFormDialog>: null}\r\n                    {option == \"Quantity\" ? <AddPredictFormDialog fields={add_predict_for_quantity_fields} head={\"Please Choose Range Of Quantity\"} option1={\"Above\"} option2={\"Equal\"} option3={\"Below\"} getValues={add_predict_for_quantity} name={\"Add Predict For Quantity\"}></AddPredictFormDialog>: null}\r\n                    {option == \"Price\" ? <AddPredictFormDialog fields={add_predict_for_price_fields} head={\"Please Choose Range Of Price\"} option1={\"Above\"} option2={\"Equal\"} option3={\"Below\"} getValues={add_predict_for_price} name={\"Add Predict For Price\"}></AddPredictFormDialog>: null}\r\n                    {option == \"Age\" ? <AddPredictFormDialog fields={add_predict_for_age_fields} head={\"Please Choose Range Of Age\"} option1={\"Above\"} option2={\"Equal\"} option3={\"Below\"} getValues={add_predict_for_age} name={\"Add Predict For Age\"}></AddPredictFormDialog>: null}\r\n                  \r\n                       \r\n                    </Grid>\r\n\r\n                \r\n            </Grid>\r\n            \r\n            \r\n            \r\n            \r\n            \r\n            {!!snackbar && (\r\n            <Snackbar\r\n            open\r\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n            onClose={handleCloseSnackbar}\r\n            autoHideDuration={6000}\r\n            >\r\n            <Alert {...snackbar} onClose={handleCloseSnackbar} />\r\n            </Snackbar>\r\n            \r\n        )}\r\n                     {option ===\"Product\"  ? <StoreProductsTable\r\n            store_id={store_id}\r\n          ></StoreProductsTable> : null} \r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\study\\Market1\\TradingSystem\\Client\\src\\API\\Response.js",[],[],"C:\\study\\Market1\\TradingSystem\\Client\\src\\ServiceObjects\\StoreReview.js",[],[],"C:\\study\\Market1\\TradingSystem\\Client\\src\\API\\ApiPaths.js",[],[],"C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\FormDialog.js",[],[],"C:\\study\\Market1\\TradingSystem\\Client\\src\\ServiceObjects\\Utils.js",["800","801","802","803","804","805","806","807","808","809","810","811"],[],"\r\n\r\n\r\nexport class Utils  {\r\n    // Boolean -> return 0 for False, 1 for True\r\n    \r\n\r\n    // ----------------------------------- Payment -------------------------------------------------------\r\n    \r\n    static check_date(month, year)\r\n    {\r\n        console.log(month);\r\n        console.log(year);\r\n        const month_int = parseInt(month);\r\n        const year_int = parseInt(year);\r\n        if (year_int<2022)\r\n        {\r\n            return 0;\r\n        }\r\n        if (year_int === 2022 && month_int < 7)\r\n        {\r\n            return 0;\r\n        }\r\n        return 1;\r\n    }\r\n    \r\n    static check_credit_number(credit_number){   \r\n        if (this.check_all_digits(credit_number) == 0)\r\n        {\r\n            return 0;\r\n        }\r\n        if (credit_number.length != 16)\r\n        {\r\n            return 0;\r\n        }\r\n        return 1;\r\n    }\r\n    static check_holder(name){   \r\n        if (/^[a-zA-Z ]+$/.test(name))\r\n        {\r\n            return 1;\r\n        }\r\n        return 0;\r\n        // if(this.check_not_empty(name)==0)\r\n        // {\r\n        //     console.log(name);\r\n        //     return 0;\r\n        // }\r\n        // return 1;\r\n    }\r\n    static check_id(id){   \r\n        if (this.check_all_digits(id) == 0)\r\n        {\r\n            return 0;\r\n        }\r\n        if (id.length != 9)\r\n        {\r\n            return 0;\r\n        }\r\n        return 1;\r\n    }\r\n    static check_ccv(ccv){    \r\n        if (this.check_all_digits(ccv) == 0)\r\n        {\r\n            return 0;\r\n        }\r\n        if (ccv.length != 3)\r\n        {\r\n            return 0;\r\n        }\r\n        return 1;\r\n    }\r\n    static check_month(month){ \r\n        \r\n        console.log(\"gggg\");\r\n        if(month>12 || month <1)\r\n        {\r\n            return 0;\r\n        }  \r\n        return 1;\r\n    }\r\n    static check_year_later(year){  \r\n        const curr_year = new Date().getFullYear();\r\n        console.log(year)\r\n        if (year <2022)\r\n        {\r\n            return 0;\r\n        } \r\n        return 1;\r\n    }\r\n\r\n    // ----------------------------------- General -------------------------------------------------------\r\n    static check_all_english_letters(str){   \r\n        var letters = /^[A-Za-z]+$/;\r\n        if(str.match(letters))\r\n        {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n    \r\n    static check_not_empty(str){   \r\n        if (str.length == 0)\r\n        {\r\n            return 0;\r\n        }\r\n        return 1;\r\n    }\r\n    static check_all_digits(str){   \r\n        if (/^[0-9]+$/.test(str))\r\n        {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n    static check_email(email){  \r\n        if(! String(email).toLowerCase().match( /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/))\r\n        {\r\n            return 0;\r\n        }\r\n        return 1;\r\n    }\r\n\r\n    // ----------------------------------- Show Bids -------------------------------------------------------\r\n\r\n\r\n    static check_yes_no(str)\r\n    {\r\n        return 1;\r\n    }\r\n\r\n\r\n    // ----------------------------------- Discount Policy -------------------------------------------------------\r\n    static check_rule_name(rule_name)\r\n    {\r\n        return this.check_not_empty(rule_name);\r\n    }\r\n    static check_precent(number)\r\n    {\r\n        console.log(number);\r\n        if(number >= 0 && number <= 1){\r\n            console.log(1);\r\n            return 1;\r\n        }\r\n        else {\r\n            console.log(0);\r\n            return 0;\r\n        }\r\n    }\r\n    // ----------------------------------- Crete Predict -------------------------------------------------------\r\n    static check_range(range)\r\n    {\r\n        if (range>0)\r\n            return 1;\r\n        else\r\n        {\r\n            return 0; \r\n        }\r\n    }\r\n    \r\n   \r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // ----------------------------------- Birth Date -------------------------------------------------------\r\n    \r\n    \r\n    static check_yaer_earlier(){   \r\n        return 1;\r\n    }\r\n    \r\n    \r\n    // ----------------------------------- Suuply -------------------------------------------------------\r\n    \r\n    static check_address(address){   \r\n        if (this.check_not_empty(address) == 0)\r\n        {\r\n            return 0;\r\n        }\r\n        return 1;\r\n    }\r\n    static check_city(city){ \r\n        if (this.check_not_empty(city) == 0)\r\n        {\r\n            return 0;\r\n        }\r\n        return 1;  \r\n    }\r\n    static check_country(country){   \r\n        if (this.check_not_empty(country) == 0)\r\n        {\r\n            return 0;\r\n        }\r\n        return 1;\r\n    }\r\n    static check_zip(zip){   \r\n        if (this.check_all_digits(zip) == 0 )\r\n        {\r\n            return 0;\r\n        }\r\n        return 1;\r\n    }\r\n   \r\n}\r\n","C:\\study\\Market1\\TradingSystem\\Client\\src\\API\\StoreApi.js",["812","813","814","815"],[],"// import axios from \"axios\";\r\nimport {CONNECTION_ERROR, CATCH, FIND_STORE_INFORMATION, OPEN_STORE, RATE_STORE, SEND_QUESTION_TO_STORE,\r\n     ADD_PRODUCT_TO_STORE, DELETE_PRODUCT_FROM_CART, SET_STORE_PURCHASE_POLICY,\r\n      SET_STORE_DISCOUNT_POLICY, SET_STORE_PURCHASE_RULES, ADD_OWNER, DELETE_OWNER, \r\n      ADD_MANAGER, DELETE_MANAGER, CLOSE_STORE_TEMPORARILY, OPEN_CLOSE_STORE,\r\n      VIEW_STORE_MANAGEMENT_INFORMATION, MANAGER_ANSWER_QUESTION, VIEW_STORE_PURCHASES_HISTORY, \r\n      MANAGER_VIEW_STORE_QUESTIONS, EDIT_MANAGER_PERMISSIONS, \r\n      GET_PRODUCTS_BY_STORE_ID,GET_ALL_STORES, DELETE_PRODUCT_FROM_STORE,\r\n      GET_PERMISSIONS, ADD_BID, MANAGER_ANSWER_BID, VIEW_BIDS_STATUS,VIEW_APPOINTMENTS_STATUS,MANAGER_ANSWER_APPOINTMENT, GET_ALL_CATEGORIES} from \"./ApiPaths\";\r\nimport { Response } from \"./Response\";\r\nimport { Store } from \"../ServiceObjects/Store\";\r\nimport { Product } from \"../ServiceObjects/Product\";\r\n// const instance = axios.create(\r\n//     {withCredentials : true}\r\n// );\r\nvar qs = require('qs');\r\nconst instance = require('axios');\r\nconst SESSION_ID=JSON.parse(sessionStorage.getItem(\"session_id\"));\r\n\r\nexport class StoreApi {\r\n    find_store_information(store_id) {\r\n        console.log(\"in find store information -> dtore id = \"+store_id);\r\n        return instance.get(FIND_STORE_INFORMATION,\r\n            {\r\n                params:{ store_id : store_id,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))}\r\n            })\r\n            .then(res => {\r\n                let response = res.data;\r\n                let store_info = new Store(response.value);\r\n                return Response.create(store_info, false, response.message);\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n    open_store(store_name)    {\r\n        return instance.get(OPEN_STORE,\r\n            {\r\n                params:{store_name : store_name,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))}\r\n                \r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n    \r\n    rate_store(store_id, rate) {\r\n        return instance.get(RATE_STORE,\r\n            {\r\n                params:{store_id: store_id,\r\n                    rate : rate,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))}\r\n                \r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n\r\n    send_question_to_store(store_id, question) {\r\n        return instance.get(SEND_QUESTION_TO_STORE,\r\n            {\r\n                params:{store_id: store_id,\r\n                    question : question,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))}\r\n                \r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n    \r\n    add_product_to_store(store_id, quantity,name, price, category, key_words) {\r\n        return instance.get(ADD_PRODUCT_TO_STORE,\r\n            {\r\n                params:{store_id : store_id,\r\n                    quantity : quantity,\r\n                    name : name,\r\n                    price : price,\r\n                    category : category,\r\n                    key_words : key_words,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))}\r\n                \r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n    delete_product_from_store(product_id, store_id) {\r\n        return instance.get(DELETE_PRODUCT_FROM_STORE,\r\n            {\r\n                params:{product_id : product_id,\r\n                    store_id : store_id,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))}\r\n                \r\n                \r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n\r\n    set_store_purchase_policy(store_id, policy) {\r\n        return instance.get(SET_STORE_PURCHASE_POLICY,\r\n            {\r\n                params:{store_id : store_id,\r\n                    policy : policy,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))}\r\n                \r\n                \r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n\r\n    set_store_discount_policy(store_id, policy) {\r\n        return instance.get(SET_STORE_DISCOUNT_POLICY,\r\n            {\r\n                params:{store_id : store_id,\r\n                    policy : policy,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))}\r\n                \r\n                \r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n    set_store_purchase_rules(store_id, rule) {\r\n        return instance.get(SET_STORE_PURCHASE_RULES,\r\n            {\r\n                params:{store_id : store_id,\r\n                    rule : rule,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))}\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n\r\n    add_owner(user_email_to_appoint, store_id)  {\r\n        return instance.get(ADD_OWNER,\r\n            {\r\n                params:{user_email_to_appoint : user_email_to_appoint,\r\n                    store_id : store_id,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))}\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n   \r\n    delete_owner(user_email_to_delete_appointment, store_id)  {\r\n        return instance.get(DELETE_OWNER,\r\n            {\r\n                params:{user_email_to_delete_appointment : user_email_to_delete_appointment,\r\n                    store_id : store_id,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))}\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n\r\n       \r\n    add_manager(user_email_to_appoint, store_id)  {\r\n        return instance.get(ADD_MANAGER,\r\n            {\r\n                params:{user_email_to_appoint : user_email_to_appoint,\r\n                    store_id : store_id,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))}\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n\r\n\r\n    delete_manager(user_email_to_delete_appointment, store_id)  {\r\n            return instance.get(DELETE_MANAGER,\r\n                {\r\n                    params:{user_email_to_delete_appointment : user_email_to_delete_appointment,\r\n                        store_id : store_id,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))}\r\n                })\r\n                .then(res => {\r\n                    return new Response(res.data)\r\n                })\r\n                .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n        }\r\n    close_store_temporarily(store_id){\r\n        return instance.get(CLOSE_STORE_TEMPORARILY,\r\n            {\r\n                params:{store_id : store_id,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))}\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n    open_close_store(store_id){\r\n        return instance.get(OPEN_CLOSE_STORE,\r\n            {\r\n                params:{store_id : store_id,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))}\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n    view_store_management_information(store_id){\r\n        return instance.get(VIEW_STORE_MANAGEMENT_INFORMATION,\r\n            {\r\n                params:{store_id : store_id,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))}\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data) //value is string answer\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n    manager_view_store_questions(store_id){ // value is list of strings\r\n        return instance.get(MANAGER_VIEW_STORE_QUESTIONS,\r\n            {\r\n                params:{store_id : store_id,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))}\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n    manager_answer_question(store_id, question_id, answer){\r\n        return instance.get(MANAGER_ANSWER_QUESTION,\r\n            {\r\n                params:{store_id : store_id,\r\n                    question_id : question_id,\r\n                    managerAnswer : answer,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))}\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n    view_store_purchases_history(store_id){ // value is string of the purchases history\r\n        return instance.get(VIEW_STORE_PURCHASES_HISTORY,\r\n            {\r\n                params:{store_id : store_id,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))}\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n    edit_manager_permissions(manager_email, store_id, permissions){\r\n        console.log(\"permissions\");\r\n        console.log(permissions);\r\n        console.log(\"permissions\");\r\n        \r\n        \r\n        return instance.get(EDIT_MANAGER_PERMISSIONS,\r\n            {\r\n                params:{manager_email : manager_email,\r\n                    store_id : store_id,\r\n                    permissions : permissions,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))}\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n    get_products_by_store_id(store_id){\r\n        return instance.get(GET_PRODUCTS_BY_STORE_ID,\r\n            {\r\n                params:{store_id : store_id,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))}\r\n            })\r\n            .then(res => {\r\n                let response = res.data;\r\n                //traverse the products and create product for each element on the list\r\n                //create response with the list of products\r\n                const arr = [];\r\n                res.data.value.map(p => arr.push(new Product(p)));\r\n                return Response.create(arr,res.data.wasException,res.data.message);\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n    get_all_stores(){\r\n        return instance.get(GET_ALL_STORES,\r\n            {\r\n                params:{session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))}\r\n            })\r\n            .then(res => {\r\n                let response = res.data;\r\n                //traverse the products and create product for each element on the list\r\n                //create response with the list of products\r\n                const arr = [];\r\n                response.value.map(s => arr.push(new Store(s)));\r\n                return Response.create(arr,response.wasException,response.message);\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n    get_permissions(manager_email, store_id ){\r\n        return instance.get(GET_PERMISSIONS,\r\n            {\r\n                params:{\r\n                    manager_email : manager_email,\r\n                    store_id : store_id,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))}\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n        }\r\n    add_bid(storeID, productID, quantity, offer_price ){\r\n    return instance.get(ADD_BID,\r\n        {\r\n            params:{\r\n                storeID : storeID,\r\n                productID : productID,\r\n                quantity : quantity,\r\n                offer_price : offer_price,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))\r\n            }\r\n        })\r\n        .then(res => {\r\n            return new Response(res.data)\r\n        })\r\n        .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n    manager_answer_bid(storeID, bidID, manager_answer, negotiation_price ){\r\n        return instance.get(MANAGER_ANSWER_BID,\r\n            {\r\n                params:{\r\n                    storeID : storeID,\r\n                    bidID : bidID,\r\n                    manager_answer : manager_answer,\r\n                    negotiation_price : negotiation_price,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))\r\n                    }\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n        }\r\n\r\n    view_appointments_status(storeID ){\r\n        return instance.get(VIEW_APPOINTMENTS_STATUS,\r\n            {\r\n                params:{\r\n                    storeID : storeID,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))\r\n                 }\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n        }\r\n\r\n    manager_answer_appointment(storeID, manager_answer, candidate_email){\r\n        return instance.get(MANAGER_ANSWER_APPOINTMENT,\r\n            {\r\n                params:{\r\n                    storeID : storeID,\r\n                    manager_answer : manager_answer,\r\n                    candidate_email : candidate_email,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))\r\n                    }\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n        }\r\n    \r\n     view_bids_status(storeID ){\r\n            return instance.get(VIEW_BIDS_STATUS,\r\n                {\r\n                    params:{\r\n                        storeID : storeID,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))\r\n                     }\r\n                })\r\n                .then(res => {\r\n                    return new Response(res.data)\r\n                })\r\n                .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n            }\r\n        get_all_categories(store_id ){\r\n            return instance.get(GET_ALL_CATEGORIES,\r\n                {\r\n                    params:{\r\n                        store_id : store_id,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))\r\n                     }\r\n                })\r\n                .then(res => {\r\n                    return new Response(res.data)\r\n                })\r\n                .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n            }\r\n\r\n    \r\n}\r\n\r\n",[],"C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\ControlledRadioButtonsGroup.js",["816"],[],"import * as React from 'react';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport { useEffect } from 'react';\r\n\r\nexport default function ControlledRadioButtonsGroup({list, name, save}) {\r\n    // console.log(list);\r\n  const [value, setValue] = React.useState('female');\r\n  const handleChange = (event) => {\r\n    console.log(event.target.value);\r\n    setValue(event.target.value);\r\n    save(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <FormControl>\r\n      <FormLabel id=\"demo-controlled-radio-buttons-group\" >{name}</FormLabel>\r\n      <RadioGroup\r\n        aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n        name=\"controlled-radio-buttons-group\"\r\n        value={value}\r\n        onChange={handleChange}\r\n      >\r\n          {list.length!==0 ? list.map(a=> <FormControlLabel value={a} control={<Radio />} label={a}/>) : <h8 style={{ color: 'red' }}> No {name} To This Store</h8>}\r\n         \r\n      </RadioGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n","C:\\study\\Market1\\TradingSystem\\Client\\src\\API\\AdminApi.js",["817"],[],"// import axios from \"axios\";\r\nimport { sortAndDeduplicateDiagnostics } from \"typescript\";\r\nimport { CONNECTION_ERROR, CATCH,SEND_QUESTION_TO_ADMIN, CLOSE_STORE_PERMANENTLY, REMOVE_USER, ADMIN_VIEW_USERS_QUESTION ,\r\n     ADMIN_ANSWER_USERS_QUESTION, ADMIN_VIEW_STORE_PURCHASES_HISTORY, ADMIN_VIEW_USER_PURCHASES_HISTORY, GET_MARKET_STATS} from \"./ApiPaths\";\r\nimport { Response } from \"./Response\";\r\nimport {Statistics} from \"../ServiceObjects/Statistics\"\r\n// const instance = axios.create(\r\n//     {withCredentials : true}\r\n// );\r\nconst instance = require('axios');\r\n\r\n\r\nexport class AdminApi {\r\n\r\n\r\n\r\n    send_question_to_admin(question) {\r\n        return instance.get(SEND_QUESTION_TO_ADMIN,\r\n            {\r\n                params:{question : question,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))}\r\n                \r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n    close_store_permanently(store_id){\r\n        return instance.get(CLOSE_STORE_PERMANENTLY,\r\n            {\r\n                params:{ store_id : store_id,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))}\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n    remove_user(email){\r\n        return instance.get(REMOVE_USER,\r\n            {\r\n                params:{email : email,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))}\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n\r\n    admin_view_users_questions() {\r\n        return instance.get(ADMIN_VIEW_USERS_QUESTION,\r\n        {\r\n            params:{session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))}\r\n        })\r\n            .then(res => {\r\n                return new Response(res.data);\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n   \r\n    admin_answer_user_question(question_id, adminAnswer){\r\n        return instance.get(ADMIN_ANSWER_USERS_QUESTION,\r\n            {\r\n                params:{question_id : question_id,\r\n                    adminAnswer : adminAnswer,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))}\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n\r\n    admin_view_store_purchases_history(store_id){\r\n        return instance.get(ADMIN_VIEW_STORE_PURCHASES_HISTORY,\r\n            {\r\n                params:{store_id : store_id,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))}\r\n                \r\n                \r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n\r\n    admin_view_user_purchases_history(user_email){\r\n        return instance.get(ADMIN_VIEW_USER_PURCHASES_HISTORY,\r\n            {\r\n                params:{user_email : user_email,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))}\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n    \r\n    get_market_stats() {\r\n        return instance.get(GET_MARKET_STATS,{parmas:{session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))}})\r\n            .then(res => {\r\n                const stats = new Statistics(res.data.value);\r\n                return Response.create(stats, res.data.was_exception, res.data.message);\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n}","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\SocketProvider.js",["818","819","820","821"],[],"import {useState} from \"react\";\r\nimport SockJS from 'sockjs-client';\r\n\r\nimport Stomp from 'stompjs';\r\nimport { EMPLOYEE_BASE_REST_API_URL } from \"../API/ApiPaths\";\r\nimport { ConnectApi } from \"../API/ConnectApi\";\r\n\r\nexport default function SocketProvider(props) {\r\n    const connectApi = new ConnectApi();\r\n    const setMessage =\"\";\r\n    console.log(props);\r\n    console.log(props.save_notification);\r\n    function createSocket(userEmail) {\r\n        const sock = new SockJS('http://localhost:8080/chat');\r\n\r\n        console.log(sock);\r\n        \r\n        let stompClient = Stomp.over(sock);\r\n        console.log(stompClient);\r\n        sock.addEventListener(\"open\", event => {\r\n            console.log(\"Open Web Socket !\");\r\n            \r\n            \r\n        })\r\n        sock.addEventListener(\"close\", event => {\r\n            console.log(\" Web Socket Closed!\");\r\n            \r\n            \r\n        })\r\n        sock.addEventListener(\"message\", event => {\r\n            let tempi = event.data.split(\"s1:\");\r\n            // console.log(tempi+\"\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n            if (tempi.length != 1)\r\n            {\r\n                console.log(tempi[1]+\"\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n                alert(\"New Notification: \"+tempi[1]);\r\n                connectApi.save_notifications(tempi[1]);\r\n                props(tempi[1]);\r\n            }\r\n            else{\r\n                console.log(\"message of connect\\n\\n\\n\\n\\n\\n\\n\\n\");\r\n            }\r\n\r\n            console.log(event);\r\n        })\r\n\r\n\r\n\r\n\r\n        stompClient.connect({email:userEmail}, function (frame) {\r\n            console.log(\"connect 1\");\r\n            stompClient.send('/start', {});\r\n            console.log(\"connect 2\");\r\n            stompClient.subscribe(`/topic/${userEmail}`, function (greeting) {\r\n                //you can execute any function here\r\n                console.log(\"try to subsribe...\");\r\n                console.log(greeting.body);\r\n                setTimeout(() => {\r\n                    //setMessage(null)\r\n                    console.log(\"cleared\")\r\n                }, 3000)\r\n            });\r\n            connectApi.get_notifications(userEmail);\r\n\r\n        });\r\n    }\r\n\r\n    return { createSocket }\r\n}\r\n\r\n","C:\\study\\Market1\\TradingSystem\\Client\\src\\API\\CartApi.js",["822"],[],"C:\\study\\Market1\\TradingSystem\\Client\\src\\API\\PoliciesApi.js",["823","824","825"],[],"// import axios from \"axios\";\r\nimport {CONNECTION_ERROR, CATCH, ADD_SIMPLE_CATEGORY_DISCOUNT, ADD_SIMPLE_PRODUCT_DISCOUNT, ADD_SIMPLE_STORE_DISCOUNT, \r\n    ADD_COMPLEX_DISCOUNT, ADD_COMPLEX_AND_DISCOUNT, ADD_COMPLEX_OR_DISCOUNT, \r\n    ADD_COMPLEX_MAX_DISCOUNT, ADD_COMPLEX_PLUS_DISCOUNT, \r\n    ADD_COMPLEX_XOR_DISCOUNT, SEND_PREDDICTS, GET_DISCOUNT_POLICY,\r\n     ADD_SIMPLE_PURCHASE, ADD_AND_SIMPLE_PURCHASE, \r\n     ADD_OR_SIMPLE_PURCHASE, ADD_PREDICT, GET_PURCHASE_POLICY, \r\n     REMOVEֹֹֹ_DISCOUNTֹ_RULE, REMOVE_PURCHASE_RULE, REMOVE_PREDICT\r\n    } from \"./ApiPaths\";\r\nimport { Response } from \"./Response\";\r\nimport { Store } from \"../ServiceObjects/Store\";\r\nimport { Product } from \"../ServiceObjects/Product\";\r\n// const instance = axios.create(\r\n//     {withCredentials : true}\r\n// );\r\nvar qs = require('qs');\r\nconst instance = require('axios');\r\n\r\n\r\nexport class PoliciesApi {\r\n\r\n    //---------------------------------Getters-------------------------------------       \r\n\r\n    add_predict(store_id,catgorey,product_id,above,equql,num,price,quantity,age,time,year,month,day,name){\r\n        return instance.get(ADD_PREDICT,\r\n            {\r\n                params:{\r\n                    store_id : store_id,\r\n                    catgorey : catgorey,\r\n                    product_id : product_id,\r\n                    above : above,\r\n                    equql : equql,\r\n                    num : num,\r\n                    price : price,\r\n                    quantity : quantity,\r\n                    age : age,\r\n                    time : time,\r\n                    year : year,\r\n                    month : month,\r\n                    day : day,\r\n                    name : name,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))\r\n                    }\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n        } \r\n        \r\n    get_purchase_policy(store_id){\r\n        return instance.get(GET_PURCHASE_POLICY,\r\n            {\r\n                params:{\r\n                    store_id : store_id,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))\r\n\r\n                    }\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n        }  \r\n    send_predicts(store_id){\r\n        return instance.get(SEND_PREDDICTS,\r\n            {\r\n                params:{\r\n                    store_id : store_id,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))\r\n\r\n                    }\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n        } \r\n    get_discount_policy(store_id){\r\n        return instance.get(GET_DISCOUNT_POLICY,\r\n            {\r\n                params:{\r\n                    store_id : store_id,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))\r\n                    }\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n        }\r\n\r\n\r\n\r\n\r\n    //---------------------------------Discount Rules-------------------------------------\r\n\r\n    add_complex_discount_rule(store_id, nameOfPredict, nameOfComponent, nameOfRule){\r\n        return instance.get(ADD_COMPLEX_DISCOUNT,\r\n            {\r\n                params:{\r\n                    store_id : store_id,\r\n                    nameOfPredict : nameOfPredict,\r\n                    nameOfComponent : nameOfComponent,\r\n                    nameOfRule : nameOfRule,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))\r\n                    }\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n        }\r\n    add_simple_categorey_discount_rule(store_id, nameOfCategory, percent, nameOfRule){\r\n        return instance.get(ADD_SIMPLE_CATEGORY_DISCOUNT,\r\n            {\r\n                params:{\r\n                    store_id : store_id,\r\n                    nameOfCategory : nameOfCategory,\r\n                    percent : percent,\r\n                    nameOfRule : nameOfRule,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))\r\n                 }\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n        }\r\n    add_simple_product_discount_rule(store_id, id, percent, nameOfrule){\r\n    return instance.get(ADD_SIMPLE_PRODUCT_DISCOUNT,\r\n        {\r\n            params:{\r\n                store_id : store_id,\r\n                id : id,\r\n                percent : percent,\r\n                nameOfrule : nameOfrule,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))\r\n                }\r\n        })\r\n        .then(res => {\r\n            return new Response(res.data)\r\n        })\r\n        .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n\r\n    add_simple_store_discount_rule(store_id, percent, nameOfRule){\r\n    return instance.get(ADD_SIMPLE_STORE_DISCOUNT,\r\n        {\r\n            params:{\r\n                store_id : store_id,\r\n                percent : percent,\r\n                nameOfRule : nameOfRule,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))\r\n                }\r\n        })\r\n        .then(res => {\r\n            return new Response(res.data)\r\n        })\r\n        .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n\r\n    \r\n    add_and_discount_rule(left, right, store_id,  NameOfRule ){\r\n    return instance.get(ADD_COMPLEX_AND_DISCOUNT,\r\n        {\r\n            params:{\r\n                left : left,\r\n                right : right,\r\n                store_id : store_id,\r\n                NameOfRule : NameOfRule,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))\r\n                }\r\n        })\r\n        .then(res => {\r\n            return new Response(res.data)\r\n        })\r\n        .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n\r\n    add_or_discount_rule(left, right, store_id,  NameOfRule ){\r\n    return instance.get(ADD_COMPLEX_OR_DISCOUNT,\r\n        {\r\n            params:{\r\n                left : left,\r\n                right : right,\r\n                store_id : store_id,\r\n                NameOfRule : NameOfRule,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))\r\n                }\r\n        })\r\n        .then(res => {\r\n            return new Response(res.data)\r\n        })\r\n        .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n\r\n\r\n    add_max_discount_rule(left, right, store_id,  NameOfRule ){\r\n    return instance.get(ADD_COMPLEX_MAX_DISCOUNT,\r\n        {\r\n            params:{\r\n                left : left,\r\n                right : right,\r\n                store_id : store_id,\r\n                NameOfRule : NameOfRule,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))\r\n                }\r\n        })\r\n        .then(res => {\r\n            return new Response(res.data)\r\n        })\r\n        .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n\r\n    add_plus_discount_rule(left, right, store_id,  NameOfRule ){\r\n    return instance.get(ADD_COMPLEX_PLUS_DISCOUNT,\r\n        {\r\n            params:{\r\n                left : left,\r\n                right : right,\r\n                store_id : store_id,\r\n                NameOfRule : NameOfRule,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))\r\n                }\r\n        })\r\n        .then(res => {\r\n            return new Response(res.data)\r\n        })\r\n        .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n\r\n\r\n    add_xor_discount_rule(left, right, store_id,  NameOfRule ){\r\n        return instance.get(ADD_COMPLEX_XOR_DISCOUNT,\r\n            {\r\n                params:{\r\n                    left : left,\r\n                    right : right,\r\n                    store_id : store_id,\r\n                    NameOfRule : NameOfRule,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))\r\n                    }\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n        }\r\n\r\n      \r\n\r\n\r\n    //---------------------------------Purchase rules-------------------------------------\r\n\r\n    add_simple_purchase_rule(PredictName,  NameOfRule,  store_id){\r\n    return instance.get(ADD_SIMPLE_PURCHASE,\r\n        {\r\n            params:{\r\n                PredictName : PredictName,\r\n                NameOfRule : NameOfRule,\r\n                store_id : store_id,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))\r\n                }\r\n        })\r\n        .then(res => {\r\n            return new Response(res.data)\r\n        })\r\n        .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n\r\n    add_and_purchase_rule( left,  right,  store_id,  NameOfrule){\r\n        return instance.get(ADD_AND_SIMPLE_PURCHASE,\r\n            {\r\n                params:{\r\n                    left : left,\r\n                    right : right,\r\n                    store_id : store_id,\r\n                    NameOfrule : NameOfrule,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))\r\n                    }\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n        }\r\n    add_or_purchase_rule( left,  right,  store_id,  NameOfrule){\r\n    return instance.get(ADD_OR_SIMPLE_PURCHASE,\r\n        {\r\n            params:{\r\n                left : left,\r\n                right : right,\r\n                store_id : store_id,\r\n                NameOfrule : NameOfrule,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))\r\n                }\r\n        })\r\n        .then(res => {\r\n            return new Response(res.data)\r\n        })\r\n        .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n    \r\n\r\n\r\n        //Remove\r\n    remove_predict(store_id, predict_name){\r\n        return instance.get(REMOVE_PREDICT,\r\n            {\r\n                params:{\r\n                    store_id : store_id,\r\n                    predict_name : predict_name,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))\r\n                    }\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n        }\r\n    remove_discount_rule(store_id, name){\r\n        return instance.get(REMOVEֹֹֹ_DISCOUNTֹ_RULE,\r\n            {\r\n                params:{\r\n                    store_id : store_id,\r\n                    name : name,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))\r\n                    }\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n        } \r\n    remove_purchase_rule(store_id, name){\r\n        return instance.get(REMOVE_PURCHASE_RULE,\r\n            {\r\n                params:{\r\n                    store_id : store_id,\r\n                    name : name, session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))\r\n                    }\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n        }\r\n\r\n\r\n        \r\n            \r\n          \r\n    \r\n           \r\n    \r\n    \r\n           \r\n        \r\n\r\n   \r\n\r\n       \r\n   \r\n\r\n   \r\n}\r\n\r\n","C:\\study\\Market1\\TradingSystem\\Client\\src\\API\\ProductApi.js",["826","827","828"],[],"// import axios from \"axios\";\r\nimport {CONNECTION_ERROR, CATCH, EMPLOYEE_BASE_REST_API_URL,  FIND_PRODUCT_INFORMATION, FIND_PRODUCTS_BY_NAME, FIND_PRODUCTS_BY_CATEGORY,FIND_PRODUCTS_BY_KEYWORDS \r\n    ,ADD_PRODUCT_TO_CART, EDIT_PRODUCT_QUANTITY_IN_CART,REMOVE_PRODUCT_FROM_CART, \r\n    ADD_PRODUCT_REVIEW, RATE_PRODUCT, EDIT_PRODUCT_NAME, EDIT_PRODUCT_PRICE, \r\n    EDIT_PRODUCT_CATEGORY, EDIT_PRODUCT_KEY_WORDS, LOGIN_PATH, EDIT_PRODUCT_QUANTITY} from \"./ApiPaths\";\r\nimport { Response } from \"./Response\";\r\nimport { Product } from \"../ServiceObjects/Product\";\r\n// const instance = axios.create(\r\n//     {withCredentials : true}\r\n// );\r\nconst instance = require('axios');\r\n\r\n\r\n\r\n\r\nexport class ProductApi {\r\n   \r\n    find_product_information(product_id, store_id) {\r\n        return instance.get(FIND_PRODUCT_INFORMATION, \r\n            {\r\n                params:{product_id: product_id,\r\n                    store_id: store_id, session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))}\r\n            })\r\n            .then(res => {\r\n                let response = res.data;\r\n                let product_info = new Product(response.value);\r\n                return Response.create(product_info, response.was_exception, response.message);\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n    find_products_by_name(product_name) {\r\n        console.log(\"product name = \"+product_name+\"\\n\\n\\n\");\r\n        return instance.get(FIND_PRODUCTS_BY_NAME,\r\n            {\r\n                params:{product_name: product_name, session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))}\r\n                \r\n            })\r\n            .then(res => {\r\n                let response = res.data;\r\n                //traverse the products and create product for each element on the list\r\n                //create response with the list of products\r\n                const arr = [];\r\n                res.data.value.map(p => arr.push(new Product(p)));\r\n                return Response.create(arr,res.data.was_exception,res.data.message);\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n\r\n    find_products_by_category(product_category) {\r\n        console.log(\"product category = \"+product_category+\"\\n\\n\\n\");\r\n        return instance.get(FIND_PRODUCTS_BY_CATEGORY,\r\n            {\r\n                params:{product_category: product_category, session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))}\r\n                \r\n            })\r\n            .then(res => {\r\n                //traverse the products and create product for each element on the list\r\n                //create response with the list of products\r\n                const arr = [];\r\n                res.data.value.map(p => arr.push(new Product(p)));\r\n                return Response.create(arr,res.data.was_exception,res.data.message);\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n    find_products_by_keywords(product_keywords) {\r\n        console.log(\"product keywords = \"+product_keywords+\"\\n\\n\\n\");\r\n        return instance.get(FIND_PRODUCTS_BY_KEYWORDS,\r\n            {\r\n                params:{product_keywords: product_keywords, session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))}\r\n                \r\n            })\r\n            .then(res => {\r\n                //traverse the products and create product for each element on the list\r\n                //create response with the list of products\r\n                const arr = [];\r\n                res.data.value.map(p => arr.push(new Product(p)));\r\n                return Response.create(arr,res.data.was_exception,res.data.message);\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n\r\n    add_product_to_cart(store_id, product_id, quantity) {\r\n        console.log(\"store id: \" + store_id)\r\n        console.log(\"product id:\" + product_id)\r\n        return instance.get(ADD_PRODUCT_TO_CART,\r\n            {\r\n                params:{store_id: store_id,\r\n                    product_id: product_id,\r\n                    quantity: quantity, session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))}\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n\r\n    edit_product_quantity_in_cart(store_id, product_id, quantity) {\r\n        return instance.get(EDIT_PRODUCT_QUANTITY_IN_CART,\r\n            {\r\n                params:{store_id: store_id,\r\n                    product_id: product_id,\r\n                    quantity: quantity, session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))}\r\n                \r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n\r\n    remove_product_from_cart(store_id, product_id) {\r\n        return instance.get(REMOVE_PRODUCT_FROM_CART,\r\n            {\r\n                params:{ store_id: store_id,\r\n                    product_id: product_id, session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))}\r\n               \r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n    \r\n\r\n    add_product_review(product_id, store_id, review) {\r\n        return instance.get(ADD_PRODUCT_REVIEW,\r\n            {\r\n                params:{  product_id: product_id,\r\n                    store_id: store_id,\r\n                    review : review, session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))}\r\n               \r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n\r\n    rate_product(product_id, store_id, rate) {\r\n        return instance.get(RATE_PRODUCT,\r\n            {\r\n                params:{ product_id: product_id,\r\n                    store_id: store_id,\r\n                    rate : rate, session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))}\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n\r\n    edit_product_name(product_id, store_id, name) {\r\n        return instance.get(EDIT_PRODUCT_NAME,\r\n            {\r\n                params:{product_id: product_id,\r\n                    store_id: store_id,\r\n                    name : name ,session_id:JSON.parse(sessionStorage.getItem(\"session_id\")),}\r\n                \r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n\r\n    edit_product_price(product_id, store_id, price) {\r\n        return instance.get(EDIT_PRODUCT_PRICE,\r\n            {\r\n                params:{product_id: product_id,\r\n                    store_id: store_id,\r\n                    price : price, session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))}\r\n                \r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n    edit_product_category(product_id, store_id, category) {\r\n        return instance.get(EDIT_PRODUCT_CATEGORY,\r\n            {\r\n                params:{product_id: product_id,\r\n                    store_id: store_id,\r\n                    category : category,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))}\r\n                \r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n    edit_product_key_words(product_id, store_id, key_words) {\r\n        return instance.get(EDIT_PRODUCT_KEY_WORDS,\r\n            {\r\n                params:{ product_id: product_id,\r\n                    store_id: store_id,\r\n                    key_words : key_words,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))}\r\n               \r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n    edit_product_quantity(product_id, store_id, quantity) {\r\n        return instance.get(EDIT_PRODUCT_QUANTITY,\r\n            {\r\n                params:{ product_id: product_id,\r\n                    store_id: store_id,\r\n                    quantity : quantity,session_id:JSON.parse(sessionStorage.getItem(\"session_id\"))}\r\n               \r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => Response.create(CATCH,true, CONNECTION_ERROR ));\r\n    }\r\n}","C:\\study\\Market1\\TradingSystem\\Client\\src\\ServiceObjects\\Supply.js",[],[],"C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\StoreProductsTable.js",[],[],"C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\Rating.js",["829"],[],"import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Rating from '@mui/material/Rating';\r\nimport Typography from '@mui/material/Typography';\r\nimport { RateReview } from '@mui/icons-material';\r\n\r\nexport default function BasicRating(to_rate, rating) {\r\n  const [value, setValue] = React.useState(2);\r\n  const RATE =\"Rate \";\r\n  \r\n  return (\r\n    <Box\r\n      sx={{\r\n        '& > legend': { mt: 2 },\r\n      }}\r\n    >\r\n      <Typography component=\"legend\"><div>{RATE+to_rate.to_rate}</div></Typography>\r\n      <Rating\r\n        name=\"simple-controlled\"\r\n        value={value}\r\n        onChange={(event, newValue) => {\r\n          setValue(newValue);\r\n          to_rate.rating(newValue);\r\n        }}\r\n      />\r\n    </Box>\r\n   \r\n  );\r\n}\r\n","C:\\study\\Market1\\TradingSystem\\Client\\src\\ServiceObjects\\Question.js",[],[],"C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\FormDialogPermissions.js",[],[],"C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\MenuListComposition.js",["830","831"],[],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    paper: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function MenuListComposition({ item1, item2, item3 }) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = React.useRef(null);\r\n\r\n    const handleToggle = () => {\r\n        setOpen((prevOpen) => !prevOpen);\r\n    };\r\n\r\n    const handleClose = (event) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    function handleListKeyDown(event) {\r\n        if (event.key === 'Tab') {\r\n            event.preventDefault();\r\n            setOpen(false);\r\n        }\r\n    }\r\n\r\n    // return focus to the button when we transitioned from !open -> open\r\n    const prevOpen = React.useRef(open);\r\n    React.useEffect(() => {\r\n        if (prevOpen.current === true && open === false) {\r\n            anchorRef.current.focus();\r\n        }\r\n\r\n        prevOpen.current = open;\r\n    }, [open]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n                <MenuList>\r\n                    <MenuItem>{ item1 }</MenuItem>\r\n                    <MenuItem>{item2}</MenuItem>\r\n                    <MenuItem>{item3}</MenuItem>\r\n                </MenuList>\r\n            </Paper>\r\n            <div>\r\n                <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n                    {({ TransitionProps, placement }) => (\r\n                        <Grow\r\n                            {...TransitionProps}\r\n                            style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n                        >\r\n                            <Paper>\r\n                                <ClickAwayListener onClickAway={handleClose}>\r\n                                    <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\r\n                                        <MenuItem onClick={() => {\r\n                                            console.info(\"I'm \" + item1 + \" button, add link.\");\r\n                                        }}>Open Store</MenuItem>\r\n                                        <MenuItem onClick={() => {\r\n                                            console.info(\"I'm \"+item2+\" button, add link.\");\r\n                                        }}>Send Complaint</MenuItem>\r\n                                        <MenuItem onClick={() => {\r\n                                            console.info(\"I'm \" + item3 + \" Operations button, add link.\");\r\n                                        }}>Admin Operations</MenuItem>\r\n                                    </MenuList>\r\n                                </ClickAwayListener>\r\n                            </Paper>\r\n                        </Grow>\r\n                    )}\r\n                </Popper>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\BasicTable.js",["832","833","834","835"],[],"import * as React from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport { useParams } from 'react-router-dom';\r\nimport { PoliciesApi } from '../API/PoliciesApi';\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\"; \r\nimport Grid from '@mui/material/Grid';\r\n\r\nfunction createData(left, right) {\r\n  return { left, right };\r\n}\r\n\r\n\r\nexport default function BasicTable({rowss}) {\r\n  console.log(rowss);\r\n  rowss.map(a=> console.log(a[0]+\" \"+a[1]));\r\nconst policiesApi = new PoliciesApi();\r\nconst {id} = useParams();\r\n//SnackBar\r\nconst [snackbar, setSnackbar] = React.useState(null);\r\nconst handleCloseSnackbar = () => setSnackbar(null);\r\n\r\n\r\n\r\n\r\nconst rows = [];\r\nrowss.map(row => \r\n  {\r\n    rows.push(createData(row[0], row[1]))\r\n});\r\n\r\nconsole.log(rows);\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow\r\n              key={row.left}\r\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n            >\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.left}\r\n              </TableCell>\r\n              {/* <TableCell align=\"right\">{row.left}</TableCell> */}\r\n              <TableCell align=\"right\">{row.right}</TableCell>\r\n              \r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      {!!snackbar && (\r\n        <Snackbar\r\n        open\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n        onClose={handleCloseSnackbar}\r\n        autoHideDuration={6000}\r\n        >\r\n        <Alert {...snackbar} onClose={handleCloseSnackbar} />\r\n        </Snackbar>\r\n    )}\r\n    </TableContainer>\r\n        \r\n  );\r\n}\r\n","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\StoreManagmentProductsTable.js",[],[],"C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\HomeProductsTable.js",["836","837","838","839","840","841"],[],"import * as React from \"react\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { ProductApi } from \"../API/ProductApi\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { StoreApi } from \"../API/StoreApi\";\r\nimport { Component } from \"react\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport AddShoppingCartOutlined from \"@mui/icons-material/AddShoppingCartOutlined\";\r\nimport Store from \"@mui/icons-material/Store\";\r\nimport MonetizationOn from \"@mui/icons-material/MonetizationOn\";\r\nimport FormDialog from './FormDialog';\r\nimport { Utils } from '../ServiceObjects/Utils';\r\n\r\n\r\n\r\nexport default class HomeProductsTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      store_id: this.props.store_id,\r\n      products: [],\r\n      snackbar: null,\r\n      items: [],\r\n      selected_item: [],\r\n      selected_row: [],\r\n      edited: null,\r\n      add_bid_fields:[\"Quantity\", \"Price\"],\r\n    };\r\n    this.productApi = new ProductApi();\r\n    this.storeApi = new StoreApi();\r\n    this.columns = [\r\n      { field: \"id\", headerName: \"ID\", width: 70 },\r\n      { field: \"name\", headerName: \"name\", width: 130 },\r\n      { field: \"category\", headerName: \"category\", width: 130 },\r\n      { field: \"price\", headerName: \"price\", type: \"double\", width: 90 },\r\n      {\r\n        field: \"quantity\",\r\n        headerName: \"quantity\",\r\n        type: \"number\",\r\n        width: 90,\r\n        editable: true,\r\n      },\r\n      { field: \"store\", headerName: \"store\", width: 90, hide: true },\r\n      { field: \"key_words\", headerName: \"key words\", width: 0, hide: true },\r\n      {\r\n        field: \"action\",\r\n        headerName: \"ADD TO CART\",\r\n        width: 75,\r\n        // Important: passing id from customers state so I can delete or edit each user\r\n        renderCell: (id) => (\r\n          <>\r\n            <IconButton\r\n              color=\"primary\"\r\n              aria-label=\"add to shopping cart\"\r\n              onClick={() => this.add_to_cart(id)}\r\n            >\r\n              <AddShoppingCartOutlined />\r\n            </IconButton>\r\n          </>\r\n        ),\r\n      },\r\n      {\r\n        field: \"action_store\",\r\n        headerName: \"VIEW STORE\",\r\n        width: 150,\r\n        // Important: passing id from customers state so I can delete or edit each user\r\n        renderCell: (id) => (\r\n          <>\r\n              \r\n             <Link to={{pathname:`StorePage/${this.state.items.find((i) => id.id === i.id).store}`}}   underline=\"hover\" >{   <IconButton\r\n              color=\"primary\"\r\n              aria-label=\"store\"\r\n            >\r\n              <Store />\r\n            </IconButton>}</Link> \r\n          </>\r\n        ),\r\n      },\r\n      \r\n      {\r\n        \r\n        field: \"add_bid\",\r\n        headerName: \"ADD BID\",\r\n        width: 150,\r\n        // Important: passing id from customers state so I can delete or edit each user\r\n        renderCell: (id) => (\r\n          <>\r\n            {!this.props.stores_managed.includes(this.state.items.find((i) => id.id === i.id).store) ?\r\n            <FormDialog fields={this.state.add_bid_fields} getValues={this.add_bid.bind(this)} params={[this.state.items.find((i) => id.id === i.id).store,id.id]} name={   <IconButton\r\n              color=\"primary\"\r\n              aria-label=\"store\"\r\n            >\r\n              <MonetizationOn />\r\n            </IconButton>}></FormDialog>: null}\r\n          </> \r\n        ),\r\n      } \r\n    ];\r\n  }\r\n  async add_bid(values)\r\n  {\r\n    const storeApi = new StoreApi();\r\n    const quantity = values[0];\r\n    const price = values[1];\r\n    const store_id = values[2];\r\n    const product_id = values[3];\r\n    if (quantity == undefined || Utils.check_not_empty(quantity)==0 || Utils.check_all_digits(quantity)==0)\r\n    {\r\n      this.setState({ snackbar: { children: \"Illegal quantity\", severity: \"error\" } });\r\n      return;\r\n    }\r\n    if (price == undefined || Utils.check_not_empty(price)==0 || Utils.check_all_digits(price)==0)\r\n    {\r\n      this.setState({ snackbar: { children: \"Illegal price\", severity: \"error\" } });\r\n      return;\r\n    }\r\n    console.log(values);\r\n    console.log(quantity);\r\n    console.log(price);\r\n    const response = await storeApi.add_bid(store_id, product_id, quantity, price);\r\n    if (!response.was_exception) {\r\n      this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n    }\r\n    else {\r\n      this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n\r\n    }\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let stores = await this.storeApi.get_all_stores();\r\n    console.log(\"stores = \" + stores.value);\r\n    let products_list = [];\r\n    stores.value.map((st) =>\r\n      st.inventory.map((p) =>\r\n        products_list.push({\r\n          id: p.product_id,\r\n          name: p.name,\r\n          category: p.category,\r\n          price: p.price,\r\n          quantity: 0,\r\n          store: p.store_id,\r\n          key_words: p.key_words,\r\n        })\r\n      )\r\n    );\r\n    console.log(this.props.stores_managed);\r\n    console.log(\"products = \"+products_list);\r\n    this.setState({\r\n      items: products_list,\r\n      products: products_list,\r\n      selected: undefined,\r\n    });\r\n  }\r\n\r\n  setSnackbar = (val) => {\r\n    this.setState({ snackbar: val });\r\n  };\r\n  setItems = (val) => {\r\n    this.setState({ items: val });\r\n  };\r\n  set_selected = (val) => {\r\n    this.setState({ selected_item: val });\r\n  };\r\n  set_row_selected = (val) => {\r\n    this.setState({ selected_row: val });\r\n  };\r\n  set_edited = (val) => {\r\n    this.setState({ edited: val });\r\n  };\r\n\r\n  get_store_id = async (id) => {\r\n    console.log(\"in go to store id\")\r\n    let selected = this.state.items.find((i) => id.id === i.id); // represents selected row\r\n    let selected_store_id = selected.store; // required store_id\r\n    return selected_store_id; \r\n  };\r\n\r\n  add_to_cart = async (id) => {\r\n    let selected = this.state.items.find((i) => id.id === i.id);\r\n    let response = await this.productApi.add_product_to_cart(\r\n      selected.store,\r\n      selected.id,\r\n      selected.quantity\r\n    );\r\n    if (response.was_exception)\r\n      this.setSnackbar({ children: response.message, severity: \"error\" });\r\n    else\r\n      this.setSnackbar({\r\n        children: \"item was added to cart\",\r\n        severity: \"success\",\r\n      });\r\n  };\r\n\r\n  handleCloseSnackbar = () => this.setSnackbar(null);\r\n\r\n  processRowUpdate = (newRow, oldRow) => {\r\n    if (newRow.quantity < 1) {\r\n      this.setSnackbar({\r\n        children: \"item quantity must be above 0\",\r\n        severity: \"error\",\r\n      });\r\n      return oldRow;\r\n    }\r\n    let new_list = this.state.items.filter((p) => p.id !== newRow.id);\r\n    new_list.push(newRow);\r\n    new_list.sort((a, b) => a.id - b.id);\r\n    this.setState({ items: new_list });\r\n    return newRow;\r\n  };\r\n\r\n  handleProcessRowUpdateError = (error) => {\r\n    this.setState({ snackbar: { children: error.message, severity: \"error\" } });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <main>\r\n        <div style={{ height: 400, width: \"100%\" }}>\r\n          <h1 style={{ color: \"white\" }}>\r\n            ---------------------------------------------------------\r\n          </h1>{\" \"}\r\n          <DataGrid\r\n            rows={this.state.items}\r\n            columns={this.columns}\r\n            editMode=\"row\"\r\n            //   checkboxSelection\r\n            onSelectionModelChange={(newSelectionModel) => {\r\n              this.set_row_selected(newSelectionModel);\r\n            }}\r\n            processRowUpdate={this.processRowUpdate}\r\n            onProcessRowUpdateError={this.handleProcessRowUpdateError}\r\n            experimentalFeatures={{ newEditingApi: true }}\r\n          ></DataGrid>\r\n          {!!this.state.snackbar && (\r\n            <Snackbar\r\n              open\r\n              anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n              onClose={this.handleCloseSnackbar}\r\n              autoHideDuration={6000}\r\n            >\r\n              <Alert\r\n                {...this.state.snackbar}\r\n                onClose={this.handleCloseSnackbar}\r\n              />\r\n            </Snackbar>\r\n          )}\r\n          {!!this.state.snackbar && (\r\n          <Snackbar\r\n            open\r\n            anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n            onClose={this.handleCloseSnackbar}\r\n            autoHideDuration={6000}\r\n          >\r\n            <Alert\r\n              {...this.state.snackbar}\r\n              onClose={this.handleCloseSnackbar}\r\n            />\r\n          </Snackbar>\r\n        )}\r\n\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n}","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\AllStoresTable.js",["842","843"],[],"import * as React from \"react\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { ProductApi } from \"../API/ProductApi\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { StoreApi } from \"../API/StoreApi\";\r\nimport { Component } from \"react\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport AddShoppingCartOutlined from \"@mui/icons-material/AddShoppingCartOutlined\";\r\nimport Store from \"@mui/icons-material/Store\";\r\nexport default class AllStoresTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      stores: [],\r\n      snackbar: null,\r\n      items: [],\r\n      selected_item: [],\r\n      selected_row: [],\r\n      edited: null,\r\n      snackbar: null,\r\n\r\n    };\r\n    this.productApi = new ProductApi();\r\n    this.storeApi = new StoreApi();\r\n    this.columns = [\r\n      { field: \"id\", headerName: \"ID\", width: 70 },\r\n      { field: \"name\", headerName: \"name\", width: 130 },\r\n      { field: \"founder\", headerName: \"Founder\", width: 150 },\r\n      { field: \"foundation_date\", headerName: \"Foundation Date\", width: 150 },\r\n      {\r\n        field: \"storeInformation\",\r\n        headerName: \"Store Information\",\r\n        width: 150,\r\n        // Important: passing id from customers state so I can delete or edit each user\r\n        renderCell: (id) => (\r\n          <>\r\n            \r\n              \r\n             <Link to={{pathname:`StorePage/${this.state.items.find((i) => id.id === i.id).id}`}}  underline=\"hover\" >{   <IconButton\r\n              color=\"primary\"\r\n              aria-label=\"store\"\r\n            >\r\n              <Store />\r\n            </IconButton>}</Link> \r\n          </>\r\n        ),\r\n      },\r\n     \r\n     \r\n     \r\n    ];\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const response = await this.storeApi.get_all_stores();\r\n    if (!response.was_exception)\r\n    {\r\n        this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n        let stores = response.value;\r\n        console.log(\"stores = \"+stores);\r\n        let stores_list=[]\r\n        stores.map((st) =>\r\n            stores_list.push({\r\n              id: st.store_id,\r\n              name: st.name,\r\n              founder: st.founder_email,\r\n              foundation_date:st.foundation_date\r\n            \r\n            \r\n            })\r\n        \r\n            );\r\n        this.setState({\r\n        items: stores_list,\r\n        stores: stores_list,\r\n        selected: undefined,\r\n        });\r\n\r\n    }\r\n    else{\r\n        this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n\r\n    }\r\n    \r\n  }\r\n\r\n  setSnackbar = (val) => {\r\n    this.setState({ snackbar: val });\r\n  };\r\n  setItems = (val) => {\r\n    this.setState({ items: val });\r\n  };\r\n  set_selected = (val) => {\r\n    this.setState({ selected_item: val });\r\n  };\r\n  set_row_selected = (val) => {\r\n    this.setState({ selected_row: val });\r\n  };\r\n  set_edited = (val) => {\r\n    this.setState({ edited: val });\r\n  };\r\n\r\n  get_store_id = async (id) => {\r\n    console.log(\"in go to store id\")\r\n    let selected = this.state.items.find((i) => id.id === i.id); // represents selected row\r\n    let selected_store_id = selected.store; // required store_id\r\n    return selected_store_id; \r\n  };\r\n\r\n  \r\n  handleCloseSnackbar = () => this.setSnackbar(null);\r\n\r\n  processRowUpdate = (newRow, oldRow) => {\r\n    if (newRow.quantity < 1) {\r\n      this.setSnackbar({\r\n        children: \"item quantity must be above 0\",\r\n        severity: \"error\",\r\n      });\r\n      return oldRow;\r\n    }\r\n    let new_list = this.state.items.filter((p) => p.id !== newRow.id);\r\n    new_list.push(newRow);\r\n    new_list.sort((a, b) => a.id - b.id);\r\n    this.setState({ items: new_list });\r\n    return newRow;\r\n  };\r\n\r\n  handleProcessRowUpdateError = (error) => {\r\n    this.setState({ snackbar: { children: error.message, severity: \"error\" } });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <main>\r\n        <div style={{ height: 400, width: \"100%\" }}>\r\n          <h1 style={{ color: \"white\" }}>\r\n            ---------------------------------------------------------\r\n          </h1>{\" \"}\r\n          <DataGrid\r\n            rows={this.state.items}\r\n            columns={this.columns}\r\n            editMode=\"row\"\r\n            //   checkboxSelection\r\n            onSelectionModelChange={(newSelectionModel) => {\r\n              this.set_row_selected(newSelectionModel);\r\n            }}\r\n            processRowUpdate={this.processRowUpdate}\r\n            onProcessRowUpdateError={this.handleProcessRowUpdateError}\r\n            experimentalFeatures={{ newEditingApi: true }}\r\n          ></DataGrid>\r\n\r\n\r\n         \r\n          {!!this.state.snackbar && (\r\n          <Snackbar\r\n            open\r\n            anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n            onClose={this.handleCloseSnackbar}\r\n            autoHideDuration={6000}\r\n          >\r\n            <Alert\r\n              {...this.state.snackbar}\r\n              onClose={this.handleCloseSnackbar}\r\n            />\r\n          </Snackbar>\r\n        )}\r\n\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n}","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\MyStoresTable.js",["844","845","846","847","848"],[],"import * as React from \"react\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { ProductApi } from \"../API/ProductApi\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { StoreApi } from \"../API/StoreApi\";\r\nimport { Component } from \"react\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport { Navigate } from 'react-router-dom'; \r\nimport Store from \"@mui/icons-material/Store\";\r\nimport { FaceRetouchingOffSharp } from \"@mui/icons-material\";\r\nimport { ConnectApi } from \"../API/ConnectApi\";\r\nexport default class MyStoresTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      snackbar: null,\r\n      selected_item: [],\r\n      selected_row: [],\r\n      edited: null,\r\n      my_stores:[],\r\n      stores:[],\r\n\r\n    };\r\n    this.productApi = new ProductApi();\r\n    this.storeApi = new StoreApi();\r\n    this.connectApi = new ConnectApi();\r\n    this.columns = [\r\n      { field: \"id\", headerName: \"ID\", width: 70 },\r\n      { field: \"name\", headerName: \"name\", width: 130 },\r\n      { field: \"founder\", headerName: \"Founder\", width: 150 },\r\n      { field: \"foundation_date\", headerName: \"Foundation Date\", width: 150 },\r\n      {\r\n        field: \"storeInformation\",\r\n        headerName: \"Store Information\",\r\n        width: 150,\r\n        // Important: passing id from customers state so I can delete or edit each user\r\n        renderCell: (id) => (\r\n          <>\r\n            {/* <IconButton\r\n              color=\"primary\"\r\n              aria-label=\"store\"\r\n              // onClick={() => this.go_to_store_page(id)}\r\n              onClick={() => this.go_to_store_page(id)}\r\n            >\r\n              <Store />\r\n            </IconButton> */}\r\n              \r\n             <Link to={{pathname:`StorePage/${id.id}`}}  underline=\"hover\" >{   <IconButton\r\n              color=\"primary\"\r\n              aria-label=\"store\"\r\n            >\r\n              <Store />\r\n            </IconButton>}</Link> \r\n          </>\r\n        ),\r\n      },\r\n     \r\n     \r\n     \r\n    ];\r\n    \r\n    \r\n    \r\n  }\r\n  async componentDidMount()\r\n  {\r\n    const my_stores = [];\r\n    let response = await this.connectApi.get_online_user();\r\n    if (!response.was_exception)\r\n    {\r\n      const user = response.value;\r\n      const store_list_ids = user.storesManaged; \r\n      // console.log(store_list_ids)\r\n      response = await this.storeApi.get_all_stores();\r\n      if (!response.was_exception)\r\n      {\r\n          this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n          let all_stores = response.value;\r\n          all_stores.map((st)=> \r\n          {\r\n            if (store_list_ids.includes(st.store_id))\r\n            {\r\n              // console.log(st)\r\n              my_stores.push(st);\r\n            }\r\n\r\n          }\r\n          )\r\n          console.log(my_stores);\r\n          this.setState({my_stores : my_stores})\r\n          console.log(this.state.my_stores);\r\n      }\r\n      else{\r\n          this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n      }\r\n\r\n    }\r\n    else{\r\n      this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n      return (<Navigate to=\"/\"/>)\r\n    }\r\n    console.log(my_stores); \r\n    let stores_list=[]\r\n    my_stores.map((st) =>{\r\n            stores_list.push({\r\n                id: st.store_id,\r\n                name: st.name,\r\n                founder: st.founder_email,\r\n                foundation_date:st.foundation_date         \r\n              })    \r\n    });\r\n    console.log(stores_list);\r\n    this.setState({\r\n    stores: stores_list,\r\n    selected: undefined,\r\n    });   \r\n    \r\n\r\n  }\r\n\r\n  async get_my_stores()\r\n  {\r\n    let response = await this.connectApi.get_online_user();\r\n    if (!response.was_exception)\r\n    {\r\n      const user = response.value\r\n      const store_list_ids = user.storesManaged; \r\n      // console.log(store_list_ids)\r\n      response = await this.storeApi.get_all_stores();\r\n      if (!response.was_exception)\r\n      {\r\n          this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n          let all_stores = response.value;\r\n          let my_stores = [];\r\n          all_stores.map((st)=> \r\n          {\r\n            if (store_list_ids.includes(st.store_id))\r\n            {\r\n              // console.log(st)\r\n              my_stores.push(st);\r\n            }\r\n\r\n          }\r\n          )\r\n          console.log(my_stores);\r\n          this.setState({my_stores : my_stores})\r\n          console.log(this.state.my_stores);\r\n      }\r\n      else{\r\n          this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n      }\r\n\r\n    }\r\n    else{\r\n      this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n      return (<Navigate to=\"/\"/>)\r\n    }\r\n    \r\n  }\r\n\r\n  async a() {\r\n    // this.get_my_stores();\r\n    console.log(this.state.my_stores); \r\n    let stores_list=[]\r\n    this.state.my_stores.map((st) =>{\r\n            stores_list.push({\r\n                id: st.store_id,\r\n                name: st.name,\r\n                founder: st.founder_email,\r\n                foundation_date:st.foundation_date         \r\n              })    \r\n    });\r\n    console.log(stores_list);\r\n    this.setState({\r\n    stores: stores_list,\r\n    selected: undefined,\r\n    });    \r\n  }\r\n\r\n  setSnackbar = (val) => {\r\n    this.setState({ snackbar: val });\r\n  };\r\n  set_selected = (val) => {\r\n    this.setState({ selected_item: val });\r\n  };\r\n  set_row_selected = (val) => {\r\n    this.setState({ selected_row: val });\r\n  };\r\n  set_edited = (val) => {\r\n    this.setState({ edited: val });\r\n  };\r\n\r\n  handleCloseSnackbar = () => this.setSnackbar(null);\r\n\r\n  render() {\r\n    return (\r\n      <main>\r\n        <div style={{ height: 400, width: \"100%\" }}>\r\n          <h1 style={{ color: \"white\" }}>\r\n            ---------------------------------------------------------\r\n          </h1>{\" \"}\r\n          <DataGrid\r\n            rows={this.state.stores}\r\n            columns={this.columns}\r\n            editMode=\"row\"\r\n            //   checkboxSelection\r\n            onSelectionModelChange={(newSelectionModel) => {\r\n              this.set_row_selected(newSelectionModel);\r\n            }}\r\n            experimentalFeatures={{ newEditingApi: true }}\r\n          ></DataGrid>\r\n\r\n\r\n         \r\n          {!!this.state.snackbar && (\r\n          <Snackbar\r\n            open\r\n            anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n            onClose={this.handleCloseSnackbar}\r\n            autoHideDuration={6000}\r\n          >\r\n            <Alert\r\n              {...this.state.snackbar}\r\n              onClose={this.handleCloseSnackbar}\r\n            />\r\n          </Snackbar>\r\n        )}\r\n\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n}","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\SimpleBadge.js",[],[],"C:\\study\\Market1\\TradingSystem\\Client\\src\\ServiceObjects\\Payment.js",[],[],"C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\AccountMenu.js",["849","850"],[],"import * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport Logout from \"@mui/icons-material/Logout\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ConnectApi } from '../API/ConnectApi';\r\nimport { useEffect } from 'react';\r\nimport {useState} from \"react\";\r\n\r\nexport default function AccountMenu({ log, state }) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const logout = () =>{\r\n    handleClose();\r\n    log();\r\n  }\r\n  const [user, setUser] = useState(null);\r\n  const connectApi = new ConnectApi();\r\n  useEffect(()=>{get_online_user()}, []);\r\n  const get_online_user = async () => {\r\n    let response = await connectApi.get_online_user()\r\n    if(!response.was_exception)\r\n    {\r\n      setUser(response.value);\r\n\r\n    }\r\n    else\r\n    {\r\n\r\n    }\r\n    \r\n}\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Box sx={{ display: \"flex\", alignItems: \"center\", textAlign: \"center\" }}>\r\n        <Tooltip title=\"Account settings\">\r\n          <IconButton\r\n            onClick={handleClick}\r\n            size=\"small\"\r\n            sx={{ ml: 2 }}\r\n            aria-controls={open ? \"account-menu\" : undefined}\r\n            aria-haspopup=\"true\"\r\n            aria-expanded={open ? \"true\" : undefined}\r\n          >\r\n            <Avatar sx={{ width: 32, height: 32 }}>M</Avatar>\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Box>\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        id=\"account-menu\"\r\n        open={open}\r\n        onClose={handleClose}\r\n        // onClick={handleClose}\r\n        PaperProps={{\r\n          elevation: 0,\r\n          sx: {\r\n            overflow: \"visible\",\r\n            filter: \"drop-shadow(0px 2px 8px rgba(0,0,0,0.32))\",\r\n            mt: 1.5,\r\n            \"& .MuiAvatar-root\": {\r\n              width: 32,\r\n              height: 32,\r\n              ml: -0.5,\r\n              mr: 1,\r\n            },\r\n            \"&:before\": {\r\n              content: '\"\"',\r\n              display: \"block\",\r\n              position: \"absolute\",\r\n              top: 0,\r\n              right: 14,\r\n              width: 10,\r\n              height: 10,\r\n              bgcolor: \"background.paper\",\r\n              transform: \"translateY(-50%) rotate(45deg)\",\r\n              zIndex: 0,\r\n            },\r\n          },\r\n        }}\r\n        transformOrigin={{ horizontal: \"right\", vertical: \"top\" }}\r\n        anchorOrigin={{ horizontal: \"right\", vertical: \"bottom\" }}\r\n      >\r\n        <MenuItem>\r\n          <Avatar />{\" \"}\r\n          \r\n          <Link to={{pathname:`/ShoppingCart`}} onClick={handleClose} underline=\"hover\">{\"My Cart\"} </Link>\r\n            \r\n        </MenuItem>\r\n        {state !== 0 ? (\r\n          <>\r\n            <MenuItem>\r\n              <Avatar />\r\n              <Link to={{pathname:`/EditProfile`}} onClick={handleClose} underline=\"hover\">{\"Edit Profile\"} </Link>\r\n                \r\n            </MenuItem>\r\n            <MenuItem>\r\n              <Avatar />{\" \"}\r\n              <Link to={{pathname:`/ViewUserPurchaseHistory`}} onClick={handleClose} underline=\"hover\">{\"My Purchases History\"} </Link>\r\n                \r\n            </MenuItem>\r\n            <MenuItem>\r\n              <Avatar />{\" \"}\r\n              <Link to={{pathname:`/UserViewQuestions`}} onClick={handleClose} underline=\"hover\">{\"My Questions\"}  </Link>\r\n                \r\n            </MenuItem>\r\n           \r\n            \r\n            <MenuItem>\r\n              <Avatar />{\" \"}\r\n              <Link to={{pathname:`/MyStores`}} onClick={handleClose} underline=\"hover\" >{'My Stores'}</Link>\r\n            </MenuItem>\r\n            <Divider />\r\n            <MenuItem>\r\n              <ListItemIcon>\r\n                <Logout fontSize=\"small\" />\r\n              </ListItemIcon>\r\n              <Button onClick={logout}>Logout</Button>\r\n            </MenuItem>\r\n          </>\r\n        ) : null}\r\n      </Menu>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\ViewBidsStatus.js",["851","852","853","854","855","856","857","858","859","860","861"],[],"import * as React from 'react';\r\nimport { Component } from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Grid from '@mui/material/Grid';\r\nimport Link from '@mui/material/Button';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\"; \r\nimport FormDialog from './FormDialog';\r\nimport { Utils } from '../ServiceObjects/Utils';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport { StoreApi } from '../API/StoreApi';\r\nimport { SettingsAccessibility } from '@mui/icons-material';\r\nimport { isDate } from 'date-fns';\r\nimport ControlledRadioButtonsGroup from './ControlledRadioButtonsGroup';\r\nimport Button from \"@mui/material/Button\";\r\n\r\n\r\n\r\nconst Demo = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.background.paper,\r\n}));\r\n\r\n\r\nexport default function ViewBidsStatus() {\r\n\r\n    let bid_id=null;\r\n    const bid_ids = [];\r\n    const {id} = useParams();\r\n    const store_id = id;\r\n    const[negoprice, setNegoprice] = React.useState(-1);\r\n    const[bids, setBids] = React.useState([]);\r\n    const[bidids, setBidids] = React.useState([]);\r\n    const[bidid, setBidid] = React.useState(null);\r\n    const[approve, setApprove] = React.useState(false);\r\n    const[isanswer,setIsanswer ] = React.useState(false);\r\n    const[nego, setNego] = React.useState(false);\r\n    const [snackbar, setSnackbar] = React.useState(null);\r\n    const handleCloseSnackbar = () => setSnackbar(null);\r\n    //setSnackbar({ children: response.message, severity: 'success' });\r\n    const is_confirm_fields = [\"Bid ID\"];\r\n    const manager_answer_bid_fields=[\"Negotiation Price\"];\r\n    const storeApi = new StoreApi();\r\n    useEffect(()=>{view_bids_status()}, []);  \r\n\r\n\r\n\r\n    \r\n\r\n    const view_bids_status = async()=> {\r\n        const storeApi = new StoreApi();\r\n        let response = await storeApi.view_bids_status(store_id);\r\n        console.log(response);\r\n        console.log(response.value);\r\n        response.value.map(a=>console.log(a));\r\n        if (!response.was_exception) {\r\n            setSnackbar({ children: response.message, severity: 'success' });\r\n            const bids = response.value;\r\n            setBids(bids);\r\n            bids.map((bid)=>!bid_ids.includes(bid.id) ?  bid_ids.push(bid.id):null);\r\n            setBidids(bid_ids);\r\n            console.log(bidids);\r\n\r\n        }\r\n        else {\r\n            setSnackbar({ children: response.message, severity: 'error' });\r\n\r\n\r\n        }\r\n        console.log(bids);\r\n    }\r\n    const save_bid_id=(bid_id)=>\r\n    {\r\n        setBidid(bid_id);\r\n    }\r\n    const get_status = (enum_status) =>\r\n    {\r\n        // open_waiting_for_answers,\r\n        // closed_denied,\r\n        // closed_confirm,\r\n        // negotiation_mode,\r\n        if(enum_status === \"open_waiting_for_answers\")\r\n            return \"Open Waiting For Answers\"; \r\n        if(enum_status === \"closed_denied\")\r\n            return \"Closed Denied\"; \r\n        if(enum_status === \"closed_confirm\")\r\n            return \"Closed Confirm\"; \r\n        if(enum_status === \"negotiation_mode\")\r\n            return \"Negotiation Mode\"; \r\n            \r\n\r\n    }\r\n    const is_answerd = ()=>\r\n    {\r\n        setIsanswer(!isanswer);\r\n    }\r\n    const is_confirm = async (values) => {\r\n        console.log(values);\r\n        values[0] == 0 ? setApprove(false) : setApprove(true);\r\n        //Manager denied the bid\r\n        if(!values[0])\r\n        {\r\n            console.log(\"Manager Answer Bid HTTP\");\r\n            console.log(`store_id is ${store_id}`);\r\n            console.log(`bidid is ${bidid}`);\r\n            console.log(`approve is ${approve}`);\r\n            console.log(`nego_price is ${negoprice}`);\r\n            const response = await storeApi.manager_answer_bid(store_id, bidid, values[0], -1);\r\n            if (!response.was_exception) {\r\n                \r\n                setSnackbar({ children: response.message, severity: 'success' });\r\n                window.location.reload();\r\n                //TODO - Tom - remove the reload from comment\r\n                // window.location.reload();\r\n            }\r\n            else {\r\n                setSnackbar({ children: response.message, severity: 'error' });\r\n            }\r\n            \r\n        }\r\n        \r\n    }\r\n    const is_add_nego =async (values) =>{\r\n        console.log(values);\r\n        setNego(values[0]);\r\n        if(!values[0])\r\n        {\r\n            console.log(\"Manager Answer Bid HTTP\");\r\n            console.log(`store_id is ${store_id}`);\r\n            console.log(`bidid is ${bidid}`);\r\n            console.log(`approve is ${approve}`);\r\n            console.log(`nego_price is ${negoprice}`);\r\n            const response = await storeApi.manager_answer_bid(store_id, bidid, approve, -1);\r\n            if (!response.was_exception) {\r\n                setSnackbar({ children: response.message, severity: 'success' });\r\n                window.location.reload();\r\n            }\r\n            else {\r\n                setSnackbar({ children: response.message, severity: 'error' });\r\n            }\r\n        }\r\n    }\r\n    const manager_answer_bid = async (values) => {\r\n        setNegoprice(values[0]);\r\n        if(Utils.check_all_digits(values[0]) == 0 || Utils.check_not_empty(values[0])==0)\r\n        {\r\n            setSnackbar({ children: \"Illegal negotiation price\", severity: 'error' });\r\n            return ;\r\n        }\r\n        const storeApi = new StoreApi();\r\n        console.log(\"Manager Answer Bid HTTP\");\r\n        console.log(`store_id is ${store_id}`);\r\n        console.log(`bidid is ${bidid}`);\r\n        console.log(`approve is ${approve}`);\r\n        console.log(`nego_price is ${values[0]}`);\r\n        const response = await storeApi.manager_answer_bid(store_id, bidid, approve, values[0]);\r\n        if (!response.was_exception) {\r\n            setSnackbar({ children: response.message, severity: 'success' });\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            setSnackbar({ children: response.message, severity: 'error' });\r\n        }\r\n    }\r\n\r\n\r\n        return (\r\n\r\n            <>\r\n\r\n                <Box position='center' align='center'>\r\n                    <Grid position='center' row-spacing={3}>\r\n                        <Grid item>\r\n                            <h3 class=\"Header\" align=\"center\">\r\n                                Bids Status\r\n                            </h3>\r\n                        </Grid>\r\n\r\n                        <Grid position='center' align='center'>\r\n\r\n                            <Demo>\r\n                                <List>\r\n                                    {bids.length!==0?\r\n\r\n                                        bids.map((bid) => (\r\n                                            <ListItem>\r\n                                                <ListItemAvatar>\r\n                                                    <Avatar>\r\n                                                   {bid.id}\r\n                                                    </Avatar>\r\n                                                </ListItemAvatar>\r\n                                                <ListItemText\r\n                                                    \r\n                                                    primary={`Offered ${bid.price}$ for ${bid.quantity} ${bid.product_info.name} Products By ${bid.buyer_mail}`}\r\n                                                    secondary={\"bid status: \"+get_status(bid.status)}\r\n\r\n                                                />\r\n                                            </ListItem>\r\n                                            \r\n\r\n                                        )) : <h3 style={{ color: 'red' }}>No Bids To This Store</h3>\r\n\r\n\r\n\r\n\r\n                                    }\r\n                                    \r\n                                    \r\n                                    \r\n                                    \r\n                                </List>\r\n                            </Demo>\r\n\r\n                            <Grid container spacing={3} justifyContent=\"center\" alignItems=\"center\" paddingTop={8}> \r\n                            \r\n                            \r\n                            {bids.length!==0? <Button onClick={is_answerd}>Answer Bid</Button> : null}\r\n                            </Grid>\r\n                            <Grid container spacing={3} justifyContent=\"center\" alignItems=\"center\" paddingTop={8}> \r\n                            {isanswer ? <ControlledRadioButtonsGroup list={bidids} name=\"Choose Bid ID to Answer\" save={save_bid_id}></ControlledRadioButtonsGroup> : null}\r\n                            </Grid>\r\n                            <Grid container spacing={3} justifyContent=\"center\" alignItems=\"center\" paddingTop={8}> \r\n                            {bidid!==null && !approve ? <FormDialog fields={[]} getValues={is_confirm}  name={`Answer Bid ${bidid}`} title=\"Approve this Bid?\" submit_button=\"Yes\" cancel_button={\"No\"} to_open={true}></FormDialog>:null}\r\n                                    {approve && !nego ? <FormDialog fields={[]} getValues={is_add_nego}  name=\"Add Negotiation Price\" title=\"Add A Negotioation Price?\" submit_button=\"Yes\" cancel_button={\"No\"} to_open={true}></FormDialog>:null}\r\n                                    {nego ? <FormDialog fields={manager_answer_bid_fields} getValues={manager_answer_bid}  name=\"Add Negotiation Price\" title=\"Add A Negotioation Price?\" submit_button=\"Submit\"  to_open={true}></FormDialog>:null}\r\n\r\n\r\n                      \r\n                            \r\n                           \r\n                            \r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n                {!!snackbar && (\r\n            <Snackbar\r\n            open\r\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n            onClose={handleCloseSnackbar}\r\n            autoHideDuration={6000}\r\n            >\r\n            <Alert {...snackbar} onClose={handleCloseSnackbar} />\r\n            </Snackbar>\r\n        )}\r\n\r\n            </>\r\n        );\r\n        // )\r\n        // );\r\n\r\n    \r\n    }\r\n","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\InteractiveList.js",["862","863","864","865","866","867","868","869","870","871","872"],[],"import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport FolderIcon from '@mui/icons-material/Folder';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { ContactsOutlined } from '@mui/icons-material';\r\nimport { Button } from '@mui/material';\r\n\r\n\r\n\r\nconst Demo = styled('div')(({ theme }) => ({\r\n  backgroundColor: theme.palette.background.paper,\r\n}));\r\n\r\nexport default function InteractiveList({name, list, icon, remove}) {\r\n    console.log(list);\r\nconst [toremove, setToremove] = React.useState(null);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [secondary, setSecondary] = React.useState(false);\r\n  const generate = (element)=> {\r\n    return list.map((value) =>\r\n      React.cloneElement(element, {\r\n        key: value,\r\n      }),\r\n    );\r\n  }\r\n  const remove_item = (item) =>{\r\n      remove(item)\r\n\r\n  }\r\n  \r\n  return (\r\n    <Box sx={{ flexGrow: 1, maxWidth: 752 }}>\r\n     \r\n\r\n       \r\n      <Grid container spacing={2}>\r\n        \r\n        <Grid item xs={12} md={6}>\r\n          <Typography sx={{ mt: 4, mb: 2 }} variant=\"h6\" component=\"div\">\r\n            {name}\r\n          </Typography>\r\n          <Demo>\r\n            <List dense={dense}>\r\n              {list.length !==0 ? list.map((value)=>\r\n              \r\n                <ListItem key = {value}\r\n                secondaryAction={\r\n                  <IconButton edge=\"end\" aria-label=\"delete\">\r\n                    <Button onClick={()=>remove_item(value)}><DeleteIcon /></Button>\r\n                  </IconButton>\r\n                }\r\n              >\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                  {icon}\r\n                    \r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={value}\r\n                  secondary={secondary ? 'Secondary text' : null}\r\n                />\r\n              </ListItem>\r\n              ) : <h8 style={{ color: 'red' }}> No {name} To This Store</h8>\r\n            \r\n              } \r\n            </List>\r\n          </Demo>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\AddPredictFormDialog.js",["873","874","875","876"],[],"import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\n\r\n\r\n\r\nexport default function AddPredictFormDialog({time,  fields, getValues, head,option1, option2, option3, name, outlinedVar, title, submit_button , params}) {\r\n    AddPredictFormDialog.defaultProps = {\r\n        title: head,\r\n        outlinedVar: \"outlined\",\r\n        submit_button: \"title2\",\r\n        }\r\n        console.log(time);\r\n  // fields.map(f=> localStorage.setItem(f, undefined));\r\n  const[rulename, setRulename] = React.useState(null);\r\n//   setRulename(null);\r\n  const[value, setValue] = React.useState(null);\r\n//   setValue(null);\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleOption1 = event => {\r\n    console.log(\"in handle submit\\n\");\r\n    let ans = [];\r\n    fields.map((f) => ans.push(localStorage.getItem(f)))\r\n    if(time !== undefined)\r\n    {\r\n        ans.push(localStorage.getItem(\"date\"));\r\n    }\r\n    ans.push(1)\r\n    getValues(ans);\r\n    setOpen(false);\r\n\r\n  };\r\n  const handleOption2 = event => {\r\n    console.log(\"in handle submit\\n\");\r\n    let ans = [];\r\n    fields.map((f) => ans.push(localStorage.getItem(f)))\r\n    if(time !== undefined)\r\n    {\r\n        ans.push(localStorage.getItem(\"date\"));\r\n    }\r\n    ans.push(0)\r\n    getValues(ans);\r\n    setOpen(false);\r\n\r\n  };\r\n  const handleOption3 = event => {\r\n    console.log(\"in handle submit\\n\");\r\n    let ans = [];\r\n    fields.map((f) => ans.push(localStorage.getItem(f)))\r\n    ans.push(2)\r\n    getValues(ans);\r\n    setOpen(false);\r\n\r\n  };\r\n  const handleInputChange = event => {\r\n    const name = event.target.name\r\n    const value = event.target.value;\r\n    console.log(value);\r\n    localStorage.setItem(name, value);\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Button variant={outlinedVar} onClick={handleClickOpen}>\r\n        {name}\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>{title}</DialogTitle>\r\n        <DialogContent>\r\n        {fields.map((field) => (\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              name={field}\r\n              label={field}\r\n              type=\"storeid\"\r\n              fullWidth\r\n              variant=\"standard\"\r\n              onChange={handleInputChange}\r\n            />\r\n          ))}\r\n          {time!==undefined ? <input type=\"date\" name=\"date\"  onChange={handleInputChange}\r\n                                    placeholder=\"mm/yyyy\" required/> :null}\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button onClick={handleOption1}>{option1}</Button>\r\n          <Button onClick={handleOption2}>{option2}</Button>\r\n          <Button onClick={handleOption3}>{option3}</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n// }","C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\CollapsibleTable.js",["877","878","879","880","881","882","883","884","885"],[],"import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@mui/material/Box';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport { PoliciesApi } from '../API/PoliciesApi';\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\"; \r\n\r\nfunction createData(name, calories, fat, carbs, protein, price) {\r\n  return {\r\n    name,\r\n    calories,\r\n    fat,\r\n    carbs,\r\n    protein,\r\n    price,\r\n    history: [\r\n      {\r\n        date: '2020-01-05',\r\n        customerId: '11091700',\r\n        amount: 3,\r\n      },\r\n      {\r\n        date: '2020-01-02',\r\n        customerId: 'Anonymous',\r\n        amount: 1,\r\n      },\r\n    ],\r\n  };\r\n}\r\n\r\nfunction Row(props) {\r\n  const { row } = props;\r\n  const [open, setOpen] = React.useState(false);\r\n  const policiesApi = new PoliciesApi();\r\nconst {id} = useParams();\r\n//SnackBar\r\nconst [snackbar, setSnackbar] = React.useState(null);\r\nconst handleCloseSnackbar = () => setSnackbar(null);\r\n\r\n\r\n\r\n//Getters\r\nconst [purchases,setPurchases ] =React.useState([\"purchase1\", \"purchase2\", \"purchase3\"]);\r\nconst [predicts,setPredicts ] =React.useState([\"predict1\", \"predict2\", \"predict3\"]);\r\nconst [discounts,setDiscounts ] =React.useState([\"discount1\", \"discount2\", \"discount3\"]);\r\n\r\nconst get_purchase_policy = async () => {\r\n    const response = policiesApi.get_purchase_policy(id);\r\n    if(!response.was_exception)\r\n    {\r\n        setSnackbar({ children: response.message, severity: 'success' });     }\r\n    else{\r\n        setSnackbar({ children: response.message, severity: 'error' }); \r\n    }\r\n}\r\nconst send_predicts = async () => {\r\n    const response = policiesApi.send_predicts(id);\r\n    if(!response.was_exception)\r\n    {\r\n        setSnackbar({ children: response.message, severity: 'success' });     }\r\n    else{\r\n        setSnackbar({ children: response.message, severity: 'error' }); \r\n    }\r\n}\r\nconst get_discount_policy = async () => {\r\n    const response = policiesApi.get_discount_policy(id);\r\n    if(!response.was_exception)\r\n    {\r\n        setSnackbar({ children: response.message, severity: 'success' });     }\r\n    else{\r\n        setSnackbar({ children: response.message, severity: 'error' }); \r\n    }\r\n}\r\nuseEffect(()=>{get_purchase_policy()}, []);\r\nuseEffect(()=>{send_predicts()}, []);\r\nuseEffect(()=>{get_discount_policy()}, []);\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow sx={{ '& > *': { borderBottom: 'unset' } }}>\r\n        <TableCell>\r\n          <IconButton\r\n            aria-label=\"expand row\"\r\n            size=\"small\"\r\n            onClick={() => setOpen(!open)}\r\n          >\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {row.name}\r\n        </TableCell>\r\n        <TableCell align=\"right\">{row.calories}</TableCell>\r\n        <TableCell align=\"right\">{row.fat}</TableCell>\r\n        <TableCell align=\"right\">{row.carbs}</TableCell>\r\n        <TableCell align=\"right\">{row.protein}</TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box sx={{ margin: 1 }}>\r\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                History\r\n              </Typography>\r\n              <Table size=\"small\" aria-label=\"purchases\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Date</TableCell>\r\n                    <TableCell>Customer</TableCell>\r\n                    <TableCell align=\"right\">Amount</TableCell>\r\n                    <TableCell align=\"right\">Total price ($)</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {row.history.map((historyRow) => (\r\n                    <TableRow key={historyRow.date}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {historyRow.date}\r\n                      </TableCell>\r\n                      <TableCell>{historyRow.customerId}</TableCell>\r\n                      <TableCell align=\"right\">{historyRow.amount}</TableCell>\r\n                      <TableCell align=\"right\">\r\n                        {Math.round(historyRow.amount * row.price * 100) / 100}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n        {!!snackbar && (\r\n        <Snackbar\r\n        open\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n        onClose={handleCloseSnackbar}\r\n        autoHideDuration={6000}\r\n        >\r\n        <Alert {...snackbar} onClose={handleCloseSnackbar} />\r\n        </Snackbar>\r\n    )}\r\n      </TableRow>\r\n    </React.Fragment>\r\n \r\n  );\r\n}\r\n\r\nRow.propTypes = {\r\n  row: PropTypes.shape({\r\n    calories: PropTypes.number.isRequired,\r\n    carbs: PropTypes.number.isRequired,\r\n    fat: PropTypes.number.isRequired,\r\n    history: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        amount: PropTypes.number.isRequired,\r\n        customerId: PropTypes.string.isRequired,\r\n        date: PropTypes.string.isRequired,\r\n      }),\r\n    ).isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    protein: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 3.99),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 4.99),\r\n  createData('Eclair', 262, 16.0, 24, 6.0, 3.79),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3, 2.5),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 1.5),\r\n];\r\n\r\nexport default function CollapsibleTable() {\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"collapsible table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell />\r\n            <TableCell>Dessert (100g serving)</TableCell>\r\n            <TableCell align=\"right\">Calories</TableCell>\r\n            <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n            <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n            <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <Row key={row.name} row={row} />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","C:\\study\\Market1\\TradingSystem\\Client\\src\\ServiceObjects\\Product.js",["886"],[],"\r\nimport { ProductReview } from \"./ProductReview\";\r\nexport class Product  {\r\n    constructor(data) {\r\n        this.product_id = data.product_id;\r\n        this.name = data.name;\r\n        this.category = data.category;\r\n        this.key_words = data.key_words;\r\n        this.price = data.price;\r\n        this.productReview = data.productReview;\r\n        this.quantity = data.quantity;\r\n        this.store_id = data.store_id;\r\n    }\r\n\r\n    static create(product_id, name, category, key_words, price, productReview,quantity,store_id) {\r\n        return new Product({\r\n            product_id: product_id,\r\n            name: name,\r\n            category:category,\r\n            key_words:key_words,\r\n            price:price,\r\n            productReview:productReview,\r\n            quantity:quantity,\r\n            store_id:store_id,\r\n        })\r\n    }\r\n}","C:\\study\\Market1\\TradingSystem\\Client\\src\\ServiceObjects\\Store.js",["887"],[],"import { StoreReview } from \"./StoreReview\";\r\nexport class Store  {\r\n    store_id;\r\n    founder_email;\r\n    name;\r\n    foundation_date;\r\n    inventory; // product & quantity\r\n    storeReview;\r\n    \r\n    constructor(data) {\r\n    this.store_id = data.store_id;\r\n    this.founder_email = data.founder_email;\r\n    this.name = data.name;\r\n    this.foundation_date = data.foundation_date;\r\n    this.inventory = data.inventory; // product & quantity\r\n    this.storeReview = data.storeReview;\r\n    }\r\n    \r\n    static create(store_id, founder_email, name, foundation_date, inventory, storeReview) {\r\n        return new Store({\r\n            store_id: store_id,\r\n            founder_email: founder_email,\r\n            name: name,\r\n            foundation_date:foundation_date,\r\n            inventory : inventory,\r\n            storeReview: storeReview\r\n        })\r\n    }\r\n}\r\n","C:\\study\\Market1\\TradingSystem\\Client\\src\\ServiceObjects\\Cart.js",[],[],"C:\\study\\Market1\\TradingSystem\\Client\\src\\ServiceObjects\\UserPurchase.js",[],[],"C:\\study\\Market1\\TradingSystem\\Client\\src\\ServiceObjects\\ProductReview.js",[],[],"C:\\study\\Market1\\TradingSystem\\Client\\src\\ServiceObjects\\Statistic.js",[],[],"C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\ViewAppointmentsStatusNevigator.js",[],[],"C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\LinearDeterminate.js",[],[],"C:\\study\\Market1\\TradingSystem\\Client\\src\\components\\ViewAppointmentsStatus.js",["888","889","890"],[],"import * as React from 'react';\r\nimport { Component } from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Grid from '@mui/material/Grid';\r\nimport Link from '@mui/material/Button';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport { StoreApi } from '../API/StoreApi';\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\"; \r\nimport FormDialog from './FormDialog';\r\nimport { Utils } from '../ServiceObjects/Utils';\r\nimport ManageAccountsIcon from '@mui/icons-material/ManageAccounts';\r\nconst Demo = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.background.paper,\r\n}));\r\n\r\n\r\n\r\nexport default class ViewAppointmentsStatus extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            store_id:this.props.store_id,\r\n            appointments_agreements: [],\r\n            manager_answer_appointment_fields:[\"Candidate Email\"],\r\n            snackbar: null,\r\n        };\r\n        this.storeApi = new StoreApi();\r\n    }\r\n\r\n    async view_appointments_status() {\r\n        console.log(\"hey amit\");\r\n        let response = await this.storeApi.view_appointments_status(this.state.store_id);\r\n        if (!response.was_exception) {\r\n            console.log(response);\r\n            this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n            this.setState({ appointments_agreements: response.value });\r\n        }\r\n        else {\r\n            this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n\r\n\r\n        }\r\n    }\r\n    async manager_answer_appointment(values) {\r\n        const candidate_email = values[0]; \r\n        //This Will be true / false due to manager answer\r\n        // the buttons will be Yes/or No after merge\r\n        const manager_answer = values[1];\r\n        console.log(values);\r\n        // if(Utils.check_email(candidate_email) == 0)\r\n        // {\r\n        //     this.setState({ snackbar: { children: \"Illegal Email\", severity: \"error\" } });\r\n        //     return;\r\n        // }\r\n        let response = await this.storeApi.manager_answer_appointment(this.state.store_id, manager_answer, candidate_email);\r\n        if (!response.was_exception) {\r\n            this.setState({ snackbar: { children: response.message, severity: \"success\" } });\r\n        }\r\n        else {\r\n            this.setState({ snackbar: { children: response.message, severity: \"error\" } });\r\n\r\n\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.view_appointments_status();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Box position='center' align='center'>\r\n                    <Grid position='center' row-spacing={3}>\r\n                        <Grid item>\r\n                            <h3 class=\"Header\" align=\"center\">\r\n                                Appointments Status\r\n                            </h3>\r\n                        </Grid>\r\n                        <Grid position='center' align='center'>\r\n                            <Demo>\r\n                                <List>\r\n                                    {\r\n                                        this.state.appointments_agreements.map((appointment) => (\r\n                                            <ListItem>\r\n                                                <ListItemAvatar>\r\n                                                    <Avatar>\r\n                                                    <ManageAccountsIcon></ManageAccountsIcon>\r\n                                                    </Avatar>\r\n                                                </ListItemAvatar>\r\n                                                <ListItemText\r\n                                                    primary={`Candidate :  ${appointment.member_email}    For:  ${appointment.type}  Appointed by:   ${appointment.appointer_email}`}\r\n                                                    secondary={`Appointment status: ${appointment.status}`}\r\n                                                />\r\n                                            </ListItem>\r\n                                            \r\n\r\n                                        ))\r\n\r\n\r\n\r\n\r\n                                    }\r\n                                    <FormDialog fields={this.state.manager_answer_appointment_fields} getValues={this.manager_answer_appointment.bind(this)}  name=\"Answer Appointment\" title={\"Approve the Appointment?\"} submit_button=\"Yes\" cancel_button=\"No\"></FormDialog>\r\n                                </List>\r\n                            </Demo>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n                {!!this.state.snackbar && (\r\n                        <Snackbar\r\n                        open\r\n                        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n                        onClose={this.handleCloseSnackbar}\r\n                        autoHideDuration={6000}\r\n                        >\r\n                        <Alert\r\n                            {...this.state.snackbar}\r\n                            onClose={this.handleCloseSnackbar}\r\n                        />\r\n                        </Snackbar>\r\n                    )}\r\n\r\n            </>\r\n        );\r\n        // )\r\n        // );\r\n\r\n    }\r\n}","C:\\study\\Market1\\TradingSystem\\Client\\src\\ServiceObjects\\Statistics.js",[],[],{"ruleId":"891","severity":1,"message":"892","line":8,"column":8,"nodeType":"893","messageId":"894","endLine":8,"endColumn":14},{"ruleId":"891","severity":1,"message":"895","line":9,"column":10,"nodeType":"893","messageId":"894","endLine":9,"endColumn":14},{"ruleId":"891","severity":1,"message":"896","line":1,"column":10,"nodeType":"893","messageId":"894","endLine":1,"endColumn":19},{"ruleId":"891","severity":1,"message":"897","line":3,"column":25,"nodeType":"893","messageId":"894","endLine":3,"endColumn":29},{"ruleId":"891","severity":1,"message":"898","line":3,"column":38,"nodeType":"893","messageId":"894","endLine":3,"endColumn":44},{"ruleId":"891","severity":1,"message":"899","line":8,"column":8,"nodeType":"893","messageId":"894","endLine":8,"endColumn":22},{"ruleId":"891","severity":1,"message":"900","line":10,"column":8,"nodeType":"893","messageId":"894","endLine":10,"endColumn":15},{"ruleId":"891","severity":1,"message":"901","line":11,"column":8,"nodeType":"893","messageId":"894","endLine":11,"endColumn":14},{"ruleId":"891","severity":1,"message":"892","line":14,"column":8,"nodeType":"893","messageId":"894","endLine":14,"endColumn":14},{"ruleId":"891","severity":1,"message":"902","line":15,"column":8,"nodeType":"893","messageId":"894","endLine":15,"endColumn":17},{"ruleId":"891","severity":1,"message":"903","line":17,"column":8,"nodeType":"893","messageId":"894","endLine":17,"endColumn":24},{"ruleId":"891","severity":1,"message":"904","line":19,"column":8,"nodeType":"893","messageId":"894","endLine":19,"endColumn":22},{"ruleId":"891","severity":1,"message":"905","line":21,"column":10,"nodeType":"893","messageId":"894","endLine":21,"endColumn":17},{"ruleId":"891","severity":1,"message":"906","line":22,"column":8,"nodeType":"893","messageId":"894","endLine":22,"endColumn":19},{"ruleId":"891","severity":1,"message":"907","line":31,"column":8,"nodeType":"893","messageId":"894","endLine":31,"endColumn":33},{"ruleId":"891","severity":1,"message":"908","line":35,"column":8,"nodeType":"893","messageId":"894","endLine":35,"endColumn":28},{"ruleId":"891","severity":1,"message":"909","line":36,"column":8,"nodeType":"893","messageId":"894","endLine":36,"endColumn":32},{"ruleId":"891","severity":1,"message":"910","line":52,"column":8,"nodeType":"893","messageId":"894","endLine":52,"endColumn":17},{"ruleId":"891","severity":1,"message":"911","line":53,"column":8,"nodeType":"893","messageId":"894","endLine":53,"endColumn":19},{"ruleId":"891","severity":1,"message":"912","line":54,"column":8,"nodeType":"893","messageId":"894","endLine":54,"endColumn":21},{"ruleId":"913","severity":1,"message":"914","line":91,"column":6,"nodeType":"915","endLine":91,"endColumn":8,"suggestions":"916"},{"ruleId":"891","severity":1,"message":"917","line":1,"column":10,"nodeType":"893","messageId":"894","endLine":1,"endColumn":21},{"ruleId":"891","severity":1,"message":"918","line":4,"column":7,"nodeType":"893","messageId":"894","endLine":4,"endColumn":18},{"ruleId":"891","severity":1,"message":"919","line":5,"column":7,"nodeType":"893","messageId":"894","endLine":5,"endColumn":12},{"ruleId":"891","severity":1,"message":"920","line":96,"column":16,"nodeType":"893","messageId":"894","endLine":96,"endColumn":26},{"ruleId":"913","severity":1,"message":"921","line":90,"column":43,"nodeType":"915","endLine":90,"endColumn":45,"suggestions":"922"},{"ruleId":"913","severity":1,"message":"923","line":91,"column":43,"nodeType":"915","endLine":91,"endColumn":45,"suggestions":"924"},{"ruleId":"913","severity":1,"message":"925","line":92,"column":49,"nodeType":"915","endLine":92,"endColumn":51,"suggestions":"926"},{"ruleId":"891","severity":1,"message":"927","line":111,"column":12,"nodeType":"893","messageId":"894","endLine":111,"endColumn":19},{"ruleId":"891","severity":1,"message":"928","line":114,"column":11,"nodeType":"893","messageId":"894","endLine":114,"endColumn":23},{"ruleId":"891","severity":1,"message":"929","line":206,"column":11,"nodeType":"893","messageId":"894","endLine":206,"endColumn":22},{"ruleId":"930","severity":1,"message":"931","line":215,"column":46,"nodeType":"932","messageId":"933","endLine":215,"endColumn":48},{"ruleId":"930","severity":1,"message":"931","line":220,"column":43,"nodeType":"932","messageId":"933","endLine":220,"endColumn":45},{"ruleId":"930","severity":1,"message":"931","line":242,"column":46,"nodeType":"932","messageId":"933","endLine":242,"endColumn":48},{"ruleId":"930","severity":1,"message":"931","line":247,"column":43,"nodeType":"932","messageId":"933","endLine":247,"endColumn":45},{"ruleId":"930","severity":1,"message":"931","line":268,"column":46,"nodeType":"932","messageId":"933","endLine":268,"endColumn":48},{"ruleId":"930","severity":1,"message":"931","line":273,"column":42,"nodeType":"932","messageId":"933","endLine":273,"endColumn":44},{"ruleId":"930","severity":1,"message":"931","line":308,"column":45,"nodeType":"932","messageId":"933","endLine":308,"endColumn":47},{"ruleId":"891","severity":1,"message":"934","line":326,"column":15,"nodeType":"893","messageId":"894","endLine":326,"endColumn":24},{"ruleId":"930","severity":1,"message":"931","line":339,"column":45,"nodeType":"932","messageId":"933","endLine":339,"endColumn":47},{"ruleId":"930","severity":1,"message":"931","line":369,"column":45,"nodeType":"932","messageId":"933","endLine":369,"endColumn":47},{"ruleId":"930","severity":1,"message":"931","line":399,"column":46,"nodeType":"932","messageId":"933","endLine":399,"endColumn":48},{"ruleId":"930","severity":1,"message":"931","line":430,"column":45,"nodeType":"932","messageId":"933","endLine":430,"endColumn":47},{"ruleId":"930","severity":1,"message":"931","line":460,"column":45,"nodeType":"932","messageId":"933","endLine":460,"endColumn":47},{"ruleId":"930","severity":1,"message":"931","line":507,"column":29,"nodeType":"932","messageId":"933","endLine":507,"endColumn":31},{"ruleId":"930","severity":1,"message":"931","line":546,"column":29,"nodeType":"932","messageId":"933","endLine":546,"endColumn":31},{"ruleId":"930","severity":1,"message":"931","line":547,"column":29,"nodeType":"932","messageId":"933","endLine":547,"endColumn":31},{"ruleId":"930","severity":1,"message":"931","line":548,"column":29,"nodeType":"932","messageId":"933","endLine":548,"endColumn":31},{"ruleId":"930","severity":1,"message":"931","line":549,"column":29,"nodeType":"932","messageId":"933","endLine":549,"endColumn":31},{"ruleId":"930","severity":1,"message":"931","line":550,"column":29,"nodeType":"932","messageId":"933","endLine":550,"endColumn":31},{"ruleId":"930","severity":1,"message":"931","line":551,"column":29,"nodeType":"932","messageId":"933","endLine":551,"endColumn":31},{"ruleId":"930","severity":1,"message":"931","line":552,"column":29,"nodeType":"932","messageId":"933","endLine":552,"endColumn":31},{"ruleId":"930","severity":1,"message":"931","line":553,"column":29,"nodeType":"932","messageId":"933","endLine":553,"endColumn":31},{"ruleId":"930","severity":1,"message":"931","line":554,"column":29,"nodeType":"932","messageId":"933","endLine":554,"endColumn":31},{"ruleId":"891","severity":1,"message":"935","line":4,"column":8,"nodeType":"893","messageId":"894","endLine":4,"endColumn":16},{"ruleId":"891","severity":1,"message":"920","line":69,"column":16,"nodeType":"893","messageId":"894","endLine":69,"endColumn":26},{"ruleId":"930","severity":1,"message":"936","line":70,"column":35,"nodeType":"932","messageId":"933","endLine":70,"endColumn":37},{"ruleId":"891","severity":1,"message":"896","line":1,"column":17,"nodeType":"893","messageId":"894","endLine":1,"endColumn":26},{"ruleId":"891","severity":1,"message":"897","line":3,"column":8,"nodeType":"893","messageId":"894","endLine":3,"endColumn":12},{"ruleId":"891","severity":1,"message":"935","line":4,"column":8,"nodeType":"893","messageId":"894","endLine":4,"endColumn":16},{"ruleId":"930","severity":1,"message":"931","line":28,"column":37,"nodeType":"932","messageId":"933","endLine":28,"endColumn":39},{"ruleId":"930","severity":1,"message":"931","line":33,"column":41,"nodeType":"932","messageId":"933","endLine":33,"endColumn":43},{"ruleId":"930","severity":1,"message":"931","line":38,"column":35,"nodeType":"932","messageId":"933","endLine":38,"endColumn":37},{"ruleId":"930","severity":1,"message":"931","line":43,"column":41,"nodeType":"932","messageId":"933","endLine":43,"endColumn":43},{"ruleId":"930","severity":1,"message":"931","line":48,"column":33,"nodeType":"932","messageId":"933","endLine":48,"endColumn":35},{"ruleId":"891","severity":1,"message":"896","line":1,"column":17,"nodeType":"893","messageId":"894","endLine":1,"endColumn":26},{"ruleId":"891","severity":1,"message":"937","line":16,"column":11,"nodeType":"893","messageId":"894","endLine":16,"endColumn":44},{"ruleId":"930","severity":1,"message":"931","line":36,"column":42,"nodeType":"932","messageId":"933","endLine":36,"endColumn":44},{"ruleId":"891","severity":1,"message":"938","line":2,"column":20,"nodeType":"893","messageId":"894","endLine":2,"endColumn":39},{"ruleId":"891","severity":1,"message":"935","line":5,"column":8,"nodeType":"893","messageId":"894","endLine":5,"endColumn":16},{"ruleId":"891","severity":1,"message":"939","line":16,"column":8,"nodeType":"893","messageId":"894","endLine":16,"endColumn":36},{"ruleId":"891","severity":1,"message":"940","line":17,"column":8,"nodeType":"893","messageId":"894","endLine":17,"endColumn":18},{"ruleId":"891","severity":1,"message":"920","line":131,"column":13,"nodeType":"893","messageId":"894","endLine":131,"endColumn":23},{"ruleId":"891","severity":1,"message":"920","line":107,"column":17,"nodeType":"893","messageId":"894","endLine":107,"endColumn":27},{"ruleId":"891","severity":1,"message":"935","line":3,"column":8,"nodeType":"893","messageId":"894","endLine":3,"endColumn":16},{"ruleId":"891","severity":1,"message":"941","line":10,"column":8,"nodeType":"893","messageId":"894","endLine":10,"endColumn":29},{"ruleId":"930","severity":1,"message":"931","line":333,"column":42,"nodeType":"932","messageId":"933","endLine":333,"endColumn":44},{"ruleId":"891","severity":1,"message":"920","line":352,"column":17,"nodeType":"893","messageId":"894","endLine":352,"endColumn":27},{"ruleId":"891","severity":1,"message":"892","line":2,"column":8,"nodeType":"893","messageId":"894","endLine":2,"endColumn":14},{"ruleId":"891","severity":1,"message":"897","line":3,"column":8,"nodeType":"893","messageId":"894","endLine":3,"endColumn":12},{"ruleId":"891","severity":1,"message":"935","line":4,"column":8,"nodeType":"893","messageId":"894","endLine":4,"endColumn":16},{"ruleId":"891","severity":1,"message":"942","line":5,"column":10,"nodeType":"893","messageId":"894","endLine":5,"endColumn":20},{"ruleId":"891","severity":1,"message":"943","line":6,"column":8,"nodeType":"893","messageId":"894","endLine":6,"endColumn":16},{"ruleId":"891","severity":1,"message":"944","line":7,"column":8,"nodeType":"893","messageId":"894","endLine":7,"endColumn":11},{"ruleId":"891","severity":1,"message":"945","line":8,"column":8,"nodeType":"893","messageId":"894","endLine":8,"endColumn":21},{"ruleId":"891","severity":1,"message":"946","line":9,"column":8,"nodeType":"893","messageId":"894","endLine":9,"endColumn":17},{"ruleId":"891","severity":1,"message":"947","line":10,"column":10,"nodeType":"893","messageId":"894","endLine":10,"endColumn":18},{"ruleId":"891","severity":1,"message":"948","line":11,"column":8,"nodeType":"893","messageId":"894","endLine":11,"endColumn":12},{"ruleId":"891","severity":1,"message":"949","line":12,"column":8,"nodeType":"893","messageId":"894","endLine":12,"endColumn":16},{"ruleId":"891","severity":1,"message":"950","line":13,"column":8,"nodeType":"893","messageId":"894","endLine":13,"endColumn":20},{"ruleId":"891","severity":1,"message":"951","line":14,"column":8,"nodeType":"893","messageId":"894","endLine":14,"endColumn":21},{"ruleId":"891","severity":1,"message":"952","line":15,"column":10,"nodeType":"893","messageId":"894","endLine":15,"endColumn":17},{"ruleId":"891","severity":1,"message":"953","line":16,"column":8,"nodeType":"893","messageId":"894","endLine":16,"endColumn":27},{"ruleId":"891","severity":1,"message":"954","line":17,"column":10,"nodeType":"893","messageId":"894","endLine":17,"endColumn":19},{"ruleId":"891","severity":1,"message":"955","line":17,"column":21,"nodeType":"893","messageId":"894","endLine":17,"endColumn":24},{"ruleId":"891","severity":1,"message":"956","line":17,"column":26,"nodeType":"893","messageId":"894","endLine":17,"endColumn":29},{"ruleId":"891","severity":1,"message":"957","line":19,"column":10,"nodeType":"893","messageId":"894","endLine":19,"endColumn":20},{"ruleId":"891","severity":1,"message":"958","line":20,"column":8,"nodeType":"893","messageId":"894","endLine":20,"endColumn":14},{"ruleId":"891","severity":1,"message":"959","line":21,"column":8,"nodeType":"893","messageId":"894","endLine":21,"endColumn":19},{"ruleId":"891","severity":1,"message":"960","line":22,"column":8,"nodeType":"893","messageId":"894","endLine":22,"endColumn":20},{"ruleId":"891","severity":1,"message":"961","line":23,"column":10,"nodeType":"893","messageId":"894","endLine":23,"endColumn":26},{"ruleId":"891","severity":1,"message":"962","line":24,"column":8,"nodeType":"893","messageId":"894","endLine":24,"endColumn":12},{"ruleId":"891","severity":1,"message":"963","line":25,"column":8,"nodeType":"893","messageId":"894","endLine":25,"endColumn":18},{"ruleId":"891","severity":1,"message":"895","line":30,"column":10,"nodeType":"893","messageId":"894","endLine":30,"endColumn":14},{"ruleId":"891","severity":1,"message":"964","line":34,"column":7,"nodeType":"893","messageId":"894","endLine":34,"endColumn":11},{"ruleId":"891","severity":1,"message":"965","line":42,"column":7,"nodeType":"893","messageId":"894","endLine":42,"endColumn":12},{"ruleId":"891","severity":1,"message":"918","line":43,"column":7,"nodeType":"893","messageId":"894","endLine":43,"endColumn":18},{"ruleId":"891","severity":1,"message":"919","line":44,"column":7,"nodeType":"893","messageId":"894","endLine":44,"endColumn":12},{"ruleId":"891","severity":1,"message":"920","line":107,"column":13,"nodeType":"893","messageId":"894","endLine":107,"endColumn":23},{"ruleId":"891","severity":1,"message":"920","line":81,"column":16,"nodeType":"893","messageId":"894","endLine":81,"endColumn":26},{"ruleId":"891","severity":1,"message":"959","line":5,"column":8,"nodeType":"893","messageId":"894","endLine":5,"endColumn":19},{"ruleId":"891","severity":1,"message":"920","line":143,"column":16,"nodeType":"893","messageId":"894","endLine":143,"endColumn":26},{"ruleId":"966","severity":1,"message":"967","line":207,"column":1,"nodeType":"968","messageId":"969","endLine":220,"endColumn":50},{"ruleId":"930","severity":1,"message":"931","line":90,"column":26,"nodeType":"932","messageId":"933","endLine":90,"endColumn":28},{"ruleId":"970","severity":1,"message":"971","line":52,"column":28,"nodeType":"972","messageId":"973","endLine":52,"endColumn":30},{"ruleId":"891","severity":1,"message":"920","line":96,"column":16,"nodeType":"893","messageId":"894","endLine":96,"endColumn":26},{"ruleId":"930","severity":1,"message":"931","line":107,"column":54,"nodeType":"932","messageId":"933","endLine":107,"endColumn":56},{"ruleId":"891","severity":1,"message":"897","line":4,"column":8,"nodeType":"893","messageId":"894","endLine":4,"endColumn":12},{"ruleId":"891","severity":1,"message":"974","line":11,"column":10,"nodeType":"893","messageId":"894","endLine":11,"endColumn":34},{"ruleId":"891","severity":1,"message":"975","line":14,"column":8,"nodeType":"893","messageId":"894","endLine":14,"endColumn":12},{"ruleId":"891","severity":1,"message":"976","line":15,"column":8,"nodeType":"893","messageId":"894","endLine":15,"endColumn":18},{"ruleId":"891","severity":1,"message":"955","line":16,"column":10,"nodeType":"893","messageId":"894","endLine":16,"endColumn":13},{"ruleId":"913","severity":1,"message":"914","line":39,"column":40,"nodeType":"915","endLine":39,"endColumn":42,"suggestions":"977"},{"ruleId":"891","severity":1,"message":"978","line":58,"column":11,"nodeType":"893","messageId":"894","endLine":58,"endColumn":28},{"ruleId":"891","severity":1,"message":"979","line":75,"column":11,"nodeType":"893","messageId":"894","endLine":75,"endColumn":41},{"ruleId":"891","severity":1,"message":"980","line":80,"column":11,"nodeType":"893","messageId":"894","endLine":80,"endColumn":41},{"ruleId":"891","severity":1,"message":"981","line":85,"column":11,"nodeType":"893","messageId":"894","endLine":85,"endColumn":47},{"ruleId":"930","severity":1,"message":"931","line":138,"column":45,"nodeType":"932","messageId":"933","endLine":138,"endColumn":47},{"ruleId":"930","severity":1,"message":"931","line":143,"column":43,"nodeType":"932","messageId":"933","endLine":143,"endColumn":45},{"ruleId":"930","severity":1,"message":"931","line":161,"column":25,"nodeType":"932","messageId":"933","endLine":161,"endColumn":27},{"ruleId":"891","severity":1,"message":"896","line":1,"column":17,"nodeType":"893","messageId":"894","endLine":1,"endColumn":26},{"ruleId":"891","severity":1,"message":"982","line":16,"column":10,"nodeType":"893","messageId":"894","endLine":16,"endColumn":23},{"ruleId":"891","severity":1,"message":"892","line":17,"column":8,"nodeType":"893","messageId":"894","endLine":17,"endColumn":14},{"ruleId":"891","severity":1,"message":"983","line":18,"column":10,"nodeType":"893","messageId":"894","endLine":18,"endColumn":19},{"ruleId":"891","severity":1,"message":"984","line":24,"column":10,"nodeType":"893","messageId":"894","endLine":24,"endColumn":18},{"ruleId":"891","severity":1,"message":"985","line":28,"column":9,"nodeType":"893","messageId":"894","endLine":28,"endColumn":15},{"ruleId":"891","severity":1,"message":"986","line":32,"column":9,"nodeType":"893","messageId":"894","endLine":32,"endColumn":19},{"ruleId":"891","severity":1,"message":"987","line":33,"column":9,"nodeType":"893","messageId":"894","endLine":33,"endColumn":17},{"ruleId":"891","severity":1,"message":"988","line":34,"column":9,"nodeType":"893","messageId":"894","endLine":34,"endColumn":17},{"ruleId":"891","severity":1,"message":"989","line":43,"column":13,"nodeType":"893","messageId":"894","endLine":43,"endColumn":21},{"ruleId":"990","severity":1,"message":"991","line":54,"column":26,"nodeType":"893","messageId":"992","endLine":54,"endColumn":34},{"ruleId":"891","severity":1,"message":"993","line":66,"column":9,"nodeType":"893","messageId":"894","endLine":66,"endColumn":22},{"ruleId":"891","severity":1,"message":"994","line":73,"column":10,"nodeType":"893","messageId":"894","endLine":73,"endColumn":27},{"ruleId":"970","severity":1,"message":"971","line":39,"column":28,"nodeType":"972","messageId":"973","endLine":39,"endColumn":30},{"ruleId":"891","severity":1,"message":"920","line":64,"column":16,"nodeType":"893","messageId":"894","endLine":64,"endColumn":26},{"ruleId":"930","severity":1,"message":"931","line":75,"column":54,"nodeType":"932","messageId":"933","endLine":75,"endColumn":56},{"ruleId":"966","severity":1,"message":"967","line":124,"column":1,"nodeType":"968","messageId":"969","endLine":137,"endColumn":50},{"ruleId":"891","severity":1,"message":"935","line":14,"column":8,"nodeType":"893","messageId":"894","endLine":14,"endColumn":16},{"ruleId":"891","severity":1,"message":"897","line":15,"column":8,"nodeType":"893","messageId":"894","endLine":15,"endColumn":12},{"ruleId":"891","severity":1,"message":"995","line":53,"column":17,"nodeType":"893","messageId":"894","endLine":53,"endColumn":20},{"ruleId":"970","severity":1,"message":"971","line":55,"column":28,"nodeType":"972","messageId":"973","endLine":55,"endColumn":30},{"ruleId":"930","severity":1,"message":"931","line":135,"column":54,"nodeType":"932","messageId":"933","endLine":135,"endColumn":56},{"ruleId":"891","severity":1,"message":"897","line":11,"column":8,"nodeType":"893","messageId":"894","endLine":11,"endColumn":12},{"ruleId":"891","severity":1,"message":"935","line":16,"column":8,"nodeType":"893","messageId":"894","endLine":16,"endColumn":16},{"ruleId":"891","severity":1,"message":"896","line":1,"column":17,"nodeType":"893","messageId":"894","endLine":1,"endColumn":26},{"ruleId":"891","severity":1,"message":"996","line":2,"column":10,"nodeType":"893","messageId":"894","endLine":2,"endColumn":21},{"ruleId":"891","severity":1,"message":"985","line":21,"column":15,"nodeType":"893","messageId":"894","endLine":21,"endColumn":21},{"ruleId":"891","severity":1,"message":"920","line":22,"column":17,"nodeType":"893","messageId":"894","endLine":22,"endColumn":27},{"ruleId":"891","severity":1,"message":"897","line":2,"column":10,"nodeType":"893","messageId":"894","endLine":2,"endColumn":14},{"ruleId":"891","severity":1,"message":"935","line":5,"column":8,"nodeType":"893","messageId":"894","endLine":5,"endColumn":16},{"ruleId":"891","severity":1,"message":"944","line":6,"column":8,"nodeType":"893","messageId":"894","endLine":6,"endColumn":11},{"ruleId":"891","severity":1,"message":"948","line":8,"column":8,"nodeType":"893","messageId":"894","endLine":8,"endColumn":12},{"ruleId":"891","severity":1,"message":"953","line":9,"column":8,"nodeType":"893","messageId":"894","endLine":9,"endColumn":27},{"ruleId":"891","severity":1,"message":"997","line":10,"column":10,"nodeType":"893","messageId":"894","endLine":10,"endColumn":15},{"ruleId":"891","severity":1,"message":"957","line":11,"column":10,"nodeType":"893","messageId":"894","endLine":11,"endColumn":20},{"ruleId":"891","severity":1,"message":"959","line":12,"column":8,"nodeType":"893","messageId":"894","endLine":12,"endColumn":19},{"ruleId":"891","severity":1,"message":"963","line":14,"column":8,"nodeType":"893","messageId":"894","endLine":14,"endColumn":18},{"ruleId":"891","severity":1,"message":"998","line":15,"column":8,"nodeType":"893","messageId":"894","endLine":15,"endColumn":26},{"ruleId":"891","severity":1,"message":"999","line":16,"column":8,"nodeType":"893","messageId":"894","endLine":16,"endColumn":22},{"ruleId":"891","severity":1,"message":"985","line":33,"column":15,"nodeType":"893","messageId":"894","endLine":33,"endColumn":21},{"ruleId":"891","severity":1,"message":"920","line":34,"column":17,"nodeType":"893","messageId":"894","endLine":34,"endColumn":27},{"ruleId":"891","severity":1,"message":"896","line":1,"column":17,"nodeType":"893","messageId":"894","endLine":1,"endColumn":26},{"ruleId":"891","severity":1,"message":"1000","line":9,"column":10,"nodeType":"893","messageId":"894","endLine":9,"endColumn":18},{"ruleId":"891","severity":1,"message":"1001","line":16,"column":10,"nodeType":"893","messageId":"894","endLine":16,"endColumn":15},{"ruleId":"970","severity":1,"message":"971","line":44,"column":38,"nodeType":"972","messageId":"973","endLine":44,"endColumn":40},{"ruleId":"913","severity":1,"message":"1002","line":57,"column":41,"nodeType":"915","endLine":57,"endColumn":43,"suggestions":"1003"},{"ruleId":"891","severity":1,"message":"1004","line":137,"column":11,"nodeType":"893","messageId":"894","endLine":137,"endColumn":28},{"ruleId":"970","severity":1,"message":"971","line":222,"column":25,"nodeType":"972","messageId":"973","endLine":222,"endColumn":27},{"ruleId":"930","severity":1,"message":"931","line":301,"column":40,"nodeType":"932","messageId":"933","endLine":301,"endColumn":42},{"ruleId":"970","severity":1,"message":"971","line":308,"column":36,"nodeType":"972","messageId":"973","endLine":308,"endColumn":38},{"ruleId":"891","severity":1,"message":"896","line":1,"column":17,"nodeType":"893","messageId":"894","endLine":1,"endColumn":26},{"ruleId":"891","severity":1,"message":"897","line":3,"column":8,"nodeType":"893","messageId":"894","endLine":3,"endColumn":12},{"ruleId":"891","severity":1,"message":"935","line":4,"column":8,"nodeType":"893","messageId":"894","endLine":4,"endColumn":16},{"ruleId":"891","severity":1,"message":"901","line":9,"column":10,"nodeType":"893","messageId":"894","endLine":9,"endColumn":16},{"ruleId":"891","severity":1,"message":"1005","line":10,"column":10,"nodeType":"893","messageId":"894","endLine":10,"endColumn":13},{"ruleId":"930","severity":1,"message":"931","line":37,"column":53,"nodeType":"932","messageId":"933","endLine":37,"endColumn":55},{"ruleId":"930","severity":1,"message":"931","line":42,"column":42,"nodeType":"932","messageId":"933","endLine":42,"endColumn":44},{"ruleId":"930","severity":1,"message":"931","line":47,"column":39,"nodeType":"932","messageId":"933","endLine":47,"endColumn":41},{"ruleId":"930","severity":1,"message":"931","line":52,"column":33,"nodeType":"932","messageId":"933","endLine":52,"endColumn":35},{"ruleId":"930","severity":1,"message":"931","line":57,"column":31,"nodeType":"932","messageId":"933","endLine":57,"endColumn":33},{"ruleId":"891","severity":1,"message":"896","line":3,"column":17,"nodeType":"893","messageId":"894","endLine":3,"endColumn":26},{"ruleId":"891","severity":1,"message":"896","line":3,"column":10,"nodeType":"893","messageId":"894","endLine":3,"endColumn":19},{"ruleId":"891","severity":1,"message":"897","line":12,"column":8,"nodeType":"893","messageId":"894","endLine":12,"endColumn":12},{"ruleId":"891","severity":1,"message":"947","line":14,"column":10,"nodeType":"893","messageId":"894","endLine":14,"endColumn":18},{"ruleId":"891","severity":1,"message":"935","line":17,"column":8,"nodeType":"893","messageId":"894","endLine":17,"endColumn":16},{"ruleId":"891","severity":1,"message":"1006","line":18,"column":8,"nodeType":"893","messageId":"894","endLine":18,"endColumn":22},{"ruleId":"891","severity":1,"message":"1007","line":29,"column":12,"nodeType":"893","messageId":"894","endLine":29,"endColumn":16},{"ruleId":"913","severity":1,"message":"1008","line":32,"column":47,"nodeType":"915","endLine":32,"endColumn":49,"suggestions":"1009"},{"ruleId":"891","severity":1,"message":"1010","line":49,"column":11,"nodeType":"893","messageId":"894","endLine":49,"endColumn":26},{"ruleId":"913","severity":1,"message":"914","line":14,"column":40,"nodeType":"915","endLine":14,"endColumn":42,"suggestions":"1011"},{"ruleId":"891","severity":1,"message":"975","line":5,"column":8,"nodeType":"893","messageId":"894","endLine":5,"endColumn":12},{"ruleId":"891","severity":1,"message":"976","line":6,"column":8,"nodeType":"893","messageId":"894","endLine":6,"endColumn":18},{"ruleId":"891","severity":1,"message":"1012","line":9,"column":8,"nodeType":"893","messageId":"894","endLine":9,"endColumn":20},{"ruleId":"891","severity":1,"message":"1013","line":10,"column":8,"nodeType":"893","messageId":"894","endLine":10,"endColumn":16},{"ruleId":"891","severity":1,"message":"892","line":11,"column":8,"nodeType":"893","messageId":"894","endLine":11,"endColumn":14},{"ruleId":"891","severity":1,"message":"1014","line":12,"column":8,"nodeType":"893","messageId":"894","endLine":12,"endColumn":15},{"ruleId":"891","severity":1,"message":"947","line":15,"column":10,"nodeType":"893","messageId":"894","endLine":15,"endColumn":18},{"ruleId":"891","severity":1,"message":"1001","line":17,"column":10,"nodeType":"893","messageId":"894","endLine":17,"endColumn":15},{"ruleId":"891","severity":1,"message":"1015","line":34,"column":29,"nodeType":"893","messageId":"894","endLine":34,"endColumn":47},{"ruleId":"891","severity":1,"message":"988","line":36,"column":11,"nodeType":"893","messageId":"894","endLine":36,"endColumn":19},{"ruleId":"891","severity":1,"message":"896","line":1,"column":17,"nodeType":"893","messageId":"894","endLine":1,"endColumn":26},{"ruleId":"891","severity":1,"message":"897","line":2,"column":10,"nodeType":"893","messageId":"894","endLine":2,"endColumn":14},{"ruleId":"891","severity":1,"message":"935","line":3,"column":8,"nodeType":"893","messageId":"894","endLine":3,"endColumn":16},{"ruleId":"891","severity":1,"message":"1016","line":4,"column":10,"nodeType":"893","messageId":"894","endLine":4,"endColumn":18},{"ruleId":"891","severity":1,"message":"963","line":9,"column":8,"nodeType":"893","messageId":"894","endLine":9,"endColumn":18},{"ruleId":"891","severity":1,"message":"941","line":10,"column":8,"nodeType":"893","messageId":"894","endLine":10,"endColumn":29},{"ruleId":"891","severity":1,"message":"947","line":11,"column":10,"nodeType":"893","messageId":"894","endLine":11,"endColumn":18},{"ruleId":"891","severity":1,"message":"1017","line":12,"column":8,"nodeType":"893","messageId":"894","endLine":12,"endColumn":35},{"ruleId":"891","severity":1,"message":"1001","line":15,"column":10,"nodeType":"893","messageId":"894","endLine":15,"endColumn":15},{"ruleId":"891","severity":1,"message":"948","line":16,"column":8,"nodeType":"893","messageId":"894","endLine":16,"endColumn":12},{"ruleId":"891","severity":1,"message":"975","line":17,"column":8,"nodeType":"893","messageId":"894","endLine":17,"endColumn":12},{"ruleId":"891","severity":1,"message":"976","line":18,"column":8,"nodeType":"893","messageId":"894","endLine":18,"endColumn":18},{"ruleId":"891","severity":1,"message":"949","line":19,"column":8,"nodeType":"893","messageId":"894","endLine":19,"endColumn":16},{"ruleId":"891","severity":1,"message":"950","line":20,"column":8,"nodeType":"893","messageId":"894","endLine":20,"endColumn":20},{"ruleId":"891","severity":1,"message":"1012","line":21,"column":8,"nodeType":"893","messageId":"894","endLine":21,"endColumn":20},{"ruleId":"891","severity":1,"message":"1013","line":22,"column":8,"nodeType":"893","messageId":"894","endLine":22,"endColumn":16},{"ruleId":"891","severity":1,"message":"1014","line":24,"column":8,"nodeType":"893","messageId":"894","endLine":24,"endColumn":15},{"ruleId":"891","severity":1,"message":"1018","line":28,"column":8,"nodeType":"893","messageId":"894","endLine":28,"endColumn":35},{"ruleId":"891","severity":1,"message":"1019","line":30,"column":8,"nodeType":"893","messageId":"894","endLine":30,"endColumn":18},{"ruleId":"891","severity":1,"message":"1020","line":32,"column":10,"nodeType":"893","messageId":"894","endLine":32,"endColumn":16},{"ruleId":"891","severity":1,"message":"1021","line":39,"column":10,"nodeType":"893","messageId":"894","endLine":39,"endColumn":20},{"ruleId":"891","severity":1,"message":"1022","line":39,"column":22,"nodeType":"893","messageId":"894","endLine":39,"endColumn":36},{"ruleId":"913","severity":1,"message":"1023","line":111,"column":44,"nodeType":"915","endLine":111,"endColumn":46,"suggestions":"1024"},{"ruleId":"913","severity":1,"message":"1025","line":112,"column":38,"nodeType":"915","endLine":112,"endColumn":40,"suggestions":"1026"},{"ruleId":"913","severity":1,"message":"1027","line":113,"column":44,"nodeType":"915","endLine":113,"endColumn":46,"suggestions":"1028"},{"ruleId":"891","severity":1,"message":"987","line":28,"column":11,"nodeType":"893","messageId":"894","endLine":28,"endColumn":19},{"ruleId":"913","severity":1,"message":"1029","line":59,"column":52,"nodeType":"915","endLine":59,"endColumn":54,"suggestions":"1030"},{"ruleId":"891","severity":1,"message":"1031","line":62,"column":12,"nodeType":"893","messageId":"894","endLine":62,"endColumn":26},{"ruleId":"891","severity":1,"message":"1032","line":63,"column":12,"nodeType":"893","messageId":"894","endLine":63,"endColumn":26},{"ruleId":"891","severity":1,"message":"1033","line":68,"column":11,"nodeType":"893","messageId":"894","endLine":68,"endColumn":29},{"ruleId":"891","severity":1,"message":"1034","line":72,"column":11,"nodeType":"893","messageId":"894","endLine":72,"endColumn":24},{"ruleId":"891","severity":1,"message":"927","line":77,"column":12,"nodeType":"893","messageId":"894","endLine":77,"endColumn":19},{"ruleId":"891","severity":1,"message":"1035","line":78,"column":12,"nodeType":"893","messageId":"894","endLine":78,"endColumn":20},{"ruleId":"891","severity":1,"message":"1036","line":78,"column":22,"nodeType":"893","messageId":"894","endLine":78,"endColumn":33},{"ruleId":"891","severity":1,"message":"928","line":80,"column":11,"nodeType":"893","messageId":"894","endLine":80,"endColumn":23},{"ruleId":"891","severity":1,"message":"929","line":131,"column":11,"nodeType":"893","messageId":"894","endLine":131,"endColumn":22},{"ruleId":"930","severity":1,"message":"931","line":142,"column":46,"nodeType":"932","messageId":"933","endLine":142,"endColumn":48},{"ruleId":"930","severity":1,"message":"931","line":162,"column":46,"nodeType":"932","messageId":"933","endLine":162,"endColumn":48},{"ruleId":"930","severity":1,"message":"931","line":181,"column":46,"nodeType":"932","messageId":"933","endLine":181,"endColumn":48},{"ruleId":"930","severity":1,"message":"931","line":250,"column":29,"nodeType":"932","messageId":"933","endLine":250,"endColumn":31},{"ruleId":"930","severity":1,"message":"931","line":251,"column":29,"nodeType":"932","messageId":"933","endLine":251,"endColumn":31},{"ruleId":"930","severity":1,"message":"931","line":252,"column":29,"nodeType":"932","messageId":"933","endLine":252,"endColumn":31},{"ruleId":"891","severity":1,"message":"975","line":5,"column":8,"nodeType":"893","messageId":"894","endLine":5,"endColumn":12},{"ruleId":"891","severity":1,"message":"976","line":6,"column":8,"nodeType":"893","messageId":"894","endLine":6,"endColumn":18},{"ruleId":"891","severity":1,"message":"1012","line":9,"column":8,"nodeType":"893","messageId":"894","endLine":9,"endColumn":20},{"ruleId":"891","severity":1,"message":"1013","line":10,"column":8,"nodeType":"893","messageId":"894","endLine":10,"endColumn":16},{"ruleId":"891","severity":1,"message":"892","line":11,"column":8,"nodeType":"893","messageId":"894","endLine":11,"endColumn":14},{"ruleId":"891","severity":1,"message":"1014","line":12,"column":8,"nodeType":"893","messageId":"894","endLine":12,"endColumn":15},{"ruleId":"891","severity":1,"message":"947","line":15,"column":10,"nodeType":"893","messageId":"894","endLine":15,"endColumn":18},{"ruleId":"891","severity":1,"message":"1001","line":17,"column":10,"nodeType":"893","messageId":"894","endLine":17,"endColumn":15},{"ruleId":"891","severity":1,"message":"1015","line":34,"column":29,"nodeType":"893","messageId":"894","endLine":34,"endColumn":47},{"ruleId":"891","severity":1,"message":"988","line":36,"column":11,"nodeType":"893","messageId":"894","endLine":36,"endColumn":19},{"ruleId":"891","severity":1,"message":"892","line":2,"column":8,"nodeType":"893","messageId":"894","endLine":2,"endColumn":14},{"ruleId":"891","severity":1,"message":"1037","line":3,"column":8,"nodeType":"893","messageId":"894","endLine":3,"endColumn":17},{"ruleId":"891","severity":1,"message":"1038","line":4,"column":8,"nodeType":"893","messageId":"894","endLine":4,"endColumn":14},{"ruleId":"891","severity":1,"message":"1039","line":6,"column":8,"nodeType":"893","messageId":"894","endLine":6,"endColumn":21},{"ruleId":"891","severity":1,"message":"1040","line":7,"column":8,"nodeType":"893","messageId":"894","endLine":7,"endColumn":21},{"ruleId":"891","severity":1,"message":"1041","line":8,"column":8,"nodeType":"893","messageId":"894","endLine":8,"endColumn":19},{"ruleId":"891","severity":1,"message":"1042","line":9,"column":10,"nodeType":"893","messageId":"894","endLine":9,"endColumn":19},{"ruleId":"891","severity":1,"message":"1043","line":15,"column":8,"nodeType":"893","messageId":"894","endLine":15,"endColumn":18},{"ruleId":"1044","severity":1,"message":"1045","line":22,"column":35,"nodeType":"1046","messageId":"933","endLine":22,"endColumn":38},{"ruleId":"913","severity":1,"message":"925","line":53,"column":49,"nodeType":"915","endLine":53,"endColumn":51,"suggestions":"1047"},{"ruleId":"891","severity":1,"message":"927","line":62,"column":12,"nodeType":"893","messageId":"894","endLine":62,"endColumn":19},{"ruleId":"891","severity":1,"message":"1035","line":63,"column":12,"nodeType":"893","messageId":"894","endLine":63,"endColumn":20},{"ruleId":"891","severity":1,"message":"1036","line":63,"column":22,"nodeType":"893","messageId":"894","endLine":63,"endColumn":33},{"ruleId":"891","severity":1,"message":"928","line":65,"column":11,"nodeType":"893","messageId":"894","endLine":65,"endColumn":23},{"ruleId":"891","severity":1,"message":"929","line":81,"column":11,"nodeType":"893","messageId":"894","endLine":81,"endColumn":22},{"ruleId":"930","severity":1,"message":"931","line":91,"column":46,"nodeType":"932","messageId":"933","endLine":91,"endColumn":48},{"ruleId":"930","severity":1,"message":"931","line":119,"column":46,"nodeType":"932","messageId":"933","endLine":119,"endColumn":48},{"ruleId":"930","severity":1,"message":"931","line":143,"column":46,"nodeType":"932","messageId":"933","endLine":143,"endColumn":48},{"ruleId":"930","severity":1,"message":"931","line":148,"column":47,"nodeType":"932","messageId":"933","endLine":148,"endColumn":49},{"ruleId":"930","severity":1,"message":"931","line":148,"column":94,"nodeType":"932","messageId":"933","endLine":148,"endColumn":96},{"ruleId":"930","severity":1,"message":"931","line":178,"column":46,"nodeType":"932","messageId":"933","endLine":178,"endColumn":48},{"ruleId":"930","severity":1,"message":"931","line":183,"column":42,"nodeType":"932","messageId":"933","endLine":183,"endColumn":44},{"ruleId":"930","severity":1,"message":"931","line":183,"column":84,"nodeType":"932","messageId":"933","endLine":183,"endColumn":86},{"ruleId":"930","severity":1,"message":"931","line":193,"column":17,"nodeType":"932","messageId":"933","endLine":193,"endColumn":19},{"ruleId":"930","severity":1,"message":"931","line":208,"column":22,"nodeType":"932","messageId":"933","endLine":208,"endColumn":24},{"ruleId":"930","severity":1,"message":"931","line":223,"column":22,"nodeType":"932","messageId":"933","endLine":223,"endColumn":24},{"ruleId":"930","severity":1,"message":"931","line":253,"column":46,"nodeType":"932","messageId":"933","endLine":253,"endColumn":48},{"ruleId":"930","severity":1,"message":"931","line":258,"column":42,"nodeType":"932","messageId":"933","endLine":258,"endColumn":44},{"ruleId":"930","severity":1,"message":"931","line":258,"column":84,"nodeType":"932","messageId":"933","endLine":258,"endColumn":86},{"ruleId":"930","severity":1,"message":"931","line":268,"column":17,"nodeType":"932","messageId":"933","endLine":268,"endColumn":19},{"ruleId":"930","severity":1,"message":"931","line":283,"column":22,"nodeType":"932","messageId":"933","endLine":283,"endColumn":24},{"ruleId":"930","severity":1,"message":"931","line":298,"column":22,"nodeType":"932","messageId":"933","endLine":298,"endColumn":24},{"ruleId":"930","severity":1,"message":"931","line":321,"column":46,"nodeType":"932","messageId":"933","endLine":321,"endColumn":48},{"ruleId":"930","severity":1,"message":"931","line":326,"column":40,"nodeType":"932","messageId":"933","endLine":326,"endColumn":42},{"ruleId":"930","severity":1,"message":"931","line":326,"column":80,"nodeType":"932","messageId":"933","endLine":326,"endColumn":82},{"ruleId":"930","severity":1,"message":"931","line":336,"column":17,"nodeType":"932","messageId":"933","endLine":336,"endColumn":19},{"ruleId":"930","severity":1,"message":"931","line":351,"column":22,"nodeType":"932","messageId":"933","endLine":351,"endColumn":24},{"ruleId":"930","severity":1,"message":"931","line":366,"column":22,"nodeType":"932","messageId":"933","endLine":366,"endColumn":24},{"ruleId":"930","severity":1,"message":"931","line":436,"column":29,"nodeType":"932","messageId":"933","endLine":436,"endColumn":31},{"ruleId":"930","severity":1,"message":"931","line":437,"column":29,"nodeType":"932","messageId":"933","endLine":437,"endColumn":31},{"ruleId":"930","severity":1,"message":"931","line":438,"column":29,"nodeType":"932","messageId":"933","endLine":438,"endColumn":31},{"ruleId":"930","severity":1,"message":"931","line":439,"column":29,"nodeType":"932","messageId":"933","endLine":439,"endColumn":31},{"ruleId":"930","severity":1,"message":"931","line":440,"column":29,"nodeType":"932","messageId":"933","endLine":440,"endColumn":31},{"ruleId":"930","severity":1,"message":"931","line":441,"column":29,"nodeType":"932","messageId":"933","endLine":441,"endColumn":31},{"ruleId":"930","severity":1,"message":"931","line":28,"column":50,"nodeType":"932","messageId":"933","endLine":28,"endColumn":52},{"ruleId":"930","severity":1,"message":"936","line":32,"column":34,"nodeType":"932","messageId":"933","endLine":32,"endColumn":36},{"ruleId":"930","severity":1,"message":"931","line":52,"column":39,"nodeType":"932","messageId":"933","endLine":52,"endColumn":41},{"ruleId":"930","severity":1,"message":"936","line":56,"column":23,"nodeType":"932","messageId":"933","endLine":56,"endColumn":25},{"ruleId":"930","severity":1,"message":"931","line":63,"column":40,"nodeType":"932","messageId":"933","endLine":63,"endColumn":42},{"ruleId":"930","severity":1,"message":"936","line":67,"column":24,"nodeType":"932","messageId":"933","endLine":67,"endColumn":26},{"ruleId":"891","severity":1,"message":"1048","line":83,"column":15,"nodeType":"893","messageId":"894","endLine":83,"endColumn":24},{"ruleId":"930","severity":1,"message":"931","line":103,"column":24,"nodeType":"932","messageId":"933","endLine":103,"endColumn":26},{"ruleId":"930","severity":1,"message":"931","line":185,"column":43,"nodeType":"932","messageId":"933","endLine":185,"endColumn":45},{"ruleId":"930","severity":1,"message":"931","line":192,"column":40,"nodeType":"932","messageId":"933","endLine":192,"endColumn":42},{"ruleId":"930","severity":1,"message":"931","line":199,"column":43,"nodeType":"932","messageId":"933","endLine":199,"endColumn":45},{"ruleId":"930","severity":1,"message":"931","line":206,"column":40,"nodeType":"932","messageId":"933","endLine":206,"endColumn":42},{"ruleId":"891","severity":1,"message":"1049","line":3,"column":28,"nodeType":"893","messageId":"894","endLine":3,"endColumn":52},{"ruleId":"891","severity":1,"message":"1050","line":16,"column":5,"nodeType":"893","messageId":"894","endLine":16,"endColumn":7},{"ruleId":"891","severity":1,"message":"1051","line":18,"column":7,"nodeType":"893","messageId":"894","endLine":18,"endColumn":17},{"ruleId":"891","severity":1,"message":"1052","line":275,"column":21,"nodeType":"893","messageId":"894","endLine":275,"endColumn":29},{"ruleId":"891","severity":1,"message":"983","line":7,"column":10,"nodeType":"893","messageId":"894","endLine":7,"endColumn":19},{"ruleId":"891","severity":1,"message":"1053","line":2,"column":10,"nodeType":"893","messageId":"894","endLine":2,"endColumn":39},{"ruleId":"891","severity":1,"message":"1054","line":1,"column":9,"nodeType":"893","messageId":"894","endLine":1,"endColumn":17},{"ruleId":"891","severity":1,"message":"1055","line":5,"column":10,"nodeType":"893","messageId":"894","endLine":5,"endColumn":36},{"ruleId":"891","severity":1,"message":"1056","line":10,"column":11,"nodeType":"893","messageId":"894","endLine":10,"endColumn":21},{"ruleId":"930","severity":1,"message":"936","line":33,"column":30,"nodeType":"932","messageId":"933","endLine":33,"endColumn":32},{"ruleId":"891","severity":1,"message":"1057","line":10,"column":7,"nodeType":"893","messageId":"894","endLine":10,"endColumn":19},{"ruleId":"891","severity":1,"message":"1058","line":11,"column":10,"nodeType":"893","messageId":"894","endLine":11,"endColumn":15},{"ruleId":"891","severity":1,"message":"1059","line":12,"column":10,"nodeType":"893","messageId":"894","endLine":12,"endColumn":17},{"ruleId":"891","severity":1,"message":"1050","line":16,"column":5,"nodeType":"893","messageId":"894","endLine":16,"endColumn":7},{"ruleId":"891","severity":1,"message":"1055","line":2,"column":34,"nodeType":"893","messageId":"894","endLine":2,"endColumn":60},{"ruleId":"891","severity":1,"message":"1060","line":5,"column":52,"nodeType":"893","messageId":"894","endLine":5,"endColumn":62},{"ruleId":"891","severity":1,"message":"1052","line":39,"column":21,"nodeType":"893","messageId":"894","endLine":39,"endColumn":29},{"ruleId":"891","severity":1,"message":"1061","line":5,"column":10,"nodeType":"893","messageId":"894","endLine":5,"endColumn":20},{"ruleId":"891","severity":1,"message":"892","line":2,"column":8,"nodeType":"893","messageId":"894","endLine":2,"endColumn":14},{"ruleId":"891","severity":1,"message":"1062","line":25,"column":11,"nodeType":"893","messageId":"894","endLine":25,"endColumn":23},{"ruleId":"891","severity":1,"message":"962","line":13,"column":8,"nodeType":"893","messageId":"894","endLine":13,"endColumn":12},{"ruleId":"891","severity":1,"message":"1063","line":23,"column":7,"nodeType":"893","messageId":"894","endLine":23,"endColumn":18},{"ruleId":"891","severity":1,"message":"1064","line":24,"column":8,"nodeType":"893","messageId":"894","endLine":24,"endColumn":10},{"ruleId":"970","severity":1,"message":"971","line":33,"column":15,"nodeType":"972","messageId":"973","endLine":33,"endColumn":17},{"ruleId":"930","severity":1,"message":"931","line":109,"column":18,"nodeType":"932","messageId":"933","endLine":109,"endColumn":20},{"ruleId":"930","severity":1,"message":"931","line":109,"column":65,"nodeType":"932","messageId":"933","endLine":109,"endColumn":67},{"ruleId":"930","severity":1,"message":"931","line":109,"column":104,"nodeType":"932","messageId":"933","endLine":109,"endColumn":106},{"ruleId":"930","severity":1,"message":"931","line":114,"column":15,"nodeType":"932","messageId":"933","endLine":114,"endColumn":17},{"ruleId":"930","severity":1,"message":"931","line":114,"column":59,"nodeType":"932","messageId":"933","endLine":114,"endColumn":61},{"ruleId":"930","severity":1,"message":"931","line":114,"column":95,"nodeType":"932","messageId":"933","endLine":114,"endColumn":97},{"ruleId":"891","severity":1,"message":"1065","line":10,"column":8,"nodeType":"893","messageId":"894","endLine":10,"endColumn":31},{"ruleId":"1066","severity":1,"message":"1067","line":22,"column":7,"nodeType":"1068","messageId":"933","endLine":22,"endColumn":15},{"ruleId":"891","severity":1,"message":"1069","line":12,"column":10,"nodeType":"893","messageId":"894","endLine":12,"endColumn":32},{"ruleId":"970","severity":1,"message":"971","line":81,"column":30,"nodeType":"972","messageId":"973","endLine":81,"endColumn":32},{"ruleId":"970","severity":1,"message":"971","line":106,"column":24,"nodeType":"972","messageId":"973","endLine":106,"endColumn":26},{"ruleId":"970","severity":1,"message":"971","line":137,"column":30,"nodeType":"972","messageId":"973","endLine":137,"endColumn":32},{"ruleId":"970","severity":1,"message":"971","line":167,"column":35,"nodeType":"972","messageId":"973","endLine":167,"endColumn":37},{"ruleId":"891","severity":1,"message":"1007","line":30,"column":10,"nodeType":"893","messageId":"894","endLine":30,"endColumn":14},{"ruleId":"913","severity":1,"message":"914","line":32,"column":38,"nodeType":"915","endLine":32,"endColumn":40,"suggestions":"1070"},{"ruleId":"891","severity":1,"message":"896","line":2,"column":10,"nodeType":"893","messageId":"894","endLine":2,"endColumn":19},{"ruleId":"891","severity":1,"message":"897","line":11,"column":8,"nodeType":"893","messageId":"894","endLine":11,"endColumn":12},{"ruleId":"891","severity":1,"message":"1071","line":12,"column":8,"nodeType":"893","messageId":"894","endLine":12,"endColumn":18},{"ruleId":"891","severity":1,"message":"1072","line":20,"column":10,"nodeType":"893","messageId":"894","endLine":20,"endColumn":31},{"ruleId":"891","severity":1,"message":"1073","line":21,"column":10,"nodeType":"893","messageId":"894","endLine":21,"endColumn":16},{"ruleId":"891","severity":1,"message":"1074","line":34,"column":9,"nodeType":"893","messageId":"894","endLine":34,"endColumn":15},{"ruleId":"891","severity":1,"message":"1075","line":48,"column":11,"nodeType":"893","messageId":"894","endLine":48,"endColumn":28},{"ruleId":"913","severity":1,"message":"1076","line":51,"column":41,"nodeType":"915","endLine":51,"endColumn":43,"suggestions":"1077"},{"ruleId":"930","severity":1,"message":"931","line":106,"column":19,"nodeType":"932","messageId":"933","endLine":106,"endColumn":21},{"ruleId":"930","severity":1,"message":"931","line":152,"column":46,"nodeType":"932","messageId":"933","endLine":152,"endColumn":48},{"ruleId":"930","severity":1,"message":"931","line":152,"column":86,"nodeType":"932","messageId":"933","endLine":152,"endColumn":88},{"ruleId":"891","severity":1,"message":"1012","line":7,"column":8,"nodeType":"893","messageId":"894","endLine":7,"endColumn":20},{"ruleId":"891","severity":1,"message":"1078","line":11,"column":8,"nodeType":"893","messageId":"894","endLine":11,"endColumn":17},{"ruleId":"891","severity":1,"message":"1079","line":12,"column":8,"nodeType":"893","messageId":"894","endLine":12,"endColumn":24},{"ruleId":"891","severity":1,"message":"1013","line":13,"column":8,"nodeType":"893","messageId":"894","endLine":13,"endColumn":16},{"ruleId":"891","severity":1,"message":"1019","line":16,"column":8,"nodeType":"893","messageId":"894","endLine":16,"endColumn":18},{"ruleId":"891","severity":1,"message":"1080","line":18,"column":10,"nodeType":"893","messageId":"894","endLine":18,"endColumn":26},{"ruleId":"891","severity":1,"message":"1081","line":29,"column":8,"nodeType":"893","messageId":"894","endLine":29,"endColumn":16},{"ruleId":"891","severity":1,"message":"1082","line":29,"column":18,"nodeType":"893","messageId":"894","endLine":29,"endColumn":29},{"ruleId":"891","severity":1,"message":"1083","line":30,"column":17,"nodeType":"893","messageId":"894","endLine":30,"endColumn":25},{"ruleId":"891","severity":1,"message":"1084","line":31,"column":21,"nodeType":"893","messageId":"894","endLine":31,"endColumn":33},{"ruleId":"891","severity":1,"message":"1085","line":32,"column":9,"nodeType":"893","messageId":"894","endLine":32,"endColumn":17},{"ruleId":"891","severity":1,"message":"1086","line":20,"column":9,"nodeType":"893","messageId":"894","endLine":20,"endColumn":17},{"ruleId":"891","severity":1,"message":"1087","line":20,"column":19,"nodeType":"893","messageId":"894","endLine":20,"endColumn":30},{"ruleId":"891","severity":1,"message":"1088","line":22,"column":9,"nodeType":"893","messageId":"894","endLine":22,"endColumn":14},{"ruleId":"891","severity":1,"message":"1089","line":22,"column":16,"nodeType":"893","messageId":"894","endLine":22,"endColumn":24},{"ruleId":"891","severity":1,"message":"1090","line":57,"column":8,"nodeType":"893","messageId":"894","endLine":57,"endColumn":17},{"ruleId":"891","severity":1,"message":"1091","line":57,"column":18,"nodeType":"893","messageId":"894","endLine":57,"endColumn":30},{"ruleId":"891","severity":1,"message":"1092","line":58,"column":8,"nodeType":"893","messageId":"894","endLine":58,"endColumn":16},{"ruleId":"891","severity":1,"message":"1093","line":58,"column":17,"nodeType":"893","messageId":"894","endLine":58,"endColumn":28},{"ruleId":"891","severity":1,"message":"1094","line":59,"column":8,"nodeType":"893","messageId":"894","endLine":59,"endColumn":17},{"ruleId":"891","severity":1,"message":"1095","line":59,"column":18,"nodeType":"893","messageId":"894","endLine":59,"endColumn":30},{"ruleId":"913","severity":1,"message":"1023","line":88,"column":40,"nodeType":"915","endLine":88,"endColumn":42,"suggestions":"1096"},{"ruleId":"913","severity":1,"message":"1025","line":89,"column":34,"nodeType":"915","endLine":89,"endColumn":36,"suggestions":"1097"},{"ruleId":"913","severity":1,"message":"1027","line":90,"column":40,"nodeType":"915","endLine":90,"endColumn":42,"suggestions":"1098"},{"ruleId":"891","severity":1,"message":"1099","line":2,"column":10,"nodeType":"893","messageId":"894","endLine":2,"endColumn":23},{"ruleId":"891","severity":1,"message":"917","line":1,"column":10,"nodeType":"893","messageId":"894","endLine":1,"endColumn":21},{"ruleId":"891","severity":1,"message":"897","line":11,"column":8,"nodeType":"893","messageId":"894","endLine":11,"endColumn":12},{"ruleId":"891","severity":1,"message":"1071","line":12,"column":8,"nodeType":"893","messageId":"894","endLine":12,"endColumn":18},{"ruleId":"891","severity":1,"message":"1001","line":17,"column":10,"nodeType":"893","messageId":"894","endLine":17,"endColumn":15},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'User' is defined but never used.","'Component' is defined but never used.","'Link' is defined but never used.","'Router' is defined but never used.","'HomePageSearch' is defined but never used.","'Payment' is defined but never used.","'Supply' is defined but never used.","'StorePage' is defined but never used.","'AdminSendMessage' is defined but never used.","'StoreManagment' is defined but never used.","'UserApi' is defined but never used.","'AddDiscount' is defined but never used.","'ManagerViewStoreQuestions' is defined but never used.","'ViewStaffInformation' is defined but never used.","'ViewStorePurchaseHistory' is defined but never used.","'ViewRules' is defined but never used.","'AddPurchase' is defined but never used.","'CreatePredict' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'get_online_user'. Either include it or remove the dependency array.","ArrayExpression",["1100"],"'StoreReview' is defined but never used.","'ASSIGN_USER' is assigned a value but never used.","'ADMIN' is assigned a value but never used.","'redirectTo' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'get_discount_lists'. Either include it or remove the dependency array.",["1101"],"React Hook useEffect has a missing dependency: 'get_predicts_lists'. Either include it or remove the dependency array.",["1102"],"React Hook useEffect has a missing dependency: 'get_categories_of_stores'. Either include it or remove the dependency array.",["1103"],"'checked' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'hadleSubmit' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'rule_name' is assigned a value but never used.","'HomeIcon' is defined but never used.","Expected '!==' and instead saw '!='.","'admin_answer_user_question_fields' is assigned a value but never used.","'GridActionsCellItem' is defined but never used.","'ProductionQuantityLimitsIcon' is defined but never used.","'IconButton' is defined but never used.","'FormDialogPermissions' is defined but never used.","'ConnectApi' is defined but never used.","'Register' is defined but never used.","'Box' is defined but never used.","'ImageListItem' is defined but never used.","'ImageList' is defined but never used.","'StoreApi' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'ListSubheader' is defined but never used.","'CartApi' is defined but never used.","'MenuListComposition' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Typography' is defined but never used.","'Rating' is defined but never used.","'BasicRating' is defined but never used.","'ShoppingCart' is defined but never used.","'ThirtyFpsRounded' is defined but never used.","'Grid' is defined but never used.","'FormDialog' is defined but never used.","'Item' is assigned a value but never used.","'GUEST' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'escapeLeadingUnderscores' is defined but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.",["1104"],"'security_question' is assigned a value but never used.","'handleInputChange_old_password' is assigned a value but never used.","'handleInputChange_new_password' is assigned a value but never used.","'handleInputChange_reEntered_password' is assigned a value but never used.","'propSatisfies' is defined but never used.","'useEffect' is defined but never used.","'products' is assigned a value but never used.","'stores' is assigned a value but never used.","'productApi' is assigned a value but never used.","'storeApi' is assigned a value but never used.","'adminApi' is assigned a value but never used.","'store_id' is assigned a value but never used.","no-use-before-define","'adminApi' was used before it was defined.","usedBeforeDefined","'show_products' is assigned a value but never used.","'get_notifications' is assigned a value but never used.","'res' is assigned a value but never used.","'useLocation' is defined but never used.","'Paper' is defined but never used.","'StoreProductsTable' is defined but never used.","'AllStoresTable' is defined but never used.","'Navigate' is defined but never used.","'Utils' is defined but never used.","React Hook useEffect has a missing dependency: 'get_permissionss'. Either include it or remove the dependency array.",["1105"],"'handleInputChange' is assigned a value but never used.","'set' is defined but never used.","'SocketProvider' is defined but never used.","'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'get_notifications_list'. Either include it or remove the dependency array.",["1106"],"'get_online_user' is assigned a value but never used.",["1107"],"'ListItemIcon' is defined but never used.","'Checkbox' is defined but never used.","'Divider' is defined but never used.","'setPurchaseHistory' is assigned a value but never used.","'AdminApi' is defined but never used.","'StoreManagmentProductsTable' is defined but never used.","'ControlledRadioButtonsGroup' is defined but never used.","'FolderIcon' is defined but never used.","'purple' is defined but never used.","'RemoveRoad' is defined but never used.","'ReplayOutlined' is defined but never used.","React Hook useEffect has a missing dependency: 'get_purchase_policy'. Either include it or remove the dependency array.",["1108"],"React Hook useEffect has a missing dependency: 'send_predicts'. Either include it or remove the dependency array.",["1109"],"React Hook useEffect has a missing dependency: 'get_discount_policy'. Either include it or remove the dependency array.",["1110"],"React Hook useEffect has a missing dependency: 'get_purchases_predict_lists'. Either include it or remove the dependency array.",["1111"],"'discountChosen' is assigned a value but never used.","'categoryChosen' is assigned a value but never used.","'save_discount_rule' is assigned a value but never used.","'save_category' is assigned a value but never used.","'ruleName' is assigned a value but never used.","'setRuleName' is assigned a value but never used.","'TextField' is defined but never used.","'Dialog' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogTitle' is defined but never used.","'useParams' is defined but never used.","'BasicTable' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern",["1112"],"'curr_year' is assigned a value but never used.","'DELETE_PRODUCT_FROM_CART' is defined but never used.","'qs' is assigned a value but never used.","'SESSION_ID' is assigned a value but never used.","'response' is assigned a value but never used.","'sortAndDeduplicateDiagnostics' is defined but never used.","'useState' is defined but never used.","'EMPLOYEE_BASE_REST_API_URL' is defined but never used.","'setMessage' is assigned a value but never used.","'response_obj' is assigned a value but never used.","'Store' is defined but never used.","'Product' is defined but never used.","'LOGIN_PATH' is defined but never used.","'RateReview' is defined but never used.","'handleToggle' is assigned a value but never used.","'policiesApi' is assigned a value but never used.","'id' is assigned a value but never used.","'AddShoppingCartOutlined' is defined but never used.","no-dupe-keys","Duplicate key 'snackbar'.","ObjectExpression","'FaceRetouchingOffSharp' is defined but never used.",["1113"],"'PersonIcon' is defined but never used.","'SettingsAccessibility' is defined but never used.","'isDate' is defined but never used.","'bid_id' is assigned a value but never used.","'is_confirm_fields' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'view_bids_status'. Either include it or remove the dependency array.",["1114"],"'FormGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'ContactsOutlined' is defined but never used.","'toremove' is assigned a value but never used.","'setToremove' is assigned a value but never used.","'setDense' is assigned a value but never used.","'setSecondary' is assigned a value but never used.","'generate' is assigned a value but never used.","'rulename' is assigned a value but never used.","'setRulename' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'purchases' is assigned a value but never used.","'setPurchases' is assigned a value but never used.","'predicts' is assigned a value but never used.","'setPredicts' is assigned a value but never used.","'discounts' is assigned a value but never used.","'setDiscounts' is assigned a value but never used.",["1115"],["1116"],["1117"],"'ProductReview' is defined but never used.",{"desc":"1118","fix":"1119"},{"desc":"1120","fix":"1121"},{"desc":"1122","fix":"1123"},{"desc":"1124","fix":"1125"},{"desc":"1118","fix":"1126"},{"desc":"1127","fix":"1128"},{"desc":"1129","fix":"1130"},{"desc":"1118","fix":"1131"},{"desc":"1132","fix":"1133"},{"desc":"1134","fix":"1135"},{"desc":"1136","fix":"1137"},{"desc":"1138","fix":"1139"},{"desc":"1124","fix":"1140"},{"desc":"1118","fix":"1141"},{"desc":"1142","fix":"1143"},{"desc":"1132","fix":"1144"},{"desc":"1134","fix":"1145"},{"desc":"1136","fix":"1146"},"Update the dependencies array to be: [get_online_user]",{"range":"1147","text":"1148"},"Update the dependencies array to be: [get_discount_lists]",{"range":"1149","text":"1150"},"Update the dependencies array to be: [get_predicts_lists]",{"range":"1151","text":"1152"},"Update the dependencies array to be: [get_categories_of_stores]",{"range":"1153","text":"1154"},{"range":"1155","text":"1148"},"Update the dependencies array to be: [get_permissionss]",{"range":"1156","text":"1157"},"Update the dependencies array to be: [get_notifications_list]",{"range":"1158","text":"1159"},{"range":"1160","text":"1148"},"Update the dependencies array to be: [get_purchase_policy]",{"range":"1161","text":"1162"},"Update the dependencies array to be: [send_predicts]",{"range":"1163","text":"1164"},"Update the dependencies array to be: [get_discount_policy]",{"range":"1165","text":"1166"},"Update the dependencies array to be: [get_purchases_predict_lists]",{"range":"1167","text":"1168"},{"range":"1169","text":"1154"},{"range":"1170","text":"1148"},"Update the dependencies array to be: [view_bids_status]",{"range":"1171","text":"1172"},{"range":"1173","text":"1162"},{"range":"1174","text":"1164"},{"range":"1175","text":"1166"},[4235,4237],"[get_online_user]",[3402,3404],"[get_discount_lists]",[3452,3454],"[get_predicts_lists]",[3508,3510],"[get_categories_of_stores]",[1554,1556],[2045,2047],"[get_permissionss]",[1229,1231],"[get_notifications_list]",[447,449],[4323,4325],"[get_purchase_policy]",[4366,4368],"[send_predicts]",[4415,4417],"[get_discount_policy]",[2022,2024],"[get_purchases_predict_lists]",[1875,1877],[1131,1133],[2078,2080],"[view_bids_status]",[2925,2927],[2964,2966],[3009,3011]]