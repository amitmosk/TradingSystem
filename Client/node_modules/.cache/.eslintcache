[{"C:\\Users\\galbr\\OneDrive\\Documents\\GitHub\\TradingSystem\\Client\\src\\index.js":"1","C:\\Users\\galbr\\OneDrive\\Documents\\GitHub\\TradingSystem\\Client\\src\\App.js":"2","C:\\Users\\galbr\\OneDrive\\Documents\\GitHub\\TradingSystem\\Client\\src\\reportWebVitals.js":"3","C:\\Users\\galbr\\OneDrive\\Documents\\GitHub\\TradingSystem\\Client\\src\\components\\Register.js":"4","C:\\Users\\galbr\\OneDrive\\Documents\\GitHub\\TradingSystem\\Client\\src\\components\\Login.js":"5","C:\\Users\\galbr\\OneDrive\\Documents\\GitHub\\TradingSystem\\Client\\src\\components\\Supply.js":"6","C:\\Users\\galbr\\OneDrive\\Documents\\GitHub\\TradingSystem\\Client\\src\\components\\HomePageSearch.js":"7","C:\\Users\\galbr\\OneDrive\\Documents\\GitHub\\TradingSystem\\Client\\src\\components\\Payment.js":"8","C:\\Users\\galbr\\OneDrive\\Documents\\GitHub\\TradingSystem\\Client\\src\\components\\StorePage.js":"9","C:\\Users\\galbr\\OneDrive\\Documents\\GitHub\\TradingSystem\\Client\\src\\API\\train.ts":"10","C:\\Users\\galbr\\OneDrive\\Documents\\GitHub\\TradingSystem\\Client\\src\\API\\ProductApi.js":"11","C:\\Users\\galbr\\OneDrive\\Documents\\GitHub\\TradingSystem\\Client\\src\\API\\ConnectApi.js":"12","C:\\Users\\galbr\\OneDrive\\Documents\\GitHub\\TradingSystem\\Client\\src\\API\\ApiPaths.js":"13","C:\\Users\\galbr\\OneDrive\\Documents\\GitHub\\TradingSystem\\Client\\src\\API\\Response.js":"14","C:\\Users\\galbr\\OneDrive\\Documents\\GitHub\\TradingSystem\\Client\\src\\ServiceObjects\\Product.js":"15","C:\\Users\\galbr\\OneDrive\\Documents\\GitHub\\TradingSystem\\Client\\src\\ServiceObjects\\ProductReview.js":"16","C:\\Users\\galbr\\OneDrive\\Documents\\GitHub\\TradingSystem\\Client\\src\\components\\ProductPage.js":"17","C:\\Users\\galbr\\OneDrive\\Documents\\GitHub\\TradingSystem\\Client\\src\\API\\CartApi.js":"18","C:\\Users\\galbr\\OneDrive\\Documents\\GitHub\\TradingSystem\\Client\\src\\ServiceObjects\\Cart.js":"19"},{"size":669,"mtime":1652717000000,"results":"20","hashOfConfig":"21"},{"size":1510,"mtime":1653032445347,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1652115186000,"results":"23","hashOfConfig":"21"},{"size":4470,"mtime":1652966912601,"results":"24","hashOfConfig":"21"},{"size":4126,"mtime":1652966912598,"results":"25","hashOfConfig":"21"},{"size":4560,"mtime":1652966912603,"results":"26","hashOfConfig":"21"},{"size":2443,"mtime":1652796798000,"results":"27","hashOfConfig":"21"},{"size":4353,"mtime":1652966912600,"results":"28","hashOfConfig":"21"},{"size":2646,"mtime":1652966912602,"results":"29","hashOfConfig":"21"},{"size":537,"mtime":1652716868000,"results":"30","hashOfConfig":"21"},{"size":6408,"mtime":1652997558593,"results":"31","hashOfConfig":"21"},{"size":1556,"mtime":1652776300000,"results":"32","hashOfConfig":"21"},{"size":7499,"mtime":1652977418438,"results":"33","hashOfConfig":"21"},{"size":296,"mtime":1652784098000,"results":"34","hashOfConfig":"21"},{"size":902,"mtime":1652998544481,"results":"35","hashOfConfig":"21"},{"size":469,"mtime":1652977418438,"results":"36","hashOfConfig":"21"},{"size":3416,"mtime":1653030539050,"results":"37","hashOfConfig":"21"},{"size":1066,"mtime":1652994363347,"results":"38","hashOfConfig":"21"},{"size":363,"mtime":1652805292000,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},"1rkfbe8",{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":1,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},"C:\\Users\\galbr\\OneDrive\\Documents\\GitHub\\TradingSystem\\Client\\src\\index.js",["108"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n//import 'semantic-ui-css/semantic.min.css';\nimport Button from '@mui/material/Button';\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",[],"C:\\Users\\galbr\\OneDrive\\Documents\\GitHub\\TradingSystem\\Client\\src\\App.js",["109","110","111","112","113","114","115","116","117","118"],[],"C:\\Users\\galbr\\OneDrive\\Documents\\GitHub\\TradingSystem\\Client\\src\\reportWebVitals.js",[],[],"C:\\Users\\galbr\\OneDrive\\Documents\\GitHub\\TradingSystem\\Client\\src\\components\\Register.js",["119","120","121"],[],"import React, { Component } from 'react';\r\nimport \"./Login.css\";\r\nimport Button from '@mui/material/Button';\r\nimport { ConnectApi } from '../API/ConnectApi';\r\n\r\nconst axios = require('axios');\r\nconst EMPLOYEE_BASE_REST_API_URL = \"http://localhost:8080/amit\";\r\n\r\nexport default class Login extends Component {\r\n    static displayName = Login.name;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            registerError: undefined,\r\n            email: undefined,\r\n            password: undefined,\r\n            firstname: undefined,\r\n            lastname: undefined,\r\n        };\r\n\r\n    }\r\n    \r\n    // handleInputChange(event){\r\n    //     const target = event.target;\r\n    //     this.setState({\r\n    //         [target.name]: target.value\r\n    //     });\r\n    // }\r\n    \r\n    async handleSubmit(event){\r\n        event.preventDefault();\r\n        const {username, password, role} = this.state;\r\n        const loginRedirectAndRes = await this.authApi.Login(username, password, role);\r\n        if(loginRedirectAndRes) {\r\n            const loginRes = loginRedirectAndRes.data;\r\n\r\n            if (loginRes && loginRes.isSuccess) {\r\n                this.props.loginUpdateHandler(username, this.getUserRole(role))\r\n            } else {\r\n                this.setState({\r\n                    registerError: loginRes.error\r\n                })\r\n            }\r\n        } else {\r\n            this.setState({\r\n                registerError: \"You need to be a guest\"\r\n            })\r\n        }\r\n    }\r\n    \r\n    // getUserRole(role){\r\n    //     return role === \"member\" ? UserRole.Member :\r\n    //         role === \"admin\" ? UserRole.Admin : \r\n    //         undefined\r\n    // }\r\n\r\n\r\n    //async componentDidUpdate()\r\n    \r\n    async componentDidMount() {\r\n        // const response =await axios.get(EMPLOYEE_BASE_REST_API_URL).then(res => res).catch(err => err);\r\n        // console.log(response.data);\r\n        // let x = response;\r\n        // // this.setState({\r\n        // //     [\"email\"]: \"response.data.wasException\"\r\n        // // });\r\n        \r\n\r\n        // return response.data;\r\n\r\n    }\r\n\r\n    async register(){\r\n        let email = this.state.email;\r\n        let password = this.state.password;\r\n        let firstname = this.state.firstname;\r\n        let lastname = this.state.lastname;\r\n        console.log(\"email is \"+email+\" , password is \"+password+\"\\n\");\r\n        let response = await ConnectApi.register(email, password, firstname, lastname);\r\n        alert(response.message);\r\n    }\r\n    \r\n    render() {\r\n        const {redirectTo} = this.state\r\n            return (\r\n                <main class=\"LoginMain\">\r\n                    <div class=\"LoginWindow\">\r\n                        <h3>Register</h3>\r\n                        <form class=\"LoginForm\" onSubmit={this.handleSubmit}>\r\n                            {this.state.registerError ?\r\n                                <div class=\"CenterItemContainer\"><label>{this.state.registerError}</label></div> : null}\r\n                            <input type=\"text\" name=\"email\" value={this.state.email}\r\n                                    placeholder=\"Email\" required/>\r\n                            <input type=\"password\" name=\"password\" value={this.state.password}\r\n                                    placeholder=\"Password\" required/>\r\n                            <input type=\"firstname\" name=\"firstname\" value={this.state.firstname}\r\n                                    placeholder=\"First name\" required/>\r\n                            <input type=\"lastname\" name=\"lastname\" value={this.state.lastname}\r\n                                    placeholder=\"Last name\" required/>\r\n                            {/* <select name=\"role\" value={this.state.role} required>\r\n                                <option value=\"member\">Member</option>\r\n                                <option value=\"admin\">Admin</option>\r\n                            </select> */}\r\n                            <div className=\"ConnectRegister\">\r\n                                \r\n                                {/* <Link to=\"/register\">Create new account</Link> */}\r\n                                <Button onClick={() => this.register()} variant=\"contained\">Login </Button>\r\n                                {/* <input class=\"action\" type=\"submit\" value=\"Login\"/> */}\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </main>\r\n            );\r\n        \r\n    }\r\n}","C:\\Users\\galbr\\OneDrive\\Documents\\GitHub\\TradingSystem\\Client\\src\\components\\Login.js",["122","123","124","125"],[],"import React, { Component } from 'react';\r\nimport \"./Login.css\";\r\nimport Button from '@mui/material/Button';\r\nimport Link from '@mui/material/Button';\r\nimport { ConnectApi } from '../API/ConnectApi';\r\nimport Register from \"./Register.js\";\r\n\r\nconst axios = require('axios');\r\nconst EMPLOYEE_BASE_REST_API_URL = \"http://localhost:8080/amit\";\r\n\r\nexport default class Login extends Component {\r\n    static displayName = Login.name;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            loginError: undefined,\r\n            email: undefined,\r\n            password: undefined,\r\n        };\r\n        // this.authApi = new AuthApi();\r\n        \r\n        // this.handleInputChange = this.handleInputChange.bind(this);\r\n        // this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    \r\n    // handleInputChange(event){\r\n    //     const target = event.target;\r\n    //     this.setState({\r\n    //         [target.name]: target.value\r\n    //     });\r\n    // }\r\n    \r\n    async handleSubmit(event){\r\n        event.preventDefault();\r\n        const {username, password, role} = this.state;\r\n        const loginRedirectAndRes = await this.authApi.Login(username, password, role);\r\n        if(loginRedirectAndRes) {\r\n            const loginRes = loginRedirectAndRes.data;\r\n\r\n            if (loginRes && loginRes.isSuccess) {\r\n                this.props.loginUpdateHandler(username, this.getUserRole(role))\r\n            } else {\r\n                this.setState({\r\n                    loginError: loginRes.error\r\n                })\r\n            }\r\n        } else {\r\n            this.setState({\r\n                loginError: \"You need to be a guest\"\r\n            })\r\n        }\r\n    }\r\n    \r\n    // getUserRole(role){\r\n    //     return role === \"member\" ? UserRole.Member :\r\n    //         role === \"admin\" ? UserRole.Admin : \r\n    //         undefined\r\n    // }\r\n\r\n\r\n    //async componentDidUpdate()\r\n    \r\n    async componentDidMount() {\r\n        // const response =await axios.get(EMPLOYEE_BASE_REST_API_URL).then(res => res).catch(err => err);\r\n        // console.log(response.data);\r\n        // let x = response;\r\n        // // this.setState({\r\n        // //     [\"email\"]: \"response.data.wasException\"\r\n        // // });\r\n        \r\n\r\n        // return response.data;\r\n\r\n    }\r\n\r\n    async login(){\r\n        let email = this.state.email;\r\n        let password = this.state.password;\r\n        console.log(\"email is \"+email+\" , password is \"+password+\"\\n\");\r\n        let response = await ConnectApi.login(email, password);\r\n        alert(response.message);\r\n    }\r\n    \r\n    render() {\r\n        const {redirectTo} = this.state\r\n            return (\r\n                <main class=\"LoginMain\">\r\n                    <div class=\"LoginWindow\">\r\n                        <h3>Login</h3>\r\n                        <form class=\"LoginForm\" onSubmit={this.handleSubmit}>\r\n                            {this.state.loginError ?\r\n                                <div class=\"CenterItemContainer\"><label>{this.state.loginError}</label></div> : null}\r\n                            <input type=\"text\" name=\"email\" value={this.state.email}\r\n                                    placeholder=\"Email\" required/>\r\n                            <input type=\"password\" name=\"password\" value={this.state.password}\r\n                                    placeholder=\"Password\" required/>\r\n                            \r\n                            <div className=\"ConnectRegister\">\r\n                                \r\n                                {/* <Link to=\"/register\">Create new account</Link> */}\r\n                                <Button onClick={() => this.login()} variant=\"contained\">Login </Button>\r\n                                <Link href=\"/Register\" underline=\"hover\">\r\n                                {'New user? Cretae new account'}\r\n                                </Link>\r\n                                {/* <input class=\"action\" type=\"submit\" value=\"Login\"/> */}\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </main>\r\n            );\r\n        \r\n    }\r\n}","C:\\Users\\galbr\\OneDrive\\Documents\\GitHub\\TradingSystem\\Client\\src\\components\\Supply.js",["126","127","128","129"],[],"import React, { Component } from 'react';\r\nimport \"./Supply.css\";\r\nimport Button from '@mui/material/Button';\r\nimport { ConnectApi } from '../API/ConnectApi';\r\n\r\nconst axios = require('axios');\r\nconst EMPLOYEE_BASE_REST_API_URL = \"http://localhost:8080/amit\";\r\n\r\nexport default class Supply extends Component {\r\n    static displayName = Supply.name;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            supplyError: undefined,\r\n            country: undefined,\r\n            city: undefined,\r\n            street: undefined,\r\n            apartmentnumber: undefined,\r\n        };\r\n\r\n    }\r\n    \r\n    // handleInputChange(event){\r\n    //     const target = event.target;\r\n    //     this.setState({\r\n    //         [target.name]: target.value\r\n    //     });\r\n    // }\r\n    \r\n    async handleSubmit(event){\r\n        event.preventDefault();\r\n        const {username, password, role} = this.state;\r\n        const loginRedirectAndRes = await this.authApi.Login(username, password, role);\r\n        if(loginRedirectAndRes) {\r\n            const loginRes = loginRedirectAndRes.data;\r\n\r\n            if (loginRes && loginRes.isSuccess) {\r\n                this.props.loginUpdateHandler(username, this.getUserRole(role))\r\n            } else {\r\n                this.setState({\r\n                    loginError: loginRes.error\r\n                })\r\n            }\r\n        } else {\r\n            this.setState({\r\n                loginError: \"You need to be a guest\"\r\n            })\r\n        }\r\n    }\r\n    \r\n    // getUserRole(role){\r\n    //     return role === \"member\" ? UserRole.Member :\r\n    //         role === \"admin\" ? UserRole.Admin : \r\n    //         undefined\r\n    // }\r\n\r\n\r\n    //async componentDidUpdate()\r\n    \r\n    async componentDidMount() {\r\n        // const response =await axios.get(EMPLOYEE_BASE_REST_API_URL).then(res => res).catch(err => err);\r\n        // console.log(response.data);\r\n        // let x = response;\r\n        // // this.setState({\r\n        // //     [\"email\"]: \"response.data.wasException\"\r\n        // // });\r\n        \r\n\r\n        // return response.data;\r\n\r\n    }\r\n\r\n    async supply(){\r\n        let country = this.state.country;\r\n        let city = this.state.city;\r\n        let street = this.state.street;\r\n        let apartmentnumber = this.state.apartmentnumber;\r\n        console.log(\"country is \"+country+\" , city is \"+city+\" , street is \"+street+\" , apartmentnumber is \"+ apartmentnumber+\"\\n\");\r\n        // let response = await ConnectApi.register(email, password, firstname, lastname);\r\n        // alert(response.message);\r\n    }\r\n    \r\n    render() {\r\n        const {redirectTo} = this.state\r\n            return (\r\n                <main class=\"LoginMain\">\r\n                    <div class=\"LoginWindow\">\r\n                        <h3>Supply</h3>\r\n                        <form class=\"LoginForm\" onSubmit={this.handleSubmit}>\r\n                            {this.state.loginError ?\r\n                                <div class=\"CenterItemContainer\"><label>{this.state.loginError}</label></div> : null}\r\n                            <input type=\"country\" name=\"country\" value={this.state.country}\r\n                                    placeholder=\"Country\" required/>\r\n                            <input type=\"city\" name=\"city\" value={this.state.city}\r\n                                    placeholder=\"City\" required/>\r\n                            <input type=\"street\" name=\"street\" value={this.state.street}\r\n                                    placeholder=\"Street\" required/>\r\n                            <input type=\"apartmentnumber\" name=\"apartmentnumber\" value={this.state.apartmentnumber}\r\n                                    placeholder=\"Apartment no.\" required/>\r\n                            \r\n                            {/* <select name=\"role\" value={this.state.role} required>\r\n                                <option value=\"member\">Member</option>\r\n                                <option value=\"admin\">Admin</option>\r\n                            </select> */}\r\n                            <div className=\"ConnectRegister\">\r\n                                \r\n                                {/* <Link to=\"/register\">Create new account</Link> */}\r\n                                <Button onClick={() => this.supply()} variant=\"contained\">Send </Button>\r\n                                {/* <input class=\"action\" type=\"submit\" value=\"Login\"/> */}\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </main>\r\n            );\r\n        \r\n    }\r\n}","C:\\Users\\galbr\\OneDrive\\Documents\\GitHub\\TradingSystem\\Client\\src\\components\\HomePageSearch.js",["130","131","132","133"],[],"import React, { Component } from \"react\";\r\nimport \"./HomePageSearch.css\"\r\nimport Button from '@mui/material/Button';\r\nimport { Input } from \"@mui/material\";\r\nimport { ProductApi } from \"../API/ProductApi\";\r\nimport { ConnectApi } from \"../API/ConnectApi\";\r\nimport train from \"../API/train.ts\";\r\n\r\nconst axios = require('axios');\r\nconst EMPLOYEE_BASE_REST_API_URL = \"http://localhost:8080/api/amit\";\r\nconst ariaLabel = { 'aria-label': 'description' };\r\n\r\n\r\nexport default class HomePageSearch extends Component  {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            productname:\"\",\r\n            rt: undefined,\r\n\r\n        };\r\n        this.connectAPI = new ConnectApi();\r\n        this.productApi = new ProductApi();\r\n    }\r\n    \r\n    \r\n\r\n\r\n    \r\n    async find_product_by_name(event){\r\n        console.log(\"yyyyyyyyyyyyyyyyyyyyyyyyyyy\\n\\n\\n\\n\\n\");\r\n        let name = this.state[\"productname\"];\r\n        console.log(name+\"\\n\\n\\n\")\r\n        // let response = await ProductApi.find_product_by_name(name);\r\n        let response = this.productApi.testtttt(\" ya gever\");\r\n\r\n        console.log(\"\\n\\n\"+response.value+\"\\n\\n\");\r\n        console.log(\"ttttttttttttttttttttttttttttt\\n\\n\\n\\n\\n\");\r\n\r\n       \r\n    }\r\n    // async componentDidMount() {\r\n       \r\n    // }\r\n    render () {\r\n        const {redirectTo} = this.state\r\n        return (\r\n            <main class=\"HomePageSearchMain\" >\r\n                    <div class=\"HomePageSearchWindow \" >\r\n                        <h3>Welcome To the Green Trading System</h3>\r\n                        <form class=\"HomePageSearchForm\" >\r\n                        <Input placeholder=\"Search product by name\"  inputProps={ariaLabel} onChange={(event) => {this.setState({ \"productname\": event.target.value});}}  />\r\n                            {/* <input type=\"text\" name=\"productname\" value={this.state.productname}\r\n                                    placeholder=\"Search product by name\" required/> */}\r\n                                    <Button onClick={() => this.find_product_by_name()} variant=\"contained\">Search </Button>\r\n                            {/* <button type=\"submit\" value=\"Search\"  /> */}\r\n                           \r\n                            {/* onClick={this.search_product_by_name.bind(this)} */}\r\n                            \r\n                        </form>\r\n                    </div>\r\n                </main>\r\n    \r\n        );\r\n      }\r\n  \r\n\r\n};\r\n\r\n","C:\\Users\\galbr\\OneDrive\\Documents\\GitHub\\TradingSystem\\Client\\src\\components\\Payment.js",["134","135","136","137","138"],[],"import React, { Component } from 'react';\r\nimport \"./Payment.css\";\r\nimport Button from '@mui/material/Button';\r\nimport { ConnectApi } from '../API/ConnectApi';\r\n\r\nconst axios = require('axios');\r\nconst EMPLOYEE_BASE_REST_API_URL = \"http://localhost:8080/amit\";\r\n\r\nexport default class Payment extends Component {\r\n    static displayName = Payment.name;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            paymentError: undefined,\r\n            creditnumber: undefined,\r\n            experationdate: undefined,\r\n            cvv: undefined,\r\n        };\r\n\r\n    }\r\n    \r\n    // handleInputChange(event){\r\n    //     const target = event.target;\r\n    //     this.setState({\r\n    //         [target.name]: target.value\r\n    //     });\r\n    // }\r\n    \r\n    async handleSubmit(event){\r\n        event.preventDefault();\r\n        const {username, password, role} = this.state;\r\n        const loginRedirectAndRes = await this.authApi.Login(username, password, role);\r\n        if(loginRedirectAndRes) {\r\n            const loginRes = loginRedirectAndRes.data;\r\n\r\n            if (loginRes && loginRes.isSuccess) {\r\n                this.props.loginUpdateHandler(username, this.getUserRole(role))\r\n            } else {\r\n                this.setState({\r\n                    loginError: loginRes.error\r\n                })\r\n            }\r\n        } else {\r\n            this.setState({\r\n                loginError: \"You need to be a guest\"\r\n            })\r\n        }\r\n    }\r\n    \r\n    // getUserRole(role){\r\n    //     return role === \"member\" ? UserRole.Member :\r\n    //         role === \"admin\" ? UserRole.Admin : \r\n    //         undefined\r\n    // }\r\n\r\n\r\n    //async componentDidUpdate()\r\n    \r\n    async componentDidMount() {\r\n        // const response =await axios.get(EMPLOYEE_BASE_REST_API_URL).then(res => res).catch(err => err);\r\n        // console.log(response.data);\r\n        // let x = response;\r\n        // // this.setState({\r\n        // //     [\"email\"]: \"response.data.wasException\"\r\n        // // });\r\n        \r\n\r\n        // return response.data;\r\n\r\n    }\r\n\r\n    async pay(){\r\n        let creditnumber = this.state.creditnumber;\r\n        let experationdate = this.state.experationdate;\r\n        let cvv = this.state.cvv;\r\n        console.log(\"creditnumber is \"+creditnumber+\" , experationdate is \"+experationdate+\", experationdate is \"+experationdate+\"\\n\");\r\n        // let response = await ConnectApi.register(email, password, firstname, lastname);\r\n        // alert(response.message);\r\n    }\r\n    \r\n    render() {\r\n        const {redirectTo} = this.state\r\n            return (\r\n                <main class=\"LoginMain\">\r\n                    <div class=\"LoginWindow\">\r\n                        <h3>Payment</h3>\r\n                        <form class=\"LoginForm\" onSubmit={this.handleSubmit}>\r\n                            {this.state.loginError ?\r\n                                <div class=\"CenterItemContainer\"><label>{this.state.loginError}</label></div> : null}\r\n                            <input type=\"creditnumber\" name=\"creditnumber\" value={this.state.creditnumber}\r\n                                    placeholder=\"Credit Number\" required/>\r\n                            <input type=\"experationdate\" name=\"experationdate\" value={this.state.experationdate}\r\n                                    placeholder=\"Experation Date\" required/>\r\n                            <input type=\"cvv\" name=\"cvv\" value={this.state.cvv}\r\n                                    placeholder=\"CVV\" required/>\r\n                           \r\n                            {/* <select name=\"role\" value={this.state.role} required>\r\n                                <option value=\"member\">Member</option>\r\n                                <option value=\"admin\">Admin</option>\r\n                            </select> */}\r\n                            <div className=\"ConnectRegister\">\r\n                                \r\n                                {/* <Link to=\"/register\">Create new account</Link> */}\r\n                                <Button onClick={() => this.pay()} variant=\"contained\">Pay </Button>\r\n                                {/* <input class=\"action\" type=\"submit\" value=\"Login\"/> */}\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </main>\r\n            );\r\n        \r\n    }\r\n}","C:\\Users\\galbr\\OneDrive\\Documents\\GitHub\\TradingSystem\\Client\\src\\components\\StorePage.js",["139","140","141","142","143","144","145"],[],"import React, { Component } from 'react';\r\nimport \"./Login.css\";\r\nimport Button from '@mui/material/Button';\r\nimport Link from '@mui/material/Button';\r\nimport { ConnectApi } from '../API/ConnectApi';\r\nimport Register from \"./Register.js\";\r\nimport Box from '@mui/material/Box';\r\n\r\nconst axios = require('axios');\r\nconst EMPLOYEE_BASE_REST_API_URL = \"http://localhost:8080/amit\";\r\n\r\nexport default class StorePage extends Component {\r\n    static displayName = StorePage.name;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            loginError: undefined,\r\n            email: undefined,\r\n            password: undefined,\r\n        };\r\n       \r\n    }\r\n    \r\n    \r\n    \r\n    async componentDidMount() {\r\n        \r\n    }\r\n\r\n\r\n    \r\n    render() {\r\n        const {redirectTo} = this.state\r\n            return (\r\n                <main class=\"LoginMain\">\r\n                    <div class=\"LoginWindow\">\r\n                        <h3>Store Name</h3>\r\n                        <Box\r\n                            sx={{\r\n                                width: 300,\r\n                                height: 300,\r\n                                backgroundColor: 'primary.dark',\r\n                                '&:hover': {\r\n                                backgroundColor: 'primary.main',\r\n                                opacity: [0.9, 0.8, 0.7],\r\n                                },\r\n                            }}\r\n                            \r\n                            />\r\n                        {/* <form class=\"LoginForm\" onSubmit={this.handleSubmit}>\r\n                            {this.state.loginError ?\r\n                                <div class=\"CenterItemContainer\"><label>{this.state.loginError}</label></div> : null}\r\n                            <input type=\"text\" name=\"email\" value={this.state.email}\r\n                                    placeholder=\"Email\" required/>\r\n                            <input type=\"password\" name=\"password\" value={this.state.password}\r\n                                    placeholder=\"Password\" required/>\r\n                            \r\n                            <div className=\"ConnectRegister\">\r\n                                \r\n                                <Button onClick={() => this.login()} variant=\"contained\">Login </Button>\r\n                                <Link href=\"/Register\" underline=\"hover\">\r\n                                {'New user? Cretae new account'}\r\n                                </Link>\r\n                            </div>\r\n                        </form> */}\r\n                    </div>\r\n                </main>\r\n            );\r\n        \r\n    }\r\n}","C:\\Users\\galbr\\OneDrive\\Documents\\GitHub\\TradingSystem\\Client\\src\\API\\train.ts",[],[],[],"C:\\Users\\galbr\\OneDrive\\Documents\\GitHub\\TradingSystem\\Client\\src\\API\\ProductApi.js",["146"],[],"import axios from \"axios\";\r\nimport {EMPLOYEE_BASE_REST_API_URL,  FIND_PRODUCT_INFORMATION, FIND_PRODUCTS_BY_NAME, FIND_PRODUCTS_BY_CATEGORY,FIND_PRODUCTS_BY_KEYWORDS \r\n    ,ADD_PRODUCT_TO_CART, EDIT_PRODUCT_QUANTITY_IN_CART,REMOVE_PRODUCT_FROM_CART, ADD_PRODUCT_REVIEW, RATE_PRODUCT, EDIT_PRODUCT_NAME, EDIT_PRODUCT_PRICE, EDIT_PRODUCT_CATEGORY, EDIT_PRODUCT_KEY_WORDS} from \"./ApiPaths\";\r\nimport { Response } from \"./Response\";\r\nimport { Product } from \"../ServiceObjects/Product\";\r\nconst instance = axios.create(\r\n    {withCredentials : true}\r\n);\r\nconst response_obj = new Response(\"\",\"\");\r\n\r\n\r\n\r\nexport class ProductApi {\r\n    testtttt(product_id) {\r\n        return instance.post(EMPLOYEE_BASE_REST_API_URL, \r\n            {\r\n                product_id: product_id,\r\n            })\r\n            .then(res => {\r\n                console.log(\"this is the answer\\n\\n\"+res.data)\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => console.log(\"fuckkkkk\\n\\n\"));\r\n    }\r\n    find_product_information(product_id) {\r\n        return instance.post(FIND_PRODUCT_INFORMATION, \r\n            {\r\n                product_id: product_id,\r\n            })\r\n            .then(res => {\r\n                let response = res.data;\r\n                let product_info = new Product(response.value);\r\n                return response_obj.create(product_info, response.message);\r\n            })\r\n            .catch(res => undefined);\r\n    }\r\n    find_product_by_name(product_name) {\r\n        return instance.post(FIND_PRODUCTS_BY_NAME,\r\n            {\r\n                product_name: product_name,\r\n            })\r\n            .then(res => {\r\n                let response = res.data;\r\n                //traverse the products and create product for each element on the list\r\n                //create response with the list of products\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => undefined);\r\n    }\r\n\r\n    find_product_by_category(product_category) {\r\n        return instance.post(FIND_PRODUCTS_BY_CATEGORY,\r\n            {\r\n                product_category: product_category,\r\n            })\r\n            .then(res => {\r\n                //traverse the products and create product for each element on the list\r\n                //create response with the list of products\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => undefined);\r\n    }\r\n    find_product_by_keywords(product_keywords) {\r\n        return instance.post(FIND_PRODUCTS_BY_KEYWORDS,\r\n            {\r\n                product_keywords: product_keywords,\r\n            })\r\n            .then(res => {\r\n                //traverse the products and create product for each element on the list\r\n                //create response with the list of products\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => undefined);\r\n    }\r\n\r\n    add_product_to_cart(store_id, product_id, quantity) {\r\n        return instance.post(ADD_PRODUCT_TO_CART,\r\n            {\r\n                store_id: store_id,\r\n                product_id: product_id,\r\n                quantity: quantity,\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => undefined);\r\n    }\r\n\r\n    edit_product_quantity_in_cart(store_id, product_id, quantity) {\r\n        return instance.post(EDIT_PRODUCT_QUANTITY_IN_CART,\r\n            {\r\n                store_id: store_id,\r\n                product_id: product_id,\r\n                quantity: quantity,\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => undefined);\r\n    }\r\n\r\n    remove_product_from_cart(store_id, product_id) {\r\n        return instance.post(REMOVE_PRODUCT_FROM_CART,\r\n            {\r\n                store_id: store_id,\r\n                product_id: product_id,\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => undefined);\r\n    }\r\n    \r\n\r\n    add_product_review(product_id, store_id, review) {\r\n        return instance.post(ADD_PRODUCT_REVIEW,\r\n            {\r\n                product_id: product_id,\r\n                store_id: store_id,\r\n                review : review,\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => undefined);\r\n    }\r\n\r\n    rate_product(product_id, store_id, rate) {\r\n        return instance.post(RATE_PRODUCT,\r\n            {\r\n                product_id: product_id,\r\n                store_id: store_id,\r\n                rate : rate,\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => undefined);\r\n    }\r\n\r\n    edit_product_name(product_id, store_id, name) {\r\n        return instance.post(EDIT_PRODUCT_NAME,\r\n            {\r\n                product_id: product_id,\r\n                store_id: store_id,\r\n                name : name,\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => undefined);\r\n    }\r\n\r\n    edit_product_price(product_id, store_id, price) {\r\n        return instance.post(EDIT_PRODUCT_PRICE,\r\n            {\r\n                product_id: product_id,\r\n                store_id: store_id,\r\n                price : price,\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => undefined);\r\n    }\r\n    edit_product_category(product_id, store_id, category) {\r\n        return instance.post(EDIT_PRODUCT_CATEGORY,\r\n            {\r\n                product_id: product_id,\r\n                store_id: store_id,\r\n                category : category,\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => undefined);\r\n    }\r\n    edit_product_key_words(product_id, store_id, key_words) {\r\n        return instance.post(EDIT_PRODUCT_KEY_WORDS,\r\n            {\r\n                product_id: product_id,\r\n                store_id: store_id,\r\n                key_words : key_words,\r\n            })\r\n            .then(res => {\r\n                return new Response(res.data)\r\n            })\r\n            .catch(res => undefined);\r\n    }\r\n}","C:\\Users\\galbr\\OneDrive\\Documents\\GitHub\\TradingSystem\\Client\\src\\API\\ConnectApi.js",[],[],"C:\\Users\\galbr\\OneDrive\\Documents\\GitHub\\TradingSystem\\Client\\src\\API\\ApiPaths.js",[],[],"C:\\Users\\galbr\\OneDrive\\Documents\\GitHub\\TradingSystem\\Client\\src\\API\\Response.js",[],[],"C:\\Users\\galbr\\OneDrive\\Documents\\GitHub\\TradingSystem\\Client\\src\\ServiceObjects\\Product.js",[],[],"C:\\Users\\galbr\\OneDrive\\Documents\\GitHub\\TradingSystem\\Client\\src\\ServiceObjects\\ProductReview.js",[],[],"C:\\Users\\galbr\\OneDrive\\Documents\\GitHub\\TradingSystem\\Client\\src\\components\\ProductPage.js",[],[],"C:\\Users\\galbr\\OneDrive\\Documents\\GitHub\\TradingSystem\\Client\\src\\API\\CartApi.js",[],[],"C:\\Users\\galbr\\OneDrive\\Documents\\GitHub\\TradingSystem\\Client\\src\\ServiceObjects\\Cart.js",[],[],[],{"ruleId":"147","severity":1,"message":"148","line":8,"column":8,"nodeType":"149","messageId":"150","endLine":8,"endColumn":14},{"ruleId":"147","severity":1,"message":"151","line":3,"column":24,"nodeType":"149","messageId":"150","endLine":3,"endColumn":28},{"ruleId":"147","severity":1,"message":"152","line":3,"column":37,"nodeType":"149","messageId":"150","endLine":3,"endColumn":47},{"ruleId":"147","severity":1,"message":"153","line":5,"column":8,"nodeType":"149","messageId":"150","endLine":5,"endColumn":22},{"ruleId":"147","severity":1,"message":"154","line":7,"column":8,"nodeType":"149","messageId":"150","endLine":7,"endColumn":15},{"ruleId":"147","severity":1,"message":"155","line":8,"column":8,"nodeType":"149","messageId":"150","endLine":8,"endColumn":14},{"ruleId":"147","severity":1,"message":"148","line":11,"column":8,"nodeType":"149","messageId":"150","endLine":11,"endColumn":14},{"ruleId":"147","severity":1,"message":"156","line":12,"column":8,"nodeType":"149","messageId":"150","endLine":12,"endColumn":17},{"ruleId":"147","severity":1,"message":"157","line":13,"column":10,"nodeType":"149","messageId":"150","endLine":13,"endColumn":21},{"ruleId":"147","severity":1,"message":"158","line":30,"column":9,"nodeType":"149","messageId":"150","endLine":30,"endColumn":13},{"ruleId":"159","severity":2,"message":"160","line":34,"column":12,"nodeType":"161","messageId":"162","endLine":34,"endColumn":18},{"ruleId":"147","severity":1,"message":"163","line":6,"column":7,"nodeType":"149","messageId":"150","endLine":6,"endColumn":12},{"ruleId":"147","severity":1,"message":"164","line":7,"column":7,"nodeType":"149","messageId":"150","endLine":7,"endColumn":33},{"ruleId":"147","severity":1,"message":"165","line":85,"column":16,"nodeType":"149","messageId":"150","endLine":85,"endColumn":26},{"ruleId":"147","severity":1,"message":"166","line":6,"column":8,"nodeType":"149","messageId":"150","endLine":6,"endColumn":16},{"ruleId":"147","severity":1,"message":"163","line":8,"column":7,"nodeType":"149","messageId":"150","endLine":8,"endColumn":12},{"ruleId":"147","severity":1,"message":"164","line":9,"column":7,"nodeType":"149","messageId":"150","endLine":9,"endColumn":33},{"ruleId":"147","severity":1,"message":"165","line":86,"column":16,"nodeType":"149","messageId":"150","endLine":86,"endColumn":26},{"ruleId":"147","severity":1,"message":"167","line":4,"column":10,"nodeType":"149","messageId":"150","endLine":4,"endColumn":20},{"ruleId":"147","severity":1,"message":"163","line":6,"column":7,"nodeType":"149","messageId":"150","endLine":6,"endColumn":12},{"ruleId":"147","severity":1,"message":"164","line":7,"column":7,"nodeType":"149","messageId":"150","endLine":7,"endColumn":33},{"ruleId":"147","severity":1,"message":"165","line":85,"column":16,"nodeType":"149","messageId":"150","endLine":85,"endColumn":26},{"ruleId":"147","severity":1,"message":"168","line":7,"column":8,"nodeType":"149","messageId":"150","endLine":7,"endColumn":13},{"ruleId":"147","severity":1,"message":"163","line":9,"column":7,"nodeType":"149","messageId":"150","endLine":9,"endColumn":12},{"ruleId":"147","severity":1,"message":"164","line":10,"column":7,"nodeType":"149","messageId":"150","endLine":10,"endColumn":33},{"ruleId":"147","severity":1,"message":"165","line":47,"column":16,"nodeType":"149","messageId":"150","endLine":47,"endColumn":26},{"ruleId":"147","severity":1,"message":"167","line":4,"column":10,"nodeType":"149","messageId":"150","endLine":4,"endColumn":20},{"ruleId":"147","severity":1,"message":"163","line":6,"column":7,"nodeType":"149","messageId":"150","endLine":6,"endColumn":12},{"ruleId":"147","severity":1,"message":"164","line":7,"column":7,"nodeType":"149","messageId":"150","endLine":7,"endColumn":33},{"ruleId":"147","severity":1,"message":"169","line":76,"column":13,"nodeType":"149","messageId":"150","endLine":76,"endColumn":16},{"ruleId":"147","severity":1,"message":"165","line":83,"column":16,"nodeType":"149","messageId":"150","endLine":83,"endColumn":26},{"ruleId":"147","severity":1,"message":"148","line":3,"column":8,"nodeType":"149","messageId":"150","endLine":3,"endColumn":14},{"ruleId":"147","severity":1,"message":"151","line":4,"column":8,"nodeType":"149","messageId":"150","endLine":4,"endColumn":12},{"ruleId":"147","severity":1,"message":"167","line":5,"column":10,"nodeType":"149","messageId":"150","endLine":5,"endColumn":20},{"ruleId":"147","severity":1,"message":"166","line":6,"column":8,"nodeType":"149","messageId":"150","endLine":6,"endColumn":16},{"ruleId":"147","severity":1,"message":"163","line":9,"column":7,"nodeType":"149","messageId":"150","endLine":9,"endColumn":12},{"ruleId":"147","severity":1,"message":"164","line":10,"column":7,"nodeType":"149","messageId":"150","endLine":10,"endColumn":33},{"ruleId":"147","severity":1,"message":"165","line":34,"column":16,"nodeType":"149","messageId":"150","endLine":34,"endColumn":26},{"ruleId":"147","severity":1,"message":"170","line":43,"column":21,"nodeType":"149","messageId":"150","endLine":43,"endColumn":29},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useHistory' is defined but never used.","'HomePageSearch' is defined but never used.","'Payment' is defined but never used.","'Supply' is defined but never used.","'StorePage' is defined but never used.","'ProductPage' is defined but never used.","'prod' is assigned a value but never used.","react/jsx-no-undef","'Layout' is not defined.","JSXIdentifier","undefined","'axios' is assigned a value but never used.","'EMPLOYEE_BASE_REST_API_URL' is assigned a value but never used.","'redirectTo' is assigned a value but never used.","'Register' is defined but never used.","'ConnectApi' is defined but never used.","'train' is defined but never used.","'cvv' is assigned a value but never used.","'response' is assigned a value but never used."]