{"ast":null,"code":"// import axios from \"axios\";\nimport { EMPLOYEE_BASE_REST_API_URL, LOGIN_PATH, REGISTER_PATH, LOGOUT_PATH } from \"./ApiPaths\";\nimport { Response } from \"./Response\";\nimport { User } from \"../ServiceObjects/User\"; // const instance = axios.create(\n//     {withCredentials : true}\n// );\n\nconst instance = require('axios');\n\nconst WEBSOCKETURL = \"ws://localhost:8080/chat\";\nexport class ConnectApi {\n  //  amit (a) {\n  //     console.log(\"pooo\\n\\n\\n\\n\\n\");\n  //     return  axioss.post(EMPLOYEE_BASE_REST_API_URL)\n  //         .then(res => {\n  //             console.log(\"yessss\\n\\n\\n\\n\\n\");\n  //             return new Response(res.data);\n  //         })\n  //         .catch(res => console.log(\"nooooooo\\n\\n\\n\\n\\n\"));\n  // }\n  login(email, password) {\n    return instance.get(LOGIN_PATH, {\n      params: {\n        email: email,\n        password: password\n      }\n    }).then(res => {\n      // const websocket = require('ws');\n      // var ws = new websocket(WEBSOCKETURL);\n      // ws.onopen = function(data) {ws.send(\"-email- want to open web socket with the server\");};\n      // ws.onmessage = function(data) {\n      //     alert(\"new notification!\");\n      //     // update notifications UI with the new notification \n      //     console.log(data);\n      //  }\n      const user = new User(res.data.value);\n      return Response.create(user, res.data.wasException, res.data.message);\n    }).catch(res => undefined);\n  }\n\n  logout() {\n    return instance.get(LOGOUT_PATH).then(res => {\n      return Response.create(null, res.data.wasException, res.data.message);\n    }).catch(res => undefined);\n  }\n\n  register(email, password, first_name, last_name, birthdate) {\n    return instance.get(REGISTER_PATH, {\n      params: {\n        email: email,\n        pw: password,\n        name: first_name,\n        lastName: last_name,\n        birth_date: birthdate\n      }\n    }).then(res => {\n      console.log(res.data.value.birth_date + \"this is the print\");\n      const user = new User(res.data.value);\n      return Response.create(user, res.data.wasException, res.data.message);\n    }).catch(res => Response.create(null, true, \"http failure\"));\n  }\n\n}","map":{"version":3,"names":["EMPLOYEE_BASE_REST_API_URL","LOGIN_PATH","REGISTER_PATH","LOGOUT_PATH","Response","User","instance","require","WEBSOCKETURL","ConnectApi","login","email","password","get","params","then","res","user","data","value","create","wasException","message","catch","undefined","logout","register","first_name","last_name","birthdate","pw","name","lastName","birth_date","console","log"],"sources":["C:/Users/galbr/OneDrive/Documents/GitHub/TradingSystem/Client/src/API/ConnectApi.js"],"sourcesContent":["// import axios from \"axios\";\r\nimport {EMPLOYEE_BASE_REST_API_URL, LOGIN_PATH, REGISTER_PATH,LOGOUT_PATH} from \"./ApiPaths\";\r\nimport { Response } from \"./Response\";\r\nimport { User } from \"../ServiceObjects/User\";\r\n// const instance = axios.create(\r\n//     {withCredentials : true}\r\n// );\r\nconst instance = require('axios');\r\nconst WEBSOCKETURL = \"ws://localhost:8080/chat\";\r\nexport class ConnectApi {\r\n\r\n    //  amit (a) {\r\n    //     console.log(\"pooo\\n\\n\\n\\n\\n\");\r\n    //     return  axioss.post(EMPLOYEE_BASE_REST_API_URL)\r\n    //         .then(res => {\r\n    //             console.log(\"yessss\\n\\n\\n\\n\\n\");\r\n    //             return new Response(res.data);\r\n    //         })\r\n    //         .catch(res => console.log(\"nooooooo\\n\\n\\n\\n\\n\"));\r\n\r\n    // }\r\n    \r\n    login(email, password) {\r\n        return instance.get(LOGIN_PATH,\r\n            {\r\n                params:{ email: email,\r\n                    password: password,}\r\n                \r\n            })\r\n            .then(res => {\r\n                // const websocket = require('ws');\r\n                // var ws = new websocket(WEBSOCKETURL);\r\n                \r\n                // ws.onopen = function(data) {ws.send(\"-email- want to open web socket with the server\");};\r\n                // ws.onmessage = function(data) {\r\n                //     alert(\"new notification!\");\r\n                //     // update notifications UI with the new notification \r\n                //     console.log(data);\r\n                //  }\r\n                const user = new User(res.data.value);\r\n                return Response.create(user,res.data.wasException,res.data.message);\r\n            })\r\n            .catch(res => undefined);\r\n    }\r\n\r\n    logout() {\r\n        return instance.get(LOGOUT_PATH)\r\n            .then(res => {\r\n                return Response.create(null,res.data.wasException,res.data.message);\r\n            })\r\n            .catch(res => undefined);\r\n    }\r\n    \r\n    register(email, password, first_name, last_name, birthdate) {\r\n        return instance.get(REGISTER_PATH,\r\n            {\r\n                params:{email: email,\r\n                    pw: password,\r\n                    name: first_name,\r\n                    lastName: last_name,\r\n                birth_date : birthdate,}\r\n                \r\n            })\r\n            .then(res => {\r\n                console.log(res.data.value.birth_date+\"this is the print\");\r\n                const user = new User(res.data.value);\r\n                return Response.create(user,res.data.wasException,res.data.message);\r\n            }).catch(res => Response.create(null,true,\"http failure\"));\r\n    }\r\n}"],"mappings":"AAAA;AACA,SAAQA,0BAAR,EAAoCC,UAApC,EAAgDC,aAAhD,EAA8DC,WAA9D,QAAgF,YAAhF;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,IAAT,QAAqB,wBAArB,C,CACA;AACA;AACA;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,OAAD,CAAxB;;AACA,MAAMC,YAAY,GAAG,0BAArB;AACA,OAAO,MAAMC,UAAN,CAAiB;EAEpB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EAEAC,KAAK,CAACC,KAAD,EAAQC,QAAR,EAAkB;IACnB,OAAON,QAAQ,CAACO,GAAT,CAAaZ,UAAb,EACH;MACIa,MAAM,EAAC;QAAEH,KAAK,EAAEA,KAAT;QACHC,QAAQ,EAAEA;MADP;IADX,CADG,EAMFG,IANE,CAMGC,GAAG,IAAI;MACT;MACA;MAEA;MACA;MACA;MACA;MACA;MACA;MACA,MAAMC,IAAI,GAAG,IAAIZ,IAAJ,CAASW,GAAG,CAACE,IAAJ,CAASC,KAAlB,CAAb;MACA,OAAOf,QAAQ,CAACgB,MAAT,CAAgBH,IAAhB,EAAqBD,GAAG,CAACE,IAAJ,CAASG,YAA9B,EAA2CL,GAAG,CAACE,IAAJ,CAASI,OAApD,CAAP;IACH,CAlBE,EAmBFC,KAnBE,CAmBIP,GAAG,IAAIQ,SAnBX,CAAP;EAoBH;;EAEDC,MAAM,GAAG;IACL,OAAOnB,QAAQ,CAACO,GAAT,CAAaV,WAAb,EACFY,IADE,CACGC,GAAG,IAAI;MACT,OAAOZ,QAAQ,CAACgB,MAAT,CAAgB,IAAhB,EAAqBJ,GAAG,CAACE,IAAJ,CAASG,YAA9B,EAA2CL,GAAG,CAACE,IAAJ,CAASI,OAApD,CAAP;IACH,CAHE,EAIFC,KAJE,CAIIP,GAAG,IAAIQ,SAJX,CAAP;EAKH;;EAEDE,QAAQ,CAACf,KAAD,EAAQC,QAAR,EAAkBe,UAAlB,EAA8BC,SAA9B,EAAyCC,SAAzC,EAAoD;IACxD,OAAOvB,QAAQ,CAACO,GAAT,CAAaX,aAAb,EACH;MACIY,MAAM,EAAC;QAACH,KAAK,EAAEA,KAAR;QACHmB,EAAE,EAAElB,QADD;QAEHmB,IAAI,EAAEJ,UAFH;QAGHK,QAAQ,EAAEJ,SAHP;QAIPK,UAAU,EAAGJ;MAJN;IADX,CADG,EASFd,IATE,CASGC,GAAG,IAAI;MACTkB,OAAO,CAACC,GAAR,CAAYnB,GAAG,CAACE,IAAJ,CAASC,KAAT,CAAec,UAAf,GAA0B,mBAAtC;MACA,MAAMhB,IAAI,GAAG,IAAIZ,IAAJ,CAASW,GAAG,CAACE,IAAJ,CAASC,KAAlB,CAAb;MACA,OAAOf,QAAQ,CAACgB,MAAT,CAAgBH,IAAhB,EAAqBD,GAAG,CAACE,IAAJ,CAASG,YAA9B,EAA2CL,GAAG,CAACE,IAAJ,CAASI,OAApD,CAAP;IACH,CAbE,EAaAC,KAbA,CAaMP,GAAG,IAAIZ,QAAQ,CAACgB,MAAT,CAAgB,IAAhB,EAAqB,IAArB,EAA0B,cAA1B,CAbb,CAAP;EAcH;;AA3DmB"},"metadata":{},"sourceType":"module"}